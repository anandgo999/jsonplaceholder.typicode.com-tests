<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210205 20:19:48.976" rpa="false">
<suite id="s1" name="TS001 Posts" source="C:\typicodefinal\jsonplaceholder.typicode.com-tests\RobotAutomation\TestCases\GetPostsTC\TS001_Posts.robot">
<test id="s1-t1" name="TC001 VALIDATE GET ALL POSTS ENDPOINT">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:49.856" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:49.854" endtime="20210205 20:19:49.856"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:19:49.859" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:49.857" endtime="20210205 20:19:49.859"></status>
</kw>
<msg timestamp="20210205 20:19:49.859" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:49.853" endtime="20210205 20:19:49.860"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.862" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:49.860" endtime="20210205 20:19:49.862"></status>
</kw>
<msg timestamp="20210205 20:19:49.862" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:19:49.860" endtime="20210205 20:19:49.862"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.865" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:49.863" endtime="20210205 20:19:49.865"></status>
</kw>
<msg timestamp="20210205 20:19:49.866" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:49.862" endtime="20210205 20:19:49.866"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.868" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:49.867" endtime="20210205 20:19:49.868"></status>
</kw>
<msg timestamp="20210205 20:19:49.868" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:49.866" endtime="20210205 20:19:49.868"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.870" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:49.869" endtime="20210205 20:19:49.870"></status>
</kw>
<msg timestamp="20210205 20:19:49.870" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:19:49.868" endtime="20210205 20:19:49.870"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.873" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:49.872" endtime="20210205 20:19:49.873"></status>
</kw>
<msg timestamp="20210205 20:19:49.873" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:49.870" endtime="20210205 20:19:49.873"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.876" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:49.874" endtime="20210205 20:19:49.876"></status>
</kw>
<msg timestamp="20210205 20:19:49.876" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:49.874" endtime="20210205 20:19:49.876"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.879" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:19:49.877" endtime="20210205 20:19:49.879"></status>
</kw>
<msg timestamp="20210205 20:19:49.879" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:49.877" endtime="20210205 20:19:49.879"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.881" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:49.880" endtime="20210205 20:19:49.882"></status>
</kw>
<msg timestamp="20210205 20:19:49.882" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:49.880" endtime="20210205 20:19:49.882"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.885" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:49.883" endtime="20210205 20:19:49.885"></status>
</kw>
<msg timestamp="20210205 20:19:49.886" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:19:49.882" endtime="20210205 20:19:49.886"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.890" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:49.889" endtime="20210205 20:19:49.891"></status>
</kw>
<msg timestamp="20210205 20:19:49.891" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:49.886" endtime="20210205 20:19:49.891"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:49.894" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:19:49.892" endtime="20210205 20:19:49.894"></status>
</kw>
<msg timestamp="20210205 20:19:49.894" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:49.891" endtime="20210205 20:19:49.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.895" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:49.894" endtime="20210205 20:19:49.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:19:49.897" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:19:49.896" endtime="20210205 20:19:49.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.898" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:19:49.897" endtime="20210205 20:19:49.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.899" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:49.898" endtime="20210205 20:19:49.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.900" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:49.899" endtime="20210205 20:19:49.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.902" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:19:49.900" endtime="20210205 20:19:49.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.903" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:49.902" endtime="20210205 20:19:49.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.904" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:49.903" endtime="20210205 20:19:49.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.906" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:49.905" endtime="20210205 20:19:49.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.907" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:49.906" endtime="20210205 20:19:49.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.910" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:19:49.908" endtime="20210205 20:19:49.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.912" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:49.910" endtime="20210205 20:19:49.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.913" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:49.912" endtime="20210205 20:19:49.914"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:49.852" endtime="20210205 20:19:49.914"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_All_Posts</arg>
<arg>${base_url}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:49.919" level="INFO">Creating Session using : alias=Get_All_Posts, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:49.918" endtime="20210205 20:19:49.920"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:50.015" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:50.016" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:51 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d86f45329d691e8befa83919d9f3bb2ba1612574391; expires=Mon, 08-Mar-21 01:19:51 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612488045', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '28764', 'cf-request-id': '08168593ea0000299abba0f000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=fFNXkO8IwMNoNsWadDtC3pkOWPddpZzaCqnAngM8ZGZKhI5AW0%2BHrTCCAxEfjFAHLgheEQaVbZw0La6frIkmbJwsL3vYoscujfXTxiBIRqEqtanq%2Fh6ZjmZqAAkN"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10b997e09299a-IAD'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 20:19:50.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:49.920" endtime="20210205 20:19:50.016"></status>
</kw>
<msg timestamp="20210205 20:19:50.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:49.915" endtime="20210205 20:19:50.017"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>All</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.020" endtime="20210205 20:19:50.039"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.020" endtime="20210205 20:19:50.039"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.018" endtime="20210205 20:19:50.040"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.042" endtime="20210205 20:19:50.043"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.040" endtime="20210205 20:19:50.043"></status>
</kw>
<kw name="VALIDATE RESPONSE SIZE" library="PostsHelper">
<arguments>
<arg>${allpostcnt}</arg>
<arg>${response}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idlist}</var>
</assign>
<msg timestamp="20210205 20:19:50.047" level="INFO">@{idlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:50.046" endtime="20210205 20:19:50.047"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.049" endtime="20210205 20:19:50.050"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.049" endtime="20210205 20:19:50.050"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.051" endtime="20210205 20:19:50.051"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.050" endtime="20210205 20:19:50.051"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.052" endtime="20210205 20:19:50.052"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.052" endtime="20210205 20:19:50.053"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.053" endtime="20210205 20:19:50.054"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.053" endtime="20210205 20:19:50.054"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.054" endtime="20210205 20:19:50.055"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.054" endtime="20210205 20:19:50.055"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.055" endtime="20210205 20:19:50.056"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.055" endtime="20210205 20:19:50.056"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.056" endtime="20210205 20:19:50.057"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.056" endtime="20210205 20:19:50.057"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.057" endtime="20210205 20:19:50.058"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.057" endtime="20210205 20:19:50.058"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.059" endtime="20210205 20:19:50.061"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.058" endtime="20210205 20:19:50.061"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.062" endtime="20210205 20:19:50.063"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.061" endtime="20210205 20:19:50.063"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.064" endtime="20210205 20:19:50.064"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.063" endtime="20210205 20:19:50.064"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.065" endtime="20210205 20:19:50.065"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.065" endtime="20210205 20:19:50.066"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.066" endtime="20210205 20:19:50.067"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.066" endtime="20210205 20:19:50.067"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.067" endtime="20210205 20:19:50.068"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.067" endtime="20210205 20:19:50.068"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.068" endtime="20210205 20:19:50.069"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.068" endtime="20210205 20:19:50.069"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.070" endtime="20210205 20:19:50.071"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.070" endtime="20210205 20:19:50.071"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.072" endtime="20210205 20:19:50.072"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.071" endtime="20210205 20:19:50.073"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.073" endtime="20210205 20:19:50.074"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.073" endtime="20210205 20:19:50.074"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.074" endtime="20210205 20:19:50.075"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.074" endtime="20210205 20:19:50.075"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.076" endtime="20210205 20:19:50.077"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.075" endtime="20210205 20:19:50.077"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.078" endtime="20210205 20:19:50.079"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.078" endtime="20210205 20:19:50.079"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.080" endtime="20210205 20:19:50.081"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.079" endtime="20210205 20:19:50.081"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.081" endtime="20210205 20:19:50.082"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.081" endtime="20210205 20:19:50.082"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.082" endtime="20210205 20:19:50.083"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.082" endtime="20210205 20:19:50.083"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.083" endtime="20210205 20:19:50.084"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.083" endtime="20210205 20:19:50.084"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.084" endtime="20210205 20:19:50.085"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.084" endtime="20210205 20:19:50.085"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.085" endtime="20210205 20:19:50.086"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.085" endtime="20210205 20:19:50.086"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.086" endtime="20210205 20:19:50.087"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.086" endtime="20210205 20:19:50.087"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.087" endtime="20210205 20:19:50.088"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.087" endtime="20210205 20:19:50.088"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.089" endtime="20210205 20:19:50.089"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.089" endtime="20210205 20:19:50.090"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.090" endtime="20210205 20:19:50.091"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.090" endtime="20210205 20:19:50.091"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.091" endtime="20210205 20:19:50.092"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.091" endtime="20210205 20:19:50.093"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.094" endtime="20210205 20:19:50.095"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.093" endtime="20210205 20:19:50.095"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.096" endtime="20210205 20:19:50.096"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.095" endtime="20210205 20:19:50.097"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.097" endtime="20210205 20:19:50.098"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.097" endtime="20210205 20:19:50.099"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.099" endtime="20210205 20:19:50.100"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.099" endtime="20210205 20:19:50.100"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.101" endtime="20210205 20:19:50.102"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.100" endtime="20210205 20:19:50.102"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.103" endtime="20210205 20:19:50.104"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.102" endtime="20210205 20:19:50.104"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.104" endtime="20210205 20:19:50.105"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.104" endtime="20210205 20:19:50.105"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.106" endtime="20210205 20:19:50.106"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.105" endtime="20210205 20:19:50.106"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.107" endtime="20210205 20:19:50.107"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.107" endtime="20210205 20:19:50.108"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.108" endtime="20210205 20:19:50.109"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.108" endtime="20210205 20:19:50.109"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.109" endtime="20210205 20:19:50.110"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.109" endtime="20210205 20:19:50.110"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.111" endtime="20210205 20:19:50.112"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.111" endtime="20210205 20:19:50.112"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.113" endtime="20210205 20:19:50.115"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.113" endtime="20210205 20:19:50.115"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.115" endtime="20210205 20:19:50.117"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.115" endtime="20210205 20:19:50.117"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.118" endtime="20210205 20:19:50.118"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.117" endtime="20210205 20:19:50.118"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.119" endtime="20210205 20:19:50.120"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.118" endtime="20210205 20:19:50.120"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.121" endtime="20210205 20:19:50.122"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.120" endtime="20210205 20:19:50.122"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.122" endtime="20210205 20:19:50.123"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.122" endtime="20210205 20:19:50.124"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.125" endtime="20210205 20:19:50.126"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.124" endtime="20210205 20:19:50.126"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.127" endtime="20210205 20:19:50.128"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.126" endtime="20210205 20:19:50.128"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.128" endtime="20210205 20:19:50.130"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.128" endtime="20210205 20:19:50.130"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.131" endtime="20210205 20:19:50.132"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.130" endtime="20210205 20:19:50.132"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.132" endtime="20210205 20:19:50.133"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.132" endtime="20210205 20:19:50.133"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.134" endtime="20210205 20:19:50.134"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.133" endtime="20210205 20:19:50.134"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.135" endtime="20210205 20:19:50.135"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.134" endtime="20210205 20:19:50.135"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.136" endtime="20210205 20:19:50.137"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.136" endtime="20210205 20:19:50.137"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.138" endtime="20210205 20:19:50.140"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.138" endtime="20210205 20:19:50.140"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.142" endtime="20210205 20:19:50.143"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.141" endtime="20210205 20:19:50.143"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.143" endtime="20210205 20:19:50.145"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.143" endtime="20210205 20:19:50.145"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.145" endtime="20210205 20:19:50.146"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.145" endtime="20210205 20:19:50.146"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.147" endtime="20210205 20:19:50.148"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.147" endtime="20210205 20:19:50.149"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.149" endtime="20210205 20:19:50.150"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.149" endtime="20210205 20:19:50.150"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.151" endtime="20210205 20:19:50.151"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.150" endtime="20210205 20:19:50.151"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.152" endtime="20210205 20:19:50.152"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.152" endtime="20210205 20:19:50.153"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.153" endtime="20210205 20:19:50.154"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.153" endtime="20210205 20:19:50.154"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.155" endtime="20210205 20:19:50.156"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.154" endtime="20210205 20:19:50.156"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.157" endtime="20210205 20:19:50.158"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.157" endtime="20210205 20:19:50.158"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.159" endtime="20210205 20:19:50.160"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.158" endtime="20210205 20:19:50.160"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.161" endtime="20210205 20:19:50.161"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.160" endtime="20210205 20:19:50.161"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.162" endtime="20210205 20:19:50.162"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.162" endtime="20210205 20:19:50.163"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.163" endtime="20210205 20:19:50.164"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.163" endtime="20210205 20:19:50.164"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.165" endtime="20210205 20:19:50.166"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.164" endtime="20210205 20:19:50.166"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.167" endtime="20210205 20:19:50.168"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.166" endtime="20210205 20:19:50.168"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.168" endtime="20210205 20:19:50.169"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.168" endtime="20210205 20:19:50.169"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.170" endtime="20210205 20:19:50.171"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.170" endtime="20210205 20:19:50.171"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.172" endtime="20210205 20:19:50.173"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.172" endtime="20210205 20:19:50.173"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.173" endtime="20210205 20:19:50.174"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.173" endtime="20210205 20:19:50.174"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.174" endtime="20210205 20:19:50.175"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.174" endtime="20210205 20:19:50.175"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.175" endtime="20210205 20:19:50.176"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.175" endtime="20210205 20:19:50.176"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.176" endtime="20210205 20:19:50.177"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.176" endtime="20210205 20:19:50.177"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.177" endtime="20210205 20:19:50.178"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.177" endtime="20210205 20:19:50.178"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.178" endtime="20210205 20:19:50.179"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.178" endtime="20210205 20:19:50.179"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.179" endtime="20210205 20:19:50.180"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.179" endtime="20210205 20:19:50.180"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.180" endtime="20210205 20:19:50.181"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.180" endtime="20210205 20:19:50.181"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.181" endtime="20210205 20:19:50.182"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.181" endtime="20210205 20:19:50.182"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.182" endtime="20210205 20:19:50.183"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.182" endtime="20210205 20:19:50.183"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.183" endtime="20210205 20:19:50.184"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.183" endtime="20210205 20:19:50.184"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.184" endtime="20210205 20:19:50.185"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.184" endtime="20210205 20:19:50.185"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.186" endtime="20210205 20:19:50.186"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.185" endtime="20210205 20:19:50.187"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.188" endtime="20210205 20:19:50.189"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.187" endtime="20210205 20:19:50.189"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.190" endtime="20210205 20:19:50.191"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.190" endtime="20210205 20:19:50.191"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.192" endtime="20210205 20:19:50.193"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.191" endtime="20210205 20:19:50.193"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.193" endtime="20210205 20:19:50.194"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.193" endtime="20210205 20:19:50.194"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.194" endtime="20210205 20:19:50.195"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.194" endtime="20210205 20:19:50.195"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.196" endtime="20210205 20:19:50.196"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.195" endtime="20210205 20:19:50.196"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.197" endtime="20210205 20:19:50.197"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.196" endtime="20210205 20:19:50.197"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.198" endtime="20210205 20:19:50.199"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.198" endtime="20210205 20:19:50.199"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${idlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.199" endtime="20210205 20:19:50.199"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.199" endtime="20210205 20:19:50.200"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.047" endtime="20210205 20:19:50.200"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${idlist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:19:50.200" level="INFO">Length is 100</msg>
<msg timestamp="20210205 20:19:50.200" level="INFO">${cnt} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.200" endtime="20210205 20:19:50.200"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${cnt}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.201" endtime="20210205 20:19:50.201"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idlist}</var>
</assign>
<msg timestamp="20210205 20:19:50.201" level="INFO">@{idlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:50.201" endtime="20210205 20:19:50.201"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.044" endtime="20210205 20:19:50.202"></status>
</kw>
<doc>Validate Get All Posts REST endpoint status code, response size and user post count</doc>
<tags>
<tag>Positive</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:19:49.851" endtime="20210205 20:19:50.203" critical="yes"></status>
</test>
<test id="s1-t2" name="TC002 VALIDATE POST COUNT BY USER ID - VALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:50.212" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:50.211" endtime="20210205 20:19:50.212"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:19:50.214" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.212" endtime="20210205 20:19:50.214"></status>
</kw>
<msg timestamp="20210205 20:19:50.214" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.210" endtime="20210205 20:19:50.214"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.222" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.221" endtime="20210205 20:19:50.223"></status>
</kw>
<msg timestamp="20210205 20:19:50.223" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.215" endtime="20210205 20:19:50.223"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.227" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.225" endtime="20210205 20:19:50.227"></status>
</kw>
<msg timestamp="20210205 20:19:50.228" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.224" endtime="20210205 20:19:50.228"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.231" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.230" endtime="20210205 20:19:50.231"></status>
</kw>
<msg timestamp="20210205 20:19:50.232" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.228" endtime="20210205 20:19:50.232"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.235" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.233" endtime="20210205 20:19:50.235"></status>
</kw>
<msg timestamp="20210205 20:19:50.236" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.232" endtime="20210205 20:19:50.236"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.239" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.237" endtime="20210205 20:19:50.239"></status>
</kw>
<msg timestamp="20210205 20:19:50.239" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.236" endtime="20210205 20:19:50.239"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.243" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.241" endtime="20210205 20:19:50.243"></status>
</kw>
<msg timestamp="20210205 20:19:50.247" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.240" endtime="20210205 20:19:50.248"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.253" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:19:50.250" endtime="20210205 20:19:50.253"></status>
</kw>
<msg timestamp="20210205 20:19:50.254" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:50.249" endtime="20210205 20:19:50.254"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.257" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.255" endtime="20210205 20:19:50.257"></status>
</kw>
<msg timestamp="20210205 20:19:50.257" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.254" endtime="20210205 20:19:50.257"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.261" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.259" endtime="20210205 20:19:50.262"></status>
</kw>
<msg timestamp="20210205 20:19:50.262" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.258" endtime="20210205 20:19:50.262"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.267" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.264" endtime="20210205 20:19:50.267"></status>
</kw>
<msg timestamp="20210205 20:19:50.267" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.262" endtime="20210205 20:19:50.268"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.271" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:19:50.269" endtime="20210205 20:19:50.271"></status>
</kw>
<msg timestamp="20210205 20:19:50.271" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:50.268" endtime="20210205 20:19:50.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.273" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.272" endtime="20210205 20:19:50.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:19:50.274" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:19:50.273" endtime="20210205 20:19:50.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.276" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.275" endtime="20210205 20:19:50.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.277" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.277" endtime="20210205 20:19:50.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.286" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.278" endtime="20210205 20:19:50.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.288" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.287" endtime="20210205 20:19:50.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.289" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.289" endtime="20210205 20:19:50.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.291" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.290" endtime="20210205 20:19:50.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.294" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:50.291" endtime="20210205 20:19:50.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.296" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.295" endtime="20210205 20:19:50.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.298" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.297" endtime="20210205 20:19:50.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.299" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.299" endtime="20210205 20:19:50.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.301" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:50.300" endtime="20210205 20:19:50.301"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.209" endtime="20210205 20:19:50.301"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Valid Id Boundary Keys on TestData.json: users.validInitial, users.validInitCount, users.validFinal, users.validFinalCCount</arg>
</arguments>
<msg timestamp="20210205 20:19:50.303" level="INFO">Set test documentation to:
Valid Id Boundary Keys on TestData.json: users.validInitial, users.validInitCount, users.validFinal, users.validFinalCCount</msg>
<status status="PASS" starttime="20210205 20:19:50.302" endtime="20210205 20:19:50.303"></status>
</kw>
<kw name="VALIDATE POST COUNT BY USER ID" library="PostsHelper">
<arguments>
<arg>${userinId}</arg>
<arg>${userinCount}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:50.306" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:50.305" endtime="20210205 20:19:50.307"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:50.309" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.307" endtime="20210205 20:19:50.310"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.313" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:50.312" endtime="20210205 20:19:50.314"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:50.354" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/1/posts 
 path_url=/users/1/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:50.354" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/1/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:51 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d25c2e12c02c970fc2a1774cf8e238be11612574391; expires=Mon, 08-Mar-21 01:19:51 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612494887', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"aa6-j2NSH739l9uq40OywFMn7Y0C/iY"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12500', 'cf-request-id': '081685954600002ad0d8895000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=FfH6NwSLFjbWJVKxTEGdDNkrWxhgVfl%2Bfw2F2xBT8kG%2BogbR5a7uOZgF0V64D75YYARwE8qN2yuF2%2Bsutrc%2FnHPoHBNilBkHuPHJgJNtXl9fU3AYoI75hhxzwFBq"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10b9ba9062ad0-IAD'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  }
] 
 </msg>
<msg timestamp="20210205 20:19:50.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.314" endtime="20210205 20:19:50.355"></status>
</kw>
<msg timestamp="20210205 20:19:50.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.310" endtime="20210205 20:19:50.355"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="PostsHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 20:19:50.357" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:50.357" endtime="20210205 20:19:50.357"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.359" endtime="20210205 20:19:50.360"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.358" endtime="20210205 20:19:50.360"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.361" endtime="20210205 20:19:50.362"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.361" endtime="20210205 20:19:50.362"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.362" endtime="20210205 20:19:50.363"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.362" endtime="20210205 20:19:50.363"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.363" endtime="20210205 20:19:50.363"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.363" endtime="20210205 20:19:50.363"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.364" endtime="20210205 20:19:50.364"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.363" endtime="20210205 20:19:50.364"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.364" endtime="20210205 20:19:50.365"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.364" endtime="20210205 20:19:50.365"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.365" endtime="20210205 20:19:50.365"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.365" endtime="20210205 20:19:50.366"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.366" endtime="20210205 20:19:50.366"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.366" endtime="20210205 20:19:50.366"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.366" endtime="20210205 20:19:50.367"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.366" endtime="20210205 20:19:50.367"></status>
</kw>
<kw name="${data} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.367" endtime="20210205 20:19:50.368"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.367" endtime="20210205 20:19:50.368"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.357" endtime="20210205 20:19:50.368"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:19:50.368" level="INFO">Length is 10</msg>
<msg timestamp="20210205 20:19:50.368" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.368" endtime="20210205 20:19:50.368"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 20:19:50.369" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:50.368" endtime="20210205 20:19:50.369"></status>
</kw>
<msg timestamp="20210205 20:19:50.369" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.355" endtime="20210205 20:19:50.369"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${exppostcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.369" endtime="20210205 20:19:50.370"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.304" endtime="20210205 20:19:50.370"></status>
</kw>
<kw name="VALIDATE POST COUNT BY USER ID" library="PostsHelper">
<arguments>
<arg>${userfId}</arg>
<arg>${userfCount}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:50.373" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:50.372" endtime="20210205 20:19:50.373"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:50.376" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.374" endtime="20210205 20:19:50.376"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.379" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:50.378" endtime="20210205 20:19:50.380"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:50.426" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/10/posts 
 path_url=/users/10/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:50.427" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/10/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:51 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dff50d7dda77dd7494067cf03595f5a8b1612574391; expires=Mon, 08-Mar-21 01:19:51 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612552601', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"a68-bp+xhXz2hSYZZUvrpfEFLIhQbe4"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '21845', 'cf-request-id': '081685958c00003806de2ab000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=FbruTuOAfg%2FKWDWnAfQ%2FFW7B%2BIACLWEU6cA8gse0sJxXuOjstG2Zv5ZiFCu%2FPldA8X7%2B1FzBW15hs%2BqOnxnqz%2FOGfpNjLJJFk3xOhoOKHmuett5%2FtbAEZcYeL0D2"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10b9c18623806-IAD'} 
 body=[
  {
    "userId": 10,
    "id": 91,
    "title": "aut amet sed",
    "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
  },
  {
    "userId": 10,
    "id": 92,
    "title": "ratione ex tenetur perferendis",
    "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
  },
  {
    "userId": 10,
    "id": 93,
    "title": "beatae soluta recusandae",
    "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
  },
  {
    "userId": 10,
    "id": 94,
    "title": "qui qui voluptates illo iste minima",
    "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
  },
  {
    "userId": 10,
    "id": 95,
    "title": "id minus libero illum nam ad officiis",
    "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
  },
  {
    "userId": 10,
    "id": 96,
    "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
    "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
  },
  {
    "userId": 10,
    "id": 97,
    "title": "quas fugiat ut perspiciatis vero provident",
    "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
  },
  {
    "userId": 10,
    "id": 98,
    "title": "laboriosam dolor voluptates",
    "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
  },
  {
    "userId": 10,
    "id": 99,
    "title": "temporibus sit alias delectus eligendi possimus magni",
    "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
  },
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<msg timestamp="20210205 20:19:50.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.380" endtime="20210205 20:19:50.428"></status>
</kw>
<msg timestamp="20210205 20:19:50.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.376" endtime="20210205 20:19:50.429"></status>
</kw>
<kw name="ITERATE RESPONSE COUNT" library="PostsHelper">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>${postcount}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 20:19:50.431" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:50.431" endtime="20210205 20:19:50.431"></status>
</kw>
<kw name="${data} IN [ @{response.json()} ]" type="for">
<kw name="${data} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.433" endtime="20210205 20:19:50.434"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.432" endtime="20210205 20:19:50.434"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.434" endtime="20210205 20:19:50.435"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.434" endtime="20210205 20:19:50.435"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.436" endtime="20210205 20:19:50.437"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.435" endtime="20210205 20:19:50.437"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.437" endtime="20210205 20:19:50.438"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.437" endtime="20210205 20:19:50.438"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.439" endtime="20210205 20:19:50.439"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.438" endtime="20210205 20:19:50.439"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.440" endtime="20210205 20:19:50.440"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.439" endtime="20210205 20:19:50.440"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.441" endtime="20210205 20:19:50.442"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.440" endtime="20210205 20:19:50.442"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.442" endtime="20210205 20:19:50.443"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.442" endtime="20210205 20:19:50.443"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.444" endtime="20210205 20:19:50.445"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.444" endtime="20210205 20:19:50.445"></status>
</kw>
<kw name="${data} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${postresponselist}</arg>
<arg>${data['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.445" endtime="20210205 20:19:50.445"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.445" endtime="20210205 20:19:50.445"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.432" endtime="20210205 20:19:50.445"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${postresponselist}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:19:50.446" level="INFO">Length is 10</msg>
<msg timestamp="20210205 20:19:50.446" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.446" endtime="20210205 20:19:50.446"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{postresponselist}</var>
</assign>
<msg timestamp="20210205 20:19:50.447" level="INFO">@{postresponselist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:50.447" endtime="20210205 20:19:50.447"></status>
</kw>
<msg timestamp="20210205 20:19:50.448" level="INFO">${postcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.429" endtime="20210205 20:19:50.448"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${postcount}</arg>
<arg>${exppostcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.448" endtime="20210205 20:19:50.449"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.372" endtime="20210205 20:19:50.449"></status>
</kw>
<doc>Valid Id Boundary Keys on TestData.json: users.validInitial, users.validInitCount, users.validFinal, users.validFinalCCount</doc>
<tags>
<tag>Positive</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:19:50.206" endtime="20210205 20:19:50.450" critical="yes"></status>
</test>
<test id="s1-t3" name="TC003 VALIDATE EMPTY POST COUNT BY INVALID USER ID - INVALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:50.465" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:50.464" endtime="20210205 20:19:50.465"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:19:50.467" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.466" endtime="20210205 20:19:50.467"></status>
</kw>
<msg timestamp="20210205 20:19:50.467" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.463" endtime="20210205 20:19:50.467"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.470" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.468" endtime="20210205 20:19:50.471"></status>
</kw>
<msg timestamp="20210205 20:19:50.471" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.468" endtime="20210205 20:19:50.471"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.474" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.472" endtime="20210205 20:19:50.475"></status>
</kw>
<msg timestamp="20210205 20:19:50.475" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.471" endtime="20210205 20:19:50.475"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.480" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.478" endtime="20210205 20:19:50.480"></status>
</kw>
<msg timestamp="20210205 20:19:50.481" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.476" endtime="20210205 20:19:50.481"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.483" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.482" endtime="20210205 20:19:50.484"></status>
</kw>
<msg timestamp="20210205 20:19:50.484" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.481" endtime="20210205 20:19:50.484"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.487" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.486" endtime="20210205 20:19:50.487"></status>
</kw>
<msg timestamp="20210205 20:19:50.487" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.484" endtime="20210205 20:19:50.487"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.489" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.488" endtime="20210205 20:19:50.489"></status>
</kw>
<msg timestamp="20210205 20:19:50.489" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.487" endtime="20210205 20:19:50.489"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.494" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:19:50.491" endtime="20210205 20:19:50.494"></status>
</kw>
<msg timestamp="20210205 20:19:50.494" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:50.490" endtime="20210205 20:19:50.494"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.497" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.496" endtime="20210205 20:19:50.498"></status>
</kw>
<msg timestamp="20210205 20:19:50.498" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.495" endtime="20210205 20:19:50.498"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.502" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.500" endtime="20210205 20:19:50.502"></status>
</kw>
<msg timestamp="20210205 20:19:50.503" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.498" endtime="20210205 20:19:50.503"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.511" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.504" endtime="20210205 20:19:50.512"></status>
</kw>
<msg timestamp="20210205 20:19:50.513" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.503" endtime="20210205 20:19:50.513"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.517" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:19:50.516" endtime="20210205 20:19:50.518"></status>
</kw>
<msg timestamp="20210205 20:19:50.518" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:50.514" endtime="20210205 20:19:50.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.520" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.518" endtime="20210205 20:19:50.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:19:50.521" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:19:50.521" endtime="20210205 20:19:50.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.522" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.522" endtime="20210205 20:19:50.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.523" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.523" endtime="20210205 20:19:50.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.524" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.524" endtime="20210205 20:19:50.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.527" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.526" endtime="20210205 20:19:50.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.528" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.527" endtime="20210205 20:19:50.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.530" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.529" endtime="20210205 20:19:50.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.532" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:50.531" endtime="20210205 20:19:50.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.534" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.533" endtime="20210205 20:19:50.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.535" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.534" endtime="20210205 20:19:50.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.536" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.535" endtime="20210205 20:19:50.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.538" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:50.537" endtime="20210205 20:19:50.538"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.462" endtime="20210205 20:19:50.538"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Invalid Id Boundary Keys on TestData.json: users.InvalidInitial, users.InvalidFinal</arg>
</arguments>
<msg timestamp="20210205 20:19:50.540" level="INFO">Set test documentation to:
Invalid Id Boundary Keys on TestData.json: users.InvalidInitial, users.InvalidFinal</msg>
<status status="PASS" starttime="20210205 20:19:50.539" endtime="20210205 20:19:50.540"></status>
</kw>
<kw name="VALIDATE POST COUNT BY INVALID USER ID" library="PostsHelper">
<arguments>
<arg>${invalidIuserid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:50.552" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:50.544" endtime="20210205 20:19:50.552"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:50.554" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.553" endtime="20210205 20:19:50.554"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.557" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:50.556" endtime="20210205 20:19:50.558"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:50.619" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/0/posts 
 path_url=/users/0/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:50.619" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/0/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:51 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9f86491c91f4df8c64075ca05c6080401612574391; expires=Mon, 08-Mar-21 01:19:51 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612496747', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12056', 'Accept-Ranges': 'bytes', 'cf-request-id': '081685964a000029a3dd0e7000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=3DoDfXFQtWt%2BJKGE3bOxdKELl9NqShj3%2FxCF8R%2BiEmbyUoHWIkSXBC9ktUJwok9e%2Fmb8h%2F4gbqU97%2FWOCoEX1IDWVIPBnMC90wubEdeTXtpjxg5cS7vfrAuard31"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10b9d48ea29a3-IAD'} 
 body=[] 
 </msg>
<msg timestamp="20210205 20:19:50.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.559" endtime="20210205 20:19:50.620"></status>
</kw>
<msg timestamp="20210205 20:19:50.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.555" endtime="20210205 20:19:50.621"></status>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.622" endtime="20210205 20:19:50.625"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.541" endtime="20210205 20:19:50.625"></status>
</kw>
<kw name="VALIDATE POST COUNT BY INVALID USER ID" library="PostsHelper">
<arguments>
<arg>${invalidFuserid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:50.643" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:50.641" endtime="20210205 20:19:50.643"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:50.645" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.644" endtime="20210205 20:19:50.645"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.648" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:50.647" endtime="20210205 20:19:50.649"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:50.694" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/11/posts 
 path_url=/users/11/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:50.694" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/11/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:51 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d62b625fc4a4b3be91db2ebb2d2a798a21612574391; expires=Mon, 08-Mar-21 01:19:51 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612496627', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12056', 'Accept-Ranges': 'bytes', 'cf-request-id': '081685969400000977bc084000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=IqJqi0mxwZYxCw%2Bm482VIK9d0gBPrK3EVTx6lfNUeUtHWQauVezPGeoxYuw0CNfgDiomg3dHCRUSiS3agAy3Mxykf6kZGaP81AsqC1zXUj0SI7iwsEXYQRc5Q8s9"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10b9dbafc0977-IAD'} 
 body=[] 
 </msg>
<msg timestamp="20210205 20:19:50.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.650" endtime="20210205 20:19:50.695"></status>
</kw>
<msg timestamp="20210205 20:19:50.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.646" endtime="20210205 20:19:50.695"></status>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.695" endtime="20210205 20:19:50.697"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.639" endtime="20210205 20:19:50.698"></status>
</kw>
<doc>Invalid Id Boundary Keys on TestData.json: users.InvalidInitial, users.InvalidFinal</doc>
<tags>
<tag>Negative</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:19:50.460" endtime="20210205 20:19:50.699" critical="yes"></status>
</test>
<test id="s1-t4" name="TC004 VALIDATE GET POST BY POST ID - VALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:50.707" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:50.705" endtime="20210205 20:19:50.707"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:19:50.709" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.707" endtime="20210205 20:19:50.709"></status>
</kw>
<msg timestamp="20210205 20:19:50.710" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.704" endtime="20210205 20:19:50.710"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.713" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.711" endtime="20210205 20:19:50.713"></status>
</kw>
<msg timestamp="20210205 20:19:50.714" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.710" endtime="20210205 20:19:50.714"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.717" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.715" endtime="20210205 20:19:50.717"></status>
</kw>
<msg timestamp="20210205 20:19:50.717" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.714" endtime="20210205 20:19:50.717"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.761" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.757" endtime="20210205 20:19:50.761"></status>
</kw>
<msg timestamp="20210205 20:19:50.762" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.718" endtime="20210205 20:19:50.762"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.766" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.764" endtime="20210205 20:19:50.766"></status>
</kw>
<msg timestamp="20210205 20:19:50.767" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.762" endtime="20210205 20:19:50.767"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.770" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.769" endtime="20210205 20:19:50.770"></status>
</kw>
<msg timestamp="20210205 20:19:50.771" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.768" endtime="20210205 20:19:50.771"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.774" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.772" endtime="20210205 20:19:50.774"></status>
</kw>
<msg timestamp="20210205 20:19:50.775" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.771" endtime="20210205 20:19:50.775"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.783" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:19:50.781" endtime="20210205 20:19:50.783"></status>
</kw>
<msg timestamp="20210205 20:19:50.784" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:50.777" endtime="20210205 20:19:50.784"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.788" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.786" endtime="20210205 20:19:50.788"></status>
</kw>
<msg timestamp="20210205 20:19:50.789" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.785" endtime="20210205 20:19:50.789"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.794" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.790" endtime="20210205 20:19:50.794"></status>
</kw>
<msg timestamp="20210205 20:19:50.795" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.789" endtime="20210205 20:19:50.795"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.799" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.797" endtime="20210205 20:19:50.800"></status>
</kw>
<msg timestamp="20210205 20:19:50.800" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.795" endtime="20210205 20:19:50.800"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.804" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:19:50.802" endtime="20210205 20:19:50.804"></status>
</kw>
<msg timestamp="20210205 20:19:50.805" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:50.801" endtime="20210205 20:19:50.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.806" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.806" endtime="20210205 20:19:50.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:19:50.807" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:19:50.807" endtime="20210205 20:19:50.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.810" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.808" endtime="20210205 20:19:50.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.812" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.810" endtime="20210205 20:19:50.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.816" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.815" endtime="20210205 20:19:50.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.818" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.817" endtime="20210205 20:19:50.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.820" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:50.819" endtime="20210205 20:19:50.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.821" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.820" endtime="20210205 20:19:50.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.822" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:50.821" endtime="20210205 20:19:50.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.824" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:50.823" endtime="20210205 20:19:50.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.825" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:19:50.824" endtime="20210205 20:19:50.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.831" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:50.830" endtime="20210205 20:19:50.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.832" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:50.831" endtime="20210205 20:19:50.833"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.703" endtime="20210205 20:19:50.833"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Valid Post Id Boundary Values on TestData.json: posts.validInitial, posts.validFinal</arg>
</arguments>
<msg timestamp="20210205 20:19:50.837" level="INFO">Set test documentation to:
Valid Post Id Boundary Values on TestData.json: posts.validInitial, posts.validFinal</msg>
<status status="PASS" starttime="20210205 20:19:50.836" endtime="20210205 20:19:50.837"></status>
</kw>
<kw name="VALIDATE POST BY VALID POST ID" library="PostsHelper">
<arguments>
<arg>${postinId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:50.840" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:50.839" endtime="20210205 20:19:50.840"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:50.843" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:50.841" endtime="20210205 20:19:50.844"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.848" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:50.846" endtime="20210205 20:19:50.849"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:50.900" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:50.900" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d94b1bd9fb755b11833af81e3e8f8bc2a1612574392; expires=Mon, 08-Mar-21 01:19:52 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612516849', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26848', 'cf-request-id': '081685976400002ac83d9e7000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1kw9HucloGCDmIbklndOJQA30DfGug9C9BaBBpDN7zghzgZp3HIJSUc1qKXT7JwmYITiYZNhpLbLMh0sZVuK0l0D1uC6QRCT015r4HR3maUiVfElgbKMzkJClhDZ"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10b9f0c722ac8-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<msg timestamp="20210205 20:19:50.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.849" endtime="20210205 20:19:50.901"></status>
</kw>
<msg timestamp="20210205 20:19:50.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.844" endtime="20210205 20:19:50.901"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:50.904" endtime="20210205 20:19:50.908"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.903" endtime="20210205 20:19:50.909"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.902" endtime="20210205 20:19:50.909"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:50.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:50.911" endtime="20210205 20:19:50.912"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.909" endtime="20210205 20:19:50.912"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:50.914" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:50.914" endtime="20210205 20:19:50.915"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.003" level="INFO">${idvalue} = [1]</msg>
<status status="PASS" starttime="20210205 20:19:50.915" endtime="20210205 20:19:51.004"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:51.005" level="INFO">${responseid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.004" endtime="20210205 20:19:51.005"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:51.005" endtime="20210205 20:19:51.006"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.007" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:51.006" endtime="20210205 20:19:51.007"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.913" endtime="20210205 20:19:51.007"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:50.838" endtime="20210205 20:19:51.008"></status>
</kw>
<kw name="VALIDATE POST BY VALID POST ID" library="PostsHelper">
<arguments>
<arg>${postfId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:51.012" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:51.011" endtime="20210205 20:19:51.012"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:51.014" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:51.012" endtime="20210205 20:19:51.014"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.015" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:51.015" endtime="20210205 20:19:51.015"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:51.062" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:51.062" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1b1a9a738fb7725c1b2f2b172e9eb32f1612574392; expires=Mon, 08-Mar-21 01:19:52 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '914', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12135', 'cf-request-id': '08168598020000cf28cdad0000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=7m1UaLPDFxbJ0eq8I88oU2UZb4QjhOk8LmngRLKKhwUKa3jSYow%2BElLscfSfUmKV9JFw7t%2BdczYGsRyytLc9iL%2FEOwjigPwrCTKAgltB301TfdU87%2B8W%2BqYjueGH"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10ba00e13cf28-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<msg timestamp="20210205 20:19:51.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:51.016" endtime="20210205 20:19:51.063"></status>
</kw>
<msg timestamp="20210205 20:19:51.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:51.014" endtime="20210205 20:19:51.063"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.065" endtime="20210205 20:19:51.069"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.064" endtime="20210205 20:19:51.070"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.063" endtime="20210205 20:19:51.070"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:51.072" endtime="20210205 20:19:51.073"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.070" endtime="20210205 20:19:51.073"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.075" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:51.075" endtime="20210205 20:19:51.075"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.138" level="INFO">${idvalue} = [100]</msg>
<status status="PASS" starttime="20210205 20:19:51.076" endtime="20210205 20:19:51.138"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:51.139" level="INFO">${responseid} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.138" endtime="20210205 20:19:51.139"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:51.139" endtime="20210205 20:19:51.140"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.140" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:51.140" endtime="20210205 20:19:51.140"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.074" endtime="20210205 20:19:51.140"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.009" endtime="20210205 20:19:51.140"></status>
</kw>
<doc>Valid Post Id Boundary Values on TestData.json: posts.validInitial, posts.validFinal</doc>
<tags>
<tag>Positive</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:19:50.701" endtime="20210205 20:19:51.142" critical="yes"></status>
</test>
<test id="s1-t5" name="TC005 VALIDATE GET POST BY POST ID - INVALID BOUNDARY ANALYSIS">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:51.148" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:51.147" endtime="20210205 20:19:51.148"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:19:51.149" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:51.148" endtime="20210205 20:19:51.149"></status>
</kw>
<msg timestamp="20210205 20:19:51.149" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:51.146" endtime="20210205 20:19:51.149"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.151" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.150" endtime="20210205 20:19:51.151"></status>
</kw>
<msg timestamp="20210205 20:19:51.151" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.149" endtime="20210205 20:19:51.151"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.153" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.152" endtime="20210205 20:19:51.154"></status>
</kw>
<msg timestamp="20210205 20:19:51.154" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.152" endtime="20210205 20:19:51.154"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.156" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.155" endtime="20210205 20:19:51.156"></status>
</kw>
<msg timestamp="20210205 20:19:51.157" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.154" endtime="20210205 20:19:51.157"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.159" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.158" endtime="20210205 20:19:51.160"></status>
</kw>
<msg timestamp="20210205 20:19:51.160" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.157" endtime="20210205 20:19:51.160"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.164" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.162" endtime="20210205 20:19:51.164"></status>
</kw>
<msg timestamp="20210205 20:19:51.165" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.160" endtime="20210205 20:19:51.165"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.168" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.166" endtime="20210205 20:19:51.168"></status>
</kw>
<msg timestamp="20210205 20:19:51.169" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.165" endtime="20210205 20:19:51.169"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.172" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:19:51.170" endtime="20210205 20:19:51.172"></status>
</kw>
<msg timestamp="20210205 20:19:51.173" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:51.169" endtime="20210205 20:19:51.173"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.176" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.174" endtime="20210205 20:19:51.176"></status>
</kw>
<msg timestamp="20210205 20:19:51.177" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.173" endtime="20210205 20:19:51.177"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.181" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.179" endtime="20210205 20:19:51.181"></status>
</kw>
<msg timestamp="20210205 20:19:51.182" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.177" endtime="20210205 20:19:51.182"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.188" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.185" endtime="20210205 20:19:51.188"></status>
</kw>
<msg timestamp="20210205 20:19:51.188" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.183" endtime="20210205 20:19:51.189"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.191" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:19:51.189" endtime="20210205 20:19:51.191"></status>
</kw>
<msg timestamp="20210205 20:19:51.192" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:51.189" endtime="20210205 20:19:51.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.194" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:51.192" endtime="20210205 20:19:51.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:19:51.196" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:19:51.195" endtime="20210205 20:19:51.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.197" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.197" endtime="20210205 20:19:51.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.198" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.198" endtime="20210205 20:19:51.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.199" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.198" endtime="20210205 20:19:51.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.200" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.199" endtime="20210205 20:19:51.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.200" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.200" endtime="20210205 20:19:51.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.201" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.201" endtime="20210205 20:19:51.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.202" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:51.201" endtime="20210205 20:19:51.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.203" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.202" endtime="20210205 20:19:51.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.203" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.203" endtime="20210205 20:19:51.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.204" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.204" endtime="20210205 20:19:51.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.205" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:51.205" endtime="20210205 20:19:51.205"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.145" endtime="20210205 20:19:51.205"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Invalid Post Id Boundary Values: posts.InvalidInitial, posts.InvalidFinal</arg>
</arguments>
<msg timestamp="20210205 20:19:51.216" level="INFO">Set test documentation to:
Invalid Post Id Boundary Values: posts.InvalidInitial, posts.InvalidFinal</msg>
<status status="PASS" starttime="20210205 20:19:51.214" endtime="20210205 20:19:51.216"></status>
</kw>
<kw name="VALIDATE POST BY INVALID POST ID" library="PostsHelper">
<arguments>
<arg>${invalidIpostid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:51.219" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:51.218" endtime="20210205 20:19:51.219"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:51.220" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:51.219" endtime="20210205 20:19:51.220"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.221" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:51.221" endtime="20210205 20:19:51.222"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:51.278" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/0 
 path_url=/posts/0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:51.278" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/0 
 status=404, reason=Not Found 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfabaf906c836940409fd73259e8291a71612574392; expires=Mon, 08-Mar-21 01:19:52 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612562381', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12056', 'cf-request-id': '08168598d500002a33e7945000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Z5uw06VUuDv%2FSNjiFC%2F41crOW6yq%2BxYsOZZlQkws%2F0KrDSJI%2B3FkjDk9nYh1Rbrir%2BDVNBLsl8J1hRhV7gCvph3BjDapl5OcbT0l9%2FjlUA1dUJ2n3Z3S%2FEQUtDR5"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10ba15bd82a33-IAD'} 
 body={} 
 </msg>
<msg timestamp="20210205 20:19:51.284" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/0</msg>
<status status="FAIL" starttime="20210205 20:19:51.222" endtime="20210205 20:19:51.284"></status>
</kw>
<status status="FAIL" starttime="20210205 20:19:51.221" endtime="20210205 20:19:51.284"></status>
</kw>
<msg timestamp="20210205 20:19:51.285" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/0</msg>
<status status="PASS" starttime="20210205 20:19:51.220" endtime="20210205 20:19:51.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.285" endtime="20210205 20:19:51.285"></status>
</kw>
<kw name="GET RANDOM STRING" library="PostsHelper">
<assign>
<var>${randomstr}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${randompostid}</var>
</assign>
<msg timestamp="20210205 20:19:51.286" level="INFO">${randompostid} = HmyLv</msg>
<status status="PASS" starttime="20210205 20:19:51.286" endtime="20210205 20:19:51.286"></status>
</kw>
<msg timestamp="20210205 20:19:51.287" level="INFO">${randomstr} = HmyLv</msg>
<status status="PASS" starttime="20210205 20:19:51.285" endtime="20210205 20:19:51.287"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.288" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:51.288" endtime="20210205 20:19:51.288"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:51.346" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/HmyLv 
 path_url=/posts/HmyLv 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:51.346" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/HmyLv 
 status=404, reason=Not Found 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d036b21a3dab6c3eb873816e2e6db32af1612574392; expires=Mon, 08-Mar-21 01:19:52 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612574441', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'MISS', 'cf-request-id': '0816859916000029c61fa8e000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=hs1wM2XBVD71HQicsxQ1ycVuZV91qeIzxS4YRhgSwtXRiHpqc1vsJYrFMYKcuv4b081HOAkgtDQKudeazNSaP55xX%2Bct3VUd55OtMiAdqTx1gZtT2G7%2FHd4lJTwx"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10ba1bf4429c6-IAD'} 
 body={} 
 </msg>
<msg timestamp="20210205 20:19:51.350" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/HmyLv</msg>
<status status="FAIL" starttime="20210205 20:19:51.288" endtime="20210205 20:19:51.350"></status>
</kw>
<status status="FAIL" starttime="20210205 20:19:51.287" endtime="20210205 20:19:51.351"></status>
</kw>
<msg timestamp="20210205 20:19:51.351" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/HmyLv</msg>
<status status="PASS" starttime="20210205 20:19:51.287" endtime="20210205 20:19:51.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.352" endtime="20210205 20:19:51.352"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.217" endtime="20210205 20:19:51.352"></status>
</kw>
<kw name="VALIDATE POST BY INVALID POST ID" library="PostsHelper">
<arguments>
<arg>${invalidFpostid}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:51.356" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:51.355" endtime="20210205 20:19:51.356"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:51.357" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:51.356" endtime="20210205 20:19:51.358"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.361" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:51.360" endtime="20210205 20:19:51.362"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:51.434" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/101 
 path_url=/posts/101 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:51.434" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/101 
 status=404, reason=Not Found 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df99511f863e06eb4e763880cf58809251612574392; expires=Mon, 08-Mar-21 01:19:52 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612561901', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12500', 'cf-request-id': '08168599720000e10e05137000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=joie%2B38JEsU0Jt8e2auroObgl9t36Ao%2FRdIqngMbZPeVl0FWyH1sNf90eAxO1k0ZjPmmyi%2Bldear4%2FEOrwFjv7RJB%2FRiT5Y1jW%2FW4WauTCKQX%2F4XnknLy1SsNvgh"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10ba258f8e10e-IAD'} 
 body={} 
 </msg>
<msg timestamp="20210205 20:19:51.439" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/101</msg>
<status status="FAIL" starttime="20210205 20:19:51.363" endtime="20210205 20:19:51.439"></status>
</kw>
<status status="FAIL" starttime="20210205 20:19:51.359" endtime="20210205 20:19:51.440"></status>
</kw>
<msg timestamp="20210205 20:19:51.440" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/101</msg>
<status status="PASS" starttime="20210205 20:19:51.358" endtime="20210205 20:19:51.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.441" endtime="20210205 20:19:51.442"></status>
</kw>
<kw name="GET RANDOM STRING" library="PostsHelper">
<assign>
<var>${randomstr}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${randompostid}</var>
</assign>
<msg timestamp="20210205 20:19:51.443" level="INFO">${randompostid} = kmBGJ</msg>
<status status="PASS" starttime="20210205 20:19:51.443" endtime="20210205 20:19:51.443"></status>
</kw>
<msg timestamp="20210205 20:19:51.444" level="INFO">${randomstr} = kmBGJ</msg>
<status status="PASS" starttime="20210205 20:19:51.442" endtime="20210205 20:19:51.444"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>INITIATE GET REQUEST</arg>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts/${randomstr}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.447" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:51.446" endtime="20210205 20:19:51.447"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:51.508" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/kmBGJ 
 path_url=/posts/kmBGJ 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:51.508" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/kmBGJ 
 status=404, reason=Not Found 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8b0534be89ca522b3f7793bbd680341c1612574392; expires=Mon, 08-Mar-21 01:19:52 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612574441', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'MISS', 'cf-request-id': '08168599b20000746e80878000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=nUngvkGXFO1BiQVuQcbH9ommxylH7Oij0knKszhu2pfEt3fGr3gGzw375GeRnwYzXZbiSAnWMK8qJckSsBo2Vl%2Fahq0d%2FCR7aV3aOpmafbKsJPvaHlkwGV1dsRUL"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10ba2bb76746e-IAD'} 
 body={} 
 </msg>
<msg timestamp="20210205 20:19:51.513" level="FAIL">HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/kmBGJ</msg>
<status status="FAIL" starttime="20210205 20:19:51.448" endtime="20210205 20:19:51.513"></status>
</kw>
<status status="FAIL" starttime="20210205 20:19:51.445" endtime="20210205 20:19:51.513"></status>
</kw>
<msg timestamp="20210205 20:19:51.513" level="INFO">${response} = HTTPError: 404 Client Error: Not Found for url: http://jsonplaceholder.typicode.com/posts/kmBGJ</msg>
<status status="PASS" starttime="20210205 20:19:51.445" endtime="20210205 20:19:51.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response}</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.514" endtime="20210205 20:19:51.514"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.354" endtime="20210205 20:19:51.515"></status>
</kw>
<doc>Invalid Post Id Boundary Values: posts.InvalidInitial, posts.InvalidFinal</doc>
<tags>
<tag>Negative</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:19:51.144" endtime="20210205 20:19:51.516" critical="yes"></status>
</test>
<test id="s1-t6" name="TC006 COMPARE USER ID FILTERED ALL POSTS RESPONSE TO GET POST BY USER ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:51.533" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:51.531" endtime="20210205 20:19:51.533"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:19:51.535" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:51.534" endtime="20210205 20:19:51.535"></status>
</kw>
<msg timestamp="20210205 20:19:51.536" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:51.530" endtime="20210205 20:19:51.536"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.540" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.538" endtime="20210205 20:19:51.541"></status>
</kw>
<msg timestamp="20210205 20:19:51.541" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.537" endtime="20210205 20:19:51.541"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.546" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.544" endtime="20210205 20:19:51.546"></status>
</kw>
<msg timestamp="20210205 20:19:51.547" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.542" endtime="20210205 20:19:51.547"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.551" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.549" endtime="20210205 20:19:51.551"></status>
</kw>
<msg timestamp="20210205 20:19:51.551" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.548" endtime="20210205 20:19:51.551"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.554" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.552" endtime="20210205 20:19:51.554"></status>
</kw>
<msg timestamp="20210205 20:19:51.555" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.552" endtime="20210205 20:19:51.555"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.559" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.557" endtime="20210205 20:19:51.559"></status>
</kw>
<msg timestamp="20210205 20:19:51.560" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.555" endtime="20210205 20:19:51.561"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.564" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.562" endtime="20210205 20:19:51.564"></status>
</kw>
<msg timestamp="20210205 20:19:51.565" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.561" endtime="20210205 20:19:51.565"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.569" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:19:51.567" endtime="20210205 20:19:51.569"></status>
</kw>
<msg timestamp="20210205 20:19:51.571" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:51.565" endtime="20210205 20:19:51.571"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.576" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.573" endtime="20210205 20:19:51.576"></status>
</kw>
<msg timestamp="20210205 20:19:51.577" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.572" endtime="20210205 20:19:51.577"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.581" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.579" endtime="20210205 20:19:51.582"></status>
</kw>
<msg timestamp="20210205 20:19:51.582" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.577" endtime="20210205 20:19:51.582"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.586" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.584" endtime="20210205 20:19:51.586"></status>
</kw>
<msg timestamp="20210205 20:19:51.586" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.583" endtime="20210205 20:19:51.587"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:51.589" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:19:51.588" endtime="20210205 20:19:51.589"></status>
</kw>
<msg timestamp="20210205 20:19:51.590" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:51.587" endtime="20210205 20:19:51.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.591" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:51.590" endtime="20210205 20:19:51.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:19:51.592" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:19:51.591" endtime="20210205 20:19:51.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.594" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.593" endtime="20210205 20:19:51.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.595" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.595" endtime="20210205 20:19:51.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.596" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.596" endtime="20210205 20:19:51.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.597" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.597" endtime="20210205 20:19:51.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.600" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:51.598" endtime="20210205 20:19:51.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.603" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.601" endtime="20210205 20:19:51.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.604" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:51.603" endtime="20210205 20:19:51.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.605" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:51.604" endtime="20210205 20:19:51.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.606" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:19:51.605" endtime="20210205 20:19:51.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.607" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:51.606" endtime="20210205 20:19:51.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.608" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:51.607" endtime="20210205 20:19:51.608"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.529" endtime="20210205 20:19:51.609"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Compare Full Response User Id filtering to /users/{userid}/posts</arg>
</arguments>
<msg timestamp="20210205 20:19:51.611" level="INFO">Set test documentation to:
Compare Full Response User Id filtering to /users/{userid}/posts</msg>
<status status="PASS" starttime="20210205 20:19:51.610" endtime="20210205 20:19:51.612"></status>
</kw>
<kw name="VALIDATE FILTERED POST RESPONSE MATCHES USER ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${userinId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:51.615" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:51.614" endtime="20210205 20:19:51.615"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:51.616" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:51.615" endtime="20210205 20:19:51.616"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.618" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:51.617" endtime="20210205 20:19:51.619"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:51.660" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/1/posts 
 path_url=/users/1/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:51.661" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/1/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da318670f961ece8c2e639ac094a51aa91612574392; expires=Mon, 08-Mar-21 01:19:52 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612494887', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"aa6-j2NSH739l9uq40OywFMn7Y0C/iY"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12501', 'cf-request-id': '0816859a5e00000dd6d79a6000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=PwZcB5vcIh9mDQWvPS4L8qtVttXR83%2FHnD0Z1OLrP%2BgSZyYoNzf49mTcwotQ4OooEi9eXzyAw5qrd7gFAwTlhTTPVTvEStWpDxgDw0VYUaoZdhPugAYkTFcc811u"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10ba3cbc20dd6-IAD'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  }
] 
 </msg>
<msg timestamp="20210205 20:19:51.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:51.619" endtime="20210205 20:19:51.661"></status>
</kw>
<msg timestamp="20210205 20:19:51.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:51.616" endtime="20210205 20:19:51.662"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:51.663" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:51.662" endtime="20210205 20:19:51.663"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:51.663" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:51.663" endtime="20210205 20:19:51.664"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:51.664" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:51.664" endtime="20210205 20:19:51.664"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:51.665" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:51.664" endtime="20210205 20:19:51.665"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:51.665" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:51.665" endtime="20210205 20:19:51.666"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:51.666" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:51.666" endtime="20210205 20:19:51.667"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.668" endtime="20210205 20:19:51.668"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.669" endtime="20210205 20:19:51.669"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.669" endtime="20210205 20:19:51.670"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.667" endtime="20210205 20:19:51.670"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.670" endtime="20210205 20:19:51.671"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.671" endtime="20210205 20:19:51.672"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.672" endtime="20210205 20:19:51.673"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.670" endtime="20210205 20:19:51.673"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.673" endtime="20210205 20:19:51.674"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.674" endtime="20210205 20:19:51.675"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.675" endtime="20210205 20:19:51.676"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.673" endtime="20210205 20:19:51.676"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.677" endtime="20210205 20:19:51.678"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.678" endtime="20210205 20:19:51.678"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.679" endtime="20210205 20:19:51.680"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.677" endtime="20210205 20:19:51.680"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.680" endtime="20210205 20:19:51.681"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.681" endtime="20210205 20:19:51.681"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.682" endtime="20210205 20:19:51.682"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.680" endtime="20210205 20:19:51.682"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.683" endtime="20210205 20:19:51.683"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.683" endtime="20210205 20:19:51.684"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.684" endtime="20210205 20:19:51.685"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.682" endtime="20210205 20:19:51.685"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.685" endtime="20210205 20:19:51.686"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.686" endtime="20210205 20:19:51.687"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.687" endtime="20210205 20:19:51.688"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.685" endtime="20210205 20:19:51.688"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.688" endtime="20210205 20:19:51.689"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.689" endtime="20210205 20:19:51.690"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.690" endtime="20210205 20:19:51.690"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.688" endtime="20210205 20:19:51.690"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.691" endtime="20210205 20:19:51.692"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.692" endtime="20210205 20:19:51.693"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.693" endtime="20210205 20:19:51.694"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.691" endtime="20210205 20:19:51.694"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.694" endtime="20210205 20:19:51.696"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.696" endtime="20210205 20:19:51.697"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.697" endtime="20210205 20:19:51.698"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.694" endtime="20210205 20:19:51.698"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.667" endtime="20210205 20:19:51.698"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_All_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:51.700" level="INFO">Creating Session using : alias=Get_All_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:51.699" endtime="20210205 20:19:51.700"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:51.741" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:51.741" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:53 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4f4abef252cf00384d5fb99aac0a3e921612574393; expires=Mon, 08-Mar-21 01:19:53 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612488045', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '28766', 'cf-request-id': '0816859ab00000cf08e5925000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=U7p65AQXicb6DBBIuA9fn5GYXMNeSGt7tvCKhXc6VEkIPDDFrK%2BYftpwu7xMXea7xH3QjgigpTaXaN3wfazuy6i0GE8EhfcrrwFLRcyRe2AnNtAOWxhewnQ%2F68gz"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10ba44c88cf08-IAD'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 20:19:51.742" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:51.700" endtime="20210205 20:19:51.742"></status>
</kw>
<msg timestamp="20210205 20:19:51.742" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:51.698" endtime="20210205 20:19:51.742"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.745" endtime="20210205 20:19:51.745"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.744" endtime="20210205 20:19:51.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.747" endtime="20210205 20:19:51.747"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.746" endtime="20210205 20:19:51.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.748" endtime="20210205 20:19:51.749"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.748" endtime="20210205 20:19:51.749"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.744" endtime="20210205 20:19:51.749"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.750" endtime="20210205 20:19:51.751"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.750" endtime="20210205 20:19:51.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.752" endtime="20210205 20:19:51.753"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.751" endtime="20210205 20:19:51.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.754" endtime="20210205 20:19:51.754"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.753" endtime="20210205 20:19:51.754"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.749" endtime="20210205 20:19:51.755"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.756" endtime="20210205 20:19:51.756"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.755" endtime="20210205 20:19:51.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.758" endtime="20210205 20:19:51.759"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.757" endtime="20210205 20:19:51.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.760" endtime="20210205 20:19:51.761"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.759" endtime="20210205 20:19:51.761"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.755" endtime="20210205 20:19:51.761"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.762" endtime="20210205 20:19:51.763"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.761" endtime="20210205 20:19:51.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.764" endtime="20210205 20:19:51.765"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.763" endtime="20210205 20:19:51.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.766" endtime="20210205 20:19:51.766"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.765" endtime="20210205 20:19:51.767"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.761" endtime="20210205 20:19:51.767"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.768" endtime="20210205 20:19:51.768"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.767" endtime="20210205 20:19:51.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.769" endtime="20210205 20:19:51.770"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.769" endtime="20210205 20:19:51.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.771" endtime="20210205 20:19:51.772"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.770" endtime="20210205 20:19:51.772"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.767" endtime="20210205 20:19:51.772"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.773" endtime="20210205 20:19:51.774"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.773" endtime="20210205 20:19:51.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.775" endtime="20210205 20:19:51.776"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.774" endtime="20210205 20:19:51.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.777" endtime="20210205 20:19:51.777"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.776" endtime="20210205 20:19:51.778"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.772" endtime="20210205 20:19:51.778"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.779" endtime="20210205 20:19:51.779"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.778" endtime="20210205 20:19:51.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.781" endtime="20210205 20:19:51.781"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.780" endtime="20210205 20:19:51.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.782" endtime="20210205 20:19:51.783"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.782" endtime="20210205 20:19:51.783"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.778" endtime="20210205 20:19:51.783"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.784" endtime="20210205 20:19:51.785"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.784" endtime="20210205 20:19:51.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.786" endtime="20210205 20:19:51.787"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.785" endtime="20210205 20:19:51.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.788" endtime="20210205 20:19:51.789"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.787" endtime="20210205 20:19:51.789"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.783" endtime="20210205 20:19:51.789"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.791" endtime="20210205 20:19:51.791"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.790" endtime="20210205 20:19:51.791"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.793" endtime="20210205 20:19:51.794"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.792" endtime="20210205 20:19:51.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.795" endtime="20210205 20:19:51.796"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.794" endtime="20210205 20:19:51.796"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.789" endtime="20210205 20:19:51.796"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.797" endtime="20210205 20:19:51.798"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.796" endtime="20210205 20:19:51.798"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.799" endtime="20210205 20:19:51.800"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.798" endtime="20210205 20:19:51.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.801" endtime="20210205 20:19:51.802"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.800" endtime="20210205 20:19:51.802"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.796" endtime="20210205 20:19:51.802"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.803" endtime="20210205 20:19:51.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.804" endtime="20210205 20:19:51.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.805" endtime="20210205 20:19:51.806"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.802" endtime="20210205 20:19:51.806"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.807" endtime="20210205 20:19:51.808"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.808" endtime="20210205 20:19:51.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.809" endtime="20210205 20:19:51.810"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.806" endtime="20210205 20:19:51.810"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.810" endtime="20210205 20:19:51.811"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.811" endtime="20210205 20:19:51.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.812" endtime="20210205 20:19:51.813"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.810" endtime="20210205 20:19:51.813"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.813" endtime="20210205 20:19:51.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.814" endtime="20210205 20:19:51.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.815" endtime="20210205 20:19:51.816"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.813" endtime="20210205 20:19:51.816"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.817" endtime="20210205 20:19:51.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.818" endtime="20210205 20:19:51.818"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.819" endtime="20210205 20:19:51.820"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.816" endtime="20210205 20:19:51.820"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.821" endtime="20210205 20:19:51.822"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.823" endtime="20210205 20:19:51.824"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.824" endtime="20210205 20:19:51.825"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.820" endtime="20210205 20:19:51.825"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.825" endtime="20210205 20:19:51.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.826" endtime="20210205 20:19:51.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.827" endtime="20210205 20:19:51.828"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.825" endtime="20210205 20:19:51.828"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.828" endtime="20210205 20:19:51.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.829" endtime="20210205 20:19:51.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.830" endtime="20210205 20:19:51.831"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.828" endtime="20210205 20:19:51.831"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.831" endtime="20210205 20:19:51.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.832" endtime="20210205 20:19:51.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.833" endtime="20210205 20:19:51.833"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.831" endtime="20210205 20:19:51.833"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.834" endtime="20210205 20:19:51.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.835" endtime="20210205 20:19:51.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.837" endtime="20210205 20:19:51.837"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.834" endtime="20210205 20:19:51.837"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.838" endtime="20210205 20:19:51.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.839" endtime="20210205 20:19:51.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.840" endtime="20210205 20:19:51.840"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.838" endtime="20210205 20:19:51.841"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.841" endtime="20210205 20:19:51.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.842" endtime="20210205 20:19:51.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.843" endtime="20210205 20:19:51.844"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.841" endtime="20210205 20:19:51.844"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.844" endtime="20210205 20:19:51.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.845" endtime="20210205 20:19:51.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.846" endtime="20210205 20:19:51.847"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.844" endtime="20210205 20:19:51.847"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.847" endtime="20210205 20:19:51.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.848" endtime="20210205 20:19:51.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.849" endtime="20210205 20:19:51.849"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.847" endtime="20210205 20:19:51.850"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.850" endtime="20210205 20:19:51.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.851" endtime="20210205 20:19:51.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.852" endtime="20210205 20:19:51.853"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.850" endtime="20210205 20:19:51.853"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.853" endtime="20210205 20:19:51.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.854" endtime="20210205 20:19:51.855"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.855" endtime="20210205 20:19:51.856"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.853" endtime="20210205 20:19:51.856"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.856" endtime="20210205 20:19:51.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.859" endtime="20210205 20:19:51.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.860" endtime="20210205 20:19:51.860"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.856" endtime="20210205 20:19:51.860"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.861" endtime="20210205 20:19:51.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.862" endtime="20210205 20:19:51.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.863" endtime="20210205 20:19:51.863"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.861" endtime="20210205 20:19:51.863"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.864" endtime="20210205 20:19:51.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.865" endtime="20210205 20:19:51.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.866" endtime="20210205 20:19:51.866"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.864" endtime="20210205 20:19:51.866"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.867" endtime="20210205 20:19:51.868"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.868" endtime="20210205 20:19:51.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.869" endtime="20210205 20:19:51.870"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.866" endtime="20210205 20:19:51.870"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.870" endtime="20210205 20:19:51.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.871" endtime="20210205 20:19:51.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.872" endtime="20210205 20:19:51.873"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.870" endtime="20210205 20:19:51.873"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.873" endtime="20210205 20:19:51.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.874" endtime="20210205 20:19:51.875"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.875" endtime="20210205 20:19:51.876"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.873" endtime="20210205 20:19:51.876"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.876" endtime="20210205 20:19:51.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.877" endtime="20210205 20:19:51.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.878" endtime="20210205 20:19:51.879"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.876" endtime="20210205 20:19:51.879"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.879" endtime="20210205 20:19:51.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.880" endtime="20210205 20:19:51.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.881" endtime="20210205 20:19:51.882"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.879" endtime="20210205 20:19:51.882"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.882" endtime="20210205 20:19:51.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.884" endtime="20210205 20:19:51.886"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.886" endtime="20210205 20:19:51.887"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.882" endtime="20210205 20:19:51.887"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.887" endtime="20210205 20:19:51.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.889" endtime="20210205 20:19:51.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.891" endtime="20210205 20:19:51.893"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.887" endtime="20210205 20:19:51.893"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.894" endtime="20210205 20:19:51.895"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.896" endtime="20210205 20:19:51.897"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.897" endtime="20210205 20:19:51.898"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.893" endtime="20210205 20:19:51.898"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.899" endtime="20210205 20:19:51.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.900" endtime="20210205 20:19:51.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.901" endtime="20210205 20:19:51.902"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.898" endtime="20210205 20:19:51.902"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.902" endtime="20210205 20:19:51.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.903" endtime="20210205 20:19:51.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.904" endtime="20210205 20:19:51.905"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.902" endtime="20210205 20:19:51.905"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.905" endtime="20210205 20:19:51.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.906" endtime="20210205 20:19:51.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.907" endtime="20210205 20:19:51.908"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.905" endtime="20210205 20:19:51.908"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.908" endtime="20210205 20:19:51.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.909" endtime="20210205 20:19:51.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.910" endtime="20210205 20:19:51.910"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.908" endtime="20210205 20:19:51.910"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.910" endtime="20210205 20:19:51.911"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.911" endtime="20210205 20:19:51.911"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.911" endtime="20210205 20:19:51.912"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.910" endtime="20210205 20:19:51.912"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.912" endtime="20210205 20:19:51.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.913" endtime="20210205 20:19:51.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.913" endtime="20210205 20:19:51.913"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.912" endtime="20210205 20:19:51.914"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.914" endtime="20210205 20:19:51.914"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.914" endtime="20210205 20:19:51.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.915" endtime="20210205 20:19:51.916"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.914" endtime="20210205 20:19:51.916"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.917" endtime="20210205 20:19:51.917"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.918" endtime="20210205 20:19:51.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.919" endtime="20210205 20:19:51.919"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.916" endtime="20210205 20:19:51.920"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.920" endtime="20210205 20:19:51.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.921" endtime="20210205 20:19:51.922"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.922" endtime="20210205 20:19:51.923"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.920" endtime="20210205 20:19:51.923"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.923" endtime="20210205 20:19:51.924"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.924" endtime="20210205 20:19:51.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.925" endtime="20210205 20:19:51.926"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.923" endtime="20210205 20:19:51.926"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.927" endtime="20210205 20:19:51.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.928" endtime="20210205 20:19:51.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.929" endtime="20210205 20:19:51.929"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.926" endtime="20210205 20:19:51.930"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.930" endtime="20210205 20:19:51.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.932" endtime="20210205 20:19:51.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.933" endtime="20210205 20:19:51.934"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.930" endtime="20210205 20:19:51.934"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.934" endtime="20210205 20:19:51.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.935" endtime="20210205 20:19:51.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.936" endtime="20210205 20:19:51.937"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.934" endtime="20210205 20:19:51.937"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.938" endtime="20210205 20:19:51.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.939" endtime="20210205 20:19:51.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.940" endtime="20210205 20:19:51.940"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.937" endtime="20210205 20:19:51.940"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.941" endtime="20210205 20:19:51.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.942" endtime="20210205 20:19:51.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.943" endtime="20210205 20:19:51.943"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.941" endtime="20210205 20:19:51.943"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.944" endtime="20210205 20:19:51.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.944" endtime="20210205 20:19:51.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.945" endtime="20210205 20:19:51.946"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.943" endtime="20210205 20:19:51.946"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.947" endtime="20210205 20:19:51.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.948" endtime="20210205 20:19:51.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.949" endtime="20210205 20:19:51.950"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.946" endtime="20210205 20:19:51.950"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.950" endtime="20210205 20:19:51.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.951" endtime="20210205 20:19:51.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.952" endtime="20210205 20:19:51.953"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.950" endtime="20210205 20:19:51.953"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.953" endtime="20210205 20:19:51.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.954" endtime="20210205 20:19:51.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.955" endtime="20210205 20:19:51.955"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.953" endtime="20210205 20:19:51.955"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.956" endtime="20210205 20:19:51.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.957" endtime="20210205 20:19:51.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.958" endtime="20210205 20:19:51.958"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.956" endtime="20210205 20:19:51.958"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.959" endtime="20210205 20:19:51.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.960" endtime="20210205 20:19:51.960"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.960" endtime="20210205 20:19:51.961"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.958" endtime="20210205 20:19:51.961"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.962" endtime="20210205 20:19:51.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.963" endtime="20210205 20:19:51.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.964" endtime="20210205 20:19:51.964"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.961" endtime="20210205 20:19:51.964"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.965" endtime="20210205 20:19:51.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.966" endtime="20210205 20:19:51.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.966" endtime="20210205 20:19:51.967"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.964" endtime="20210205 20:19:51.967"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.968" endtime="20210205 20:19:51.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.968" endtime="20210205 20:19:51.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.969" endtime="20210205 20:19:51.970"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.967" endtime="20210205 20:19:51.970"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.970" endtime="20210205 20:19:51.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.970" endtime="20210205 20:19:51.971"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.971" endtime="20210205 20:19:51.971"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.970" endtime="20210205 20:19:51.971"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.971" endtime="20210205 20:19:51.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.972" endtime="20210205 20:19:51.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.972" endtime="20210205 20:19:51.973"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.971" endtime="20210205 20:19:51.973"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.973" endtime="20210205 20:19:51.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.974" endtime="20210205 20:19:51.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.974" endtime="20210205 20:19:51.975"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.973" endtime="20210205 20:19:51.975"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.975" endtime="20210205 20:19:51.975"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.975" endtime="20210205 20:19:51.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.976" endtime="20210205 20:19:51.976"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.975" endtime="20210205 20:19:51.976"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.977" endtime="20210205 20:19:51.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.977" endtime="20210205 20:19:51.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.978" endtime="20210205 20:19:51.978"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.977" endtime="20210205 20:19:51.978"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.978" endtime="20210205 20:19:51.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.979" endtime="20210205 20:19:51.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.980" endtime="20210205 20:19:51.980"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.978" endtime="20210205 20:19:51.980"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.980" endtime="20210205 20:19:51.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.981" endtime="20210205 20:19:51.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.981" endtime="20210205 20:19:51.982"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.980" endtime="20210205 20:19:51.982"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.982" endtime="20210205 20:19:51.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.983" endtime="20210205 20:19:51.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.983" endtime="20210205 20:19:51.984"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.982" endtime="20210205 20:19:51.984"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.984" endtime="20210205 20:19:51.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.985" endtime="20210205 20:19:51.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.985" endtime="20210205 20:19:51.986"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.984" endtime="20210205 20:19:51.986"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.986" endtime="20210205 20:19:51.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.987" endtime="20210205 20:19:51.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.987" endtime="20210205 20:19:51.988"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.986" endtime="20210205 20:19:51.988"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.988" endtime="20210205 20:19:51.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.988" endtime="20210205 20:19:51.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.989" endtime="20210205 20:19:51.989"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.988" endtime="20210205 20:19:51.989"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.989" endtime="20210205 20:19:51.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.990" endtime="20210205 20:19:51.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.990" endtime="20210205 20:19:51.991"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.989" endtime="20210205 20:19:51.991"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.991" endtime="20210205 20:19:51.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.992" endtime="20210205 20:19:51.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.992" endtime="20210205 20:19:51.993"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.991" endtime="20210205 20:19:51.993"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.993" endtime="20210205 20:19:51.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.993" endtime="20210205 20:19:51.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.994" endtime="20210205 20:19:51.994"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.993" endtime="20210205 20:19:51.994"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.995" endtime="20210205 20:19:51.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.995" endtime="20210205 20:19:51.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.996" endtime="20210205 20:19:51.996"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.994" endtime="20210205 20:19:51.996"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.997" endtime="20210205 20:19:51.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.997" endtime="20210205 20:19:51.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.998" endtime="20210205 20:19:51.998"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.996" endtime="20210205 20:19:51.998"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.998" endtime="20210205 20:19:51.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.999" endtime="20210205 20:19:51.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:51.999" endtime="20210205 20:19:52.000"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.998" endtime="20210205 20:19:52.000"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.000" endtime="20210205 20:19:52.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.000" endtime="20210205 20:19:52.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.001" endtime="20210205 20:19:52.001"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.000" endtime="20210205 20:19:52.001"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.002" endtime="20210205 20:19:52.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.002" endtime="20210205 20:19:52.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.003" endtime="20210205 20:19:52.003"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.001" endtime="20210205 20:19:52.003"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.003" endtime="20210205 20:19:52.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.004" endtime="20210205 20:19:52.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.004" endtime="20210205 20:19:52.005"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.003" endtime="20210205 20:19:52.005"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.005" endtime="20210205 20:19:52.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.006" endtime="20210205 20:19:52.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.006" endtime="20210205 20:19:52.007"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.005" endtime="20210205 20:19:52.007"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.007" endtime="20210205 20:19:52.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.007" endtime="20210205 20:19:52.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.008" endtime="20210205 20:19:52.008"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.007" endtime="20210205 20:19:52.008"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.008" endtime="20210205 20:19:52.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.009" endtime="20210205 20:19:52.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.009" endtime="20210205 20:19:52.010"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.008" endtime="20210205 20:19:52.010"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.010" endtime="20210205 20:19:52.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.011" endtime="20210205 20:19:52.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.012" endtime="20210205 20:19:52.012"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.010" endtime="20210205 20:19:52.012"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.012" endtime="20210205 20:19:52.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.013" endtime="20210205 20:19:52.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.014" endtime="20210205 20:19:52.014"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.012" endtime="20210205 20:19:52.014"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.014" endtime="20210205 20:19:52.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.015" endtime="20210205 20:19:52.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.015" endtime="20210205 20:19:52.016"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.014" endtime="20210205 20:19:52.016"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.016" endtime="20210205 20:19:52.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.017" endtime="20210205 20:19:52.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.017" endtime="20210205 20:19:52.018"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.016" endtime="20210205 20:19:52.018"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.018" endtime="20210205 20:19:52.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.019" endtime="20210205 20:19:52.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.019" endtime="20210205 20:19:52.020"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.018" endtime="20210205 20:19:52.020"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.020" endtime="20210205 20:19:52.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.020" endtime="20210205 20:19:52.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.021" endtime="20210205 20:19:52.021"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.020" endtime="20210205 20:19:52.021"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.022" endtime="20210205 20:19:52.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.022" endtime="20210205 20:19:52.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.023" endtime="20210205 20:19:52.024"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.022" endtime="20210205 20:19:52.024"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.024" endtime="20210205 20:19:52.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.024" endtime="20210205 20:19:52.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.025" endtime="20210205 20:19:52.025"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.024" endtime="20210205 20:19:52.025"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.026" endtime="20210205 20:19:52.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.026" endtime="20210205 20:19:52.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.027" endtime="20210205 20:19:52.028"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.026" endtime="20210205 20:19:52.028"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.028" endtime="20210205 20:19:52.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.029" endtime="20210205 20:19:52.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.029" endtime="20210205 20:19:52.030"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.028" endtime="20210205 20:19:52.030"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.030" endtime="20210205 20:19:52.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.031" endtime="20210205 20:19:52.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.031" endtime="20210205 20:19:52.032"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.030" endtime="20210205 20:19:52.032"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.032" endtime="20210205 20:19:52.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.033" endtime="20210205 20:19:52.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.033" endtime="20210205 20:19:52.034"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.032" endtime="20210205 20:19:52.034"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.034" endtime="20210205 20:19:52.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.035" endtime="20210205 20:19:52.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.035" endtime="20210205 20:19:52.036"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.034" endtime="20210205 20:19:52.036"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.036" endtime="20210205 20:19:52.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.036" endtime="20210205 20:19:52.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.037" endtime="20210205 20:19:52.037"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.036" endtime="20210205 20:19:52.037"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.038" endtime="20210205 20:19:52.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.038" endtime="20210205 20:19:52.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.039" endtime="20210205 20:19:52.039"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.037" endtime="20210205 20:19:52.039"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.039" endtime="20210205 20:19:52.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.040" endtime="20210205 20:19:52.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.041" endtime="20210205 20:19:52.041"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.039" endtime="20210205 20:19:52.041"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.743" endtime="20210205 20:19:52.041"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${filteridlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.041" endtime="20210205 20:19:52.042"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${filtertitlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.042" endtime="20210205 20:19:52.042"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${filterbodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.042" endtime="20210205 20:19:52.043"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.043" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.043" endtime="20210205 20:19:52.043"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.044" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.044" endtime="20210205 20:19:52.044"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.044" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.044" endtime="20210205 20:19:52.044"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.045" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.044" endtime="20210205 20:19:52.045"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.045" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.045" endtime="20210205 20:19:52.045"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.045" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.045" endtime="20210205 20:19:52.045"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:51.613" endtime="20210205 20:19:52.046"></status>
</kw>
<kw name="VALIDATE FILTERED POST RESPONSE MATCHES USER ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${userfId}</arg>
</arguments>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:52.048" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:52.047" endtime="20210205 20:19:52.048"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:52.049" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:52.048" endtime="20210205 20:19:52.050"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${baseurl}</arg>
<arg>/users/${userid}/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.052" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:52.051" endtime="20210205 20:19:52.053"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:52.118" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/users/10/posts 
 path_url=/users/10/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:52.119" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/users/10/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:53 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc504852c9fe0bbb268f22e9bcd20b45d1612574393; expires=Mon, 08-Mar-21 01:19:53 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612552601', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"a68-bp+xhXz2hSYZZUvrpfEFLIhQbe4"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '21847', 'cf-request-id': '0816859c100000ea4d2c2f4000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=galofd6glnzCP6qGg9sq%2FUnrQZXa4W0IsUafecKush0NKer8ktIcQdqc04GHBeGx9GfXvumHqjGAyWH0j6Fer%2BJh8w30a%2BcYjCvMcaS2cmstP5zKQLK6zDTQHLsJ"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10ba68d98ea4d-IAD'} 
 body=[
  {
    "userId": 10,
    "id": 91,
    "title": "aut amet sed",
    "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
  },
  {
    "userId": 10,
    "id": 92,
    "title": "ratione ex tenetur perferendis",
    "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
  },
  {
    "userId": 10,
    "id": 93,
    "title": "beatae soluta recusandae",
    "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
  },
  {
    "userId": 10,
    "id": 94,
    "title": "qui qui voluptates illo iste minima",
    "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
  },
  {
    "userId": 10,
    "id": 95,
    "title": "id minus libero illum nam ad officiis",
    "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
  },
  {
    "userId": 10,
    "id": 96,
    "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
    "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
  },
  {
    "userId": 10,
    "id": 97,
    "title": "quas fugiat ut perspiciatis vero provident",
    "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
  },
  {
    "userId": 10,
    "id": 98,
    "title": "laboriosam dolor voluptates",
    "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
  },
  {
    "userId": 10,
    "id": 99,
    "title": "temporibus sit alias delectus eligendi possimus magni",
    "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
  },
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<msg timestamp="20210205 20:19:52.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:52.053" endtime="20210205 20:19:52.119"></status>
</kw>
<msg timestamp="20210205 20:19:52.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:52.050" endtime="20210205 20:19:52.120"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.121" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.120" endtime="20210205 20:19:52.121"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.121" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.121" endtime="20210205 20:19:52.122"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.122" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.122" endtime="20210205 20:19:52.122"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.123" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.122" endtime="20210205 20:19:52.123"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.123" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.123" endtime="20210205 20:19:52.124"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.124" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.124" endtime="20210205 20:19:52.124"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.125" endtime="20210205 20:19:52.126"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.126" endtime="20210205 20:19:52.127"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.127" endtime="20210205 20:19:52.127"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.125" endtime="20210205 20:19:52.127"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.128" endtime="20210205 20:19:52.128"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.129" endtime="20210205 20:19:52.129"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.129" endtime="20210205 20:19:52.130"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.128" endtime="20210205 20:19:52.130"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.130" endtime="20210205 20:19:52.131"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.131" endtime="20210205 20:19:52.132"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.132" endtime="20210205 20:19:52.133"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.130" endtime="20210205 20:19:52.133"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.133" endtime="20210205 20:19:52.134"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.134" endtime="20210205 20:19:52.134"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.135" endtime="20210205 20:19:52.135"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.133" endtime="20210205 20:19:52.135"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.136" endtime="20210205 20:19:52.136"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.136" endtime="20210205 20:19:52.137"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.138" endtime="20210205 20:19:52.138"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.135" endtime="20210205 20:19:52.139"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.139" endtime="20210205 20:19:52.140"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.140" endtime="20210205 20:19:52.140"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.141" endtime="20210205 20:19:52.141"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.139" endtime="20210205 20:19:52.141"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.142" endtime="20210205 20:19:52.142"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.142" endtime="20210205 20:19:52.143"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.143" endtime="20210205 20:19:52.144"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.141" endtime="20210205 20:19:52.144"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.144" endtime="20210205 20:19:52.145"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.145" endtime="20210205 20:19:52.146"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.146" endtime="20210205 20:19:52.147"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.144" endtime="20210205 20:19:52.147"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.147" endtime="20210205 20:19:52.148"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.148" endtime="20210205 20:19:52.149"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.149" endtime="20210205 20:19:52.149"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.147" endtime="20210205 20:19:52.149"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.150" endtime="20210205 20:19:52.150"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.150" endtime="20210205 20:19:52.150"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.151" endtime="20210205 20:19:52.151"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.150" endtime="20210205 20:19:52.151"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.124" endtime="20210205 20:19:52.151"></status>
</kw>
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_All_Post</arg>
<arg>${baseurl}</arg>
<arg>/posts</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.152" level="INFO">Creating Session using : alias=Get_All_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:52.152" endtime="20210205 20:19:52.152"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:52.200" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:52.201" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:53 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9b4e7bdcb0986377a86e6f3f622eefd01612574393; expires=Mon, 08-Mar-21 01:19:53 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612488045', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '28766', 'cf-request-id': '0816859c7300000d8647869000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=SCCCfdrlwZ%2BRatv%2B6o5fuyFAkywDIaz9HC%2F%2F3TD2Fq3dCG6czaNWJ7cmpYIcrvoDL6QYT999Q9cYFAnDQr15PxbxXxm4E6ifdMnCpJ2AWhm9DBix1kXwvYQ3rXUI"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10ba71ece0d86-IAD'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  },
  {
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
  },
  {
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
  },
  {
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
  },
  {
    "userId": 1,
    "id": 5,
    "title": "nesciunt quas odio",
    "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
  },
  {
    "userId": 1,
    "id": 6,
    "title": "dolorem eum magni eos aperiam quia",
    "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
  },
  {
    "userId": 1,
    "id": 7,
    "title": "magnam facilis autem",
    "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
  },
  {
    "userId": 1,
    "id": 8,
    "title": "dolorem dolore est ipsam",
    "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
  },
  {
    "userId": 1,
    "id": 9,
    "title": "nesciunt iure omnis dolorem tempora et accusantium",
    "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
  },
  {
    "userId": 1,
    "id": 10,
    "title": "optio molestias id quia eum",
    "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
  },
  {
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
  },
  {
    "userId": 2,
    "id": 12,
    "title": "in quibusdam tempore odit est dolorem",
    "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
  },
  {
    "userId": 2,
    "id": 13,
    "title": "dolorum ut in voluptas mollitia et saepe quo animi",
    "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
  },
  {
    "userId": 2,
    "id": 14,
    "title": "voluptatem eligendi optio",
    "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
  },
  {
    "userId": 2,
    "id": 15,
    "title": "eveniet quod temporibus",
    "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
  },
  {
    "userId": 2,
    "id": 16,
    "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
    "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
  },
  {
    "userId": 2,
    "id": 17,
    "title": "fugit voluptas sed molestias voluptatem provident",
    "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
  },
  {
    "userId": 2,
    "id": 18,
    "title": "voluptate et itaque vero tempora molestiae",
    "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
  },
  {
    "userId": 2,
    "id": 19,
    "title": "adipisci placeat illum aut reiciendis qui",
    "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
  },
  {
    "userId": 2,
    "id": 20,
    "title": "doloribus ad provident suscipit at",
    "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
  },
  {
    "userId": 3,
    "id": 21,
    "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
    "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
  },
  {
    "userId": 3,
    "id": 22,
    "title": "dolor sint quo a velit explicabo quia nam",
    "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
  },
  {
    "userId": 3,
    "id": 23,
    "title": "maxime id vitae nihil numquam",
    "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
  },
  {
    "userId": 3,
    "id": 24,
    "title": "autem hic labore sunt dolores incidunt",
    "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
  },
  {
    "userId": 3,
    "id": 25,
    "title": "rem alias distinctio quo quis",
    "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
  },
  {
    "userId": 3,
    "id": 26,
    "title": "est et quae odit qui non",
    "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
  },
  {
    "userId": 3,
    "id": 27,
    "title": "quasi id et eos tenetur aut quo autem",
    "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
  },
  {
    "userId": 3,
    "id": 28,
    "title": "delectus ullam et corporis nulla voluptas sequi",
    "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
  },
  {
    "userId": 3,
    "id": 29,
    "title": "iusto eius quod necessitatibus culpa ea",
    "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
  },
  {
    "userId": 3,
    "id": 30,
    "title": "a quo magni similique perferendis",
    "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
  },
  {
    "userId": 4,
    "id": 31,
    "title": "ullam ut quidem id aut vel consequuntur",
    "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
  },
  {
    "userId": 4,
    "id": 32,
    "title": "doloremque illum aliquid sunt",
    "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
  },
  {
    "userId": 4,
    "id": 33,
    "title": "qui explicabo molestiae dolorem",
    "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
  },
  {
    "userId": 4,
    "id": 34,
    "title": "magnam ut rerum iure",
    "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
  },
  {
    "userId": 4,
    "id": 35,
    "title": "id nihil consequatur molestias animi provident",
    "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
  },
  {
    "userId": 4,
    "id": 36,
    "title": "fuga nam accusamus voluptas reiciendis itaque",
    "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
  },
  {
    "userId": 4,
    "id": 37,
    "title": "provident vel ut sit ratione est... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210205 20:19:52.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:52.153" endtime="20210205 20:19:52.202"></status>
</kw>
<msg timestamp="20210205 20:19:52.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:52.151" endtime="20210205 20:19:52.202"></status>
</kw>
<kw name="${item} IN [ @{response.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.204" endtime="20210205 20:19:52.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.205" endtime="20210205 20:19:52.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.206" endtime="20210205 20:19:52.206"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.203" endtime="20210205 20:19:52.206"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.207" endtime="20210205 20:19:52.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.208" endtime="20210205 20:19:52.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.208" endtime="20210205 20:19:52.209"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.206" endtime="20210205 20:19:52.209"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.210" endtime="20210205 20:19:52.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.210" endtime="20210205 20:19:52.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.211" endtime="20210205 20:19:52.212"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.209" endtime="20210205 20:19:52.212"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.212" endtime="20210205 20:19:52.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.213" endtime="20210205 20:19:52.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.214" endtime="20210205 20:19:52.215"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.212" endtime="20210205 20:19:52.215"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.215" endtime="20210205 20:19:52.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.216" endtime="20210205 20:19:52.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.217" endtime="20210205 20:19:52.218"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.215" endtime="20210205 20:19:52.218"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab rep..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.218" endtime="20210205 20:19:52.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.219" endtime="20210205 20:19:52.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.220" endtime="20210205 20:19:52.221"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.218" endtime="20210205 20:19:52.221"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.221" endtime="20210205 20:19:52.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.222" endtime="20210205 20:19:52.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.223" endtime="20210205 20:19:52.224"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.221" endtime="20210205 20:19:52.224"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\n..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.224" endtime="20210205 20:19:52.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.225" endtime="20210205 20:19:52.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.226" endtime="20210205 20:19:52.227"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.224" endtime="20210205 20:19:52.227"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.227" endtime="20210205 20:19:52.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.228" endtime="20210205 20:19:52.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.229" endtime="20210205 20:19:52.230"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.227" endtime="20210205 20:19:52.230"></status>
</kw>
<kw name="${item} = {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.230" endtime="20210205 20:19:52.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.231" endtime="20210205 20:19:52.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.232" endtime="20210205 20:19:52.232"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.230" endtime="20210205 20:19:52.232"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 11, 'title': 'et ea vero quia laudantium autem', 'body': 'delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque vo..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.234" endtime="20210205 20:19:52.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.235" endtime="20210205 20:19:52.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.236" endtime="20210205 20:19:52.237"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.232" endtime="20210205 20:19:52.237"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 12, 'title': 'in quibusdam tempore odit est dolorem', 'body': 'itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id volup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.237" endtime="20210205 20:19:52.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.238" endtime="20210205 20:19:52.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.239" endtime="20210205 20:19:52.240"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.237" endtime="20210205 20:19:52.240"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 13, 'title': 'dolorum ut in voluptas mollitia et saepe quo animi', 'body': 'aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem ei..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.240" endtime="20210205 20:19:52.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.241" endtime="20210205 20:19:52.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.241" endtime="20210205 20:19:52.242"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.240" endtime="20210205 20:19:52.242"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 14, 'title': 'voluptatem eligendi optio', 'body': 'fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut volupt..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.242" endtime="20210205 20:19:52.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.242" endtime="20210205 20:19:52.243"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.243" endtime="20210205 20:19:52.243"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.242" endtime="20210205 20:19:52.243"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 15, 'title': 'eveniet quod temporibus', 'body': 'reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\noffi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.243" endtime="20210205 20:19:52.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.244" endtime="20210205 20:19:52.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.244" endtime="20210205 20:19:52.245"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.243" endtime="20210205 20:19:52.245"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 16, 'title': 'sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio', 'body': 'suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvolu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.245" endtime="20210205 20:19:52.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.246" endtime="20210205 20:19:52.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.246" endtime="20210205 20:19:52.247"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.245" endtime="20210205 20:19:52.247"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 17, 'title': 'fugit voluptas sed molestias voluptatem provident', 'body': 'eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.247" endtime="20210205 20:19:52.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.248" endtime="20210205 20:19:52.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.249" endtime="20210205 20:19:52.249"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.247" endtime="20210205 20:19:52.250"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 18, 'title': 'voluptate et itaque vero tempora molestiae', 'body': 'eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.250" endtime="20210205 20:19:52.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.251" endtime="20210205 20:19:52.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.252" endtime="20210205 20:19:52.252"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.250" endtime="20210205 20:19:52.253"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 19, 'title': 'adipisci placeat illum aut reiciendis qui', 'body': 'illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.253" endtime="20210205 20:19:52.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.254" endtime="20210205 20:19:52.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.255" endtime="20210205 20:19:52.255"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.253" endtime="20210205 20:19:52.256"></status>
</kw>
<kw name="${item} = {'userId': 2, 'id': 20, 'title': 'doloribus ad provident suscipit at', 'body': 'qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitatio..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.256" endtime="20210205 20:19:52.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.257" endtime="20210205 20:19:52.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.258" endtime="20210205 20:19:52.258"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.256" endtime="20210205 20:19:52.258"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 21, 'title': 'asperiores ea ipsam voluptatibus modi minima quia sint', 'body': 'repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt do..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.259" endtime="20210205 20:19:52.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.260" endtime="20210205 20:19:52.260"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.261" endtime="20210205 20:19:52.261"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.259" endtime="20210205 20:19:52.261"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 22, 'title': 'dolor sint quo a velit explicabo quia nam', 'body': 'eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.262" endtime="20210205 20:19:52.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.263" endtime="20210205 20:19:52.264"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.264" endtime="20210205 20:19:52.265"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.261" endtime="20210205 20:19:52.265"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 23, 'title': 'maxime id vitae nihil numquam', 'body': 'veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel be..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.265" endtime="20210205 20:19:52.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.266" endtime="20210205 20:19:52.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.267" endtime="20210205 20:19:52.268"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.265" endtime="20210205 20:19:52.268"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 24, 'title': 'autem hic labore sunt dolores incidunt', 'body': 'enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.268" endtime="20210205 20:19:52.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.269" endtime="20210205 20:19:52.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.270" endtime="20210205 20:19:52.271"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.268" endtime="20210205 20:19:52.271"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 25, 'title': 'rem alias distinctio quo quis', 'body': 'ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo t..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.271" endtime="20210205 20:19:52.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.272" endtime="20210205 20:19:52.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.273" endtime="20210205 20:19:52.274"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.271" endtime="20210205 20:19:52.274"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 26, 'title': 'est et quae odit qui non', 'body': 'similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.274" endtime="20210205 20:19:52.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.275" endtime="20210205 20:19:52.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.276" endtime="20210205 20:19:52.276"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.274" endtime="20210205 20:19:52.277"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 27, 'title': 'quasi id et eos tenetur aut quo autem', 'body': 'eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nco..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.277" endtime="20210205 20:19:52.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.279" endtime="20210205 20:19:52.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.280" endtime="20210205 20:19:52.281"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.277" endtime="20210205 20:19:52.281"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 28, 'title': 'delectus ullam et corporis nulla voluptas sequi', 'body': 'non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptati..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.281" endtime="20210205 20:19:52.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.282" endtime="20210205 20:19:52.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.282" endtime="20210205 20:19:52.283"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.281" endtime="20210205 20:19:52.283"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 29, 'title': 'iusto eius quod necessitatibus culpa ea', 'body': 'odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae o..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.283" endtime="20210205 20:19:52.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.284" endtime="20210205 20:19:52.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.284" endtime="20210205 20:19:52.284"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.283" endtime="20210205 20:19:52.285"></status>
</kw>
<kw name="${item} = {'userId': 3, 'id': 30, 'title': 'a quo magni similique perferendis', 'body': 'alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.285" endtime="20210205 20:19:52.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.285" endtime="20210205 20:19:52.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.286" endtime="20210205 20:19:52.286"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.285" endtime="20210205 20:19:52.286"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 31, 'title': 'ullam ut quidem id aut vel consequuntur', 'body': 'debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.286" endtime="20210205 20:19:52.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.287" endtime="20210205 20:19:52.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.287" endtime="20210205 20:19:52.288"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.286" endtime="20210205 20:19:52.288"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 32, 'title': 'doloremque illum aliquid sunt', 'body': 'deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.288" endtime="20210205 20:19:52.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.289" endtime="20210205 20:19:52.289"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.289" endtime="20210205 20:19:52.290"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.288" endtime="20210205 20:19:52.290"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 33, 'title': 'qui explicabo molestiae dolorem', 'body': 'rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis s..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.290" endtime="20210205 20:19:52.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.291" endtime="20210205 20:19:52.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.291" endtime="20210205 20:19:52.291"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.290" endtime="20210205 20:19:52.292"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 34, 'title': 'magnam ut rerum iure', 'body': 'ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora min..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.292" endtime="20210205 20:19:52.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.292" endtime="20210205 20:19:52.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.293" endtime="20210205 20:19:52.294"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.292" endtime="20210205 20:19:52.294"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 35, 'title': 'id nihil consequatur molestias animi provident', 'body': 'nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.294" endtime="20210205 20:19:52.294"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.295" endtime="20210205 20:19:52.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.295" endtime="20210205 20:19:52.295"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.294" endtime="20210205 20:19:52.295"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 36, 'title': 'fuga nam accusamus voluptas reiciendis itaque', 'body': 'ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.296" endtime="20210205 20:19:52.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.296" endtime="20210205 20:19:52.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.297" endtime="20210205 20:19:52.297"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.296" endtime="20210205 20:19:52.297"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 37, 'title': 'provident vel ut sit ratione est', 'body': 'debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nv..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.297" endtime="20210205 20:19:52.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.298" endtime="20210205 20:19:52.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.298" endtime="20210205 20:19:52.299"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.297" endtime="20210205 20:19:52.299"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 38, 'title': 'explicabo et eos deleniti nostrum ab id repellendus', 'body': 'animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.299" endtime="20210205 20:19:52.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.300" endtime="20210205 20:19:52.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.300" endtime="20210205 20:19:52.301"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.299" endtime="20210205 20:19:52.301"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 39, 'title': 'eos dolorem iste accusantium est eaque quam', 'body': 'corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti aspe..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.301" endtime="20210205 20:19:52.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.302" endtime="20210205 20:19:52.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.302" endtime="20210205 20:19:52.303"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.301" endtime="20210205 20:19:52.303"></status>
</kw>
<kw name="${item} = {'userId': 4, 'id': 40, 'title': 'enim quo cumque', 'body': 'ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptate..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.303" endtime="20210205 20:19:52.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.303" endtime="20210205 20:19:52.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.304" endtime="20210205 20:19:52.304"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.303" endtime="20210205 20:19:52.304"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 41, 'title': 'non est facere', 'body': 'molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex u..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.304" endtime="20210205 20:19:52.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.305" endtime="20210205 20:19:52.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.305" endtime="20210205 20:19:52.306"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.304" endtime="20210205 20:19:52.306"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 42, 'title': 'commodi ullam sint et excepturi error explicabo praesentium voluptas', 'body': 'odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis ali..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.306" endtime="20210205 20:19:52.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.307" endtime="20210205 20:19:52.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.307" endtime="20210205 20:19:52.307"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.306" endtime="20210205 20:19:52.308"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 43, 'title': 'eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis', 'body': 'similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexerc..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.308" endtime="20210205 20:19:52.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.308" endtime="20210205 20:19:52.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.310" endtime="20210205 20:19:52.310"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.308" endtime="20210205 20:19:52.310"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 44, 'title': 'optio dolor molestias sit', 'body': 'temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.310" endtime="20210205 20:19:52.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.311" endtime="20210205 20:19:52.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.311" endtime="20210205 20:19:52.312"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.310" endtime="20210205 20:19:52.312"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 45, 'title': 'ut numquam possimus omnis eius suscipit laudantium iure', 'body': 'est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.312" endtime="20210205 20:19:52.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.313" endtime="20210205 20:19:52.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.313" endtime="20210205 20:19:52.313"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.312" endtime="20210205 20:19:52.313"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 46, 'title': 'aut quo modi neque nostrum ducimus', 'body': 'voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.314" endtime="20210205 20:19:52.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.314" endtime="20210205 20:19:52.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.315" endtime="20210205 20:19:52.315"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.314" endtime="20210205 20:19:52.315"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 47, 'title': 'quibusdam cumque rem aut deserunt', 'body': 'voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beata..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.315" endtime="20210205 20:19:52.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.316" endtime="20210205 20:19:52.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.316" endtime="20210205 20:19:52.317"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.315" endtime="20210205 20:19:52.317"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 48, 'title': 'ut voluptatem illum ea doloribus itaque eos', 'body': 'voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab delenit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.317" endtime="20210205 20:19:52.317"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.318" endtime="20210205 20:19:52.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.318" endtime="20210205 20:19:52.319"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.317" endtime="20210205 20:19:52.319"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 49, 'title': 'laborum non sunt aut ut assumenda perspiciatis voluptas', 'body': 'inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum verit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.319" endtime="20210205 20:19:52.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.319" endtime="20210205 20:19:52.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.320" endtime="20210205 20:19:52.320"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.319" endtime="20210205 20:19:52.321"></status>
</kw>
<kw name="${item} = {'userId': 5, 'id': 50, 'title': 'repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem', 'body': 'error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi e..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.321" endtime="20210205 20:19:52.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.321" endtime="20210205 20:19:52.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.322" endtime="20210205 20:19:52.322"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.321" endtime="20210205 20:19:52.322"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 51, 'title': 'soluta aliquam aperiam consequatur illo quis voluptas', 'body': 'sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.322" endtime="20210205 20:19:52.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.323" endtime="20210205 20:19:52.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.323" endtime="20210205 20:19:52.324"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.322" endtime="20210205 20:19:52.324"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 52, 'title': 'qui enim et consequuntur quia animi quis voluptate quibusdam', 'body': 'iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iust..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.324" endtime="20210205 20:19:52.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.325" endtime="20210205 20:19:52.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.325" endtime="20210205 20:19:52.326"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.324" endtime="20210205 20:19:52.326"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 53, 'title': 'ut quo aut ducimus alias', 'body': 'minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quid..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.327" endtime="20210205 20:19:52.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.328" endtime="20210205 20:19:52.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.329" endtime="20210205 20:19:52.329"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.326" endtime="20210205 20:19:52.329"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 54, 'title': 'sit asperiores ipsam eveniet odio non quia', 'body': 'totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero inci..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.330" endtime="20210205 20:19:52.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.331" endtime="20210205 20:19:52.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.332" endtime="20210205 20:19:52.332"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.329" endtime="20210205 20:19:52.332"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 55, 'title': 'sit vel voluptatem et non libero', 'body': 'debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.333" endtime="20210205 20:19:52.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.334" endtime="20210205 20:19:52.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.335" endtime="20210205 20:19:52.335"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.333" endtime="20210205 20:19:52.335"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 56, 'title': 'qui et at rerum necessitatibus', 'body': 'aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis h..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.336" endtime="20210205 20:19:52.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.337" endtime="20210205 20:19:52.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.338" endtime="20210205 20:19:52.338"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.336" endtime="20210205 20:19:52.338"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 57, 'title': 'sed ab est est', 'body': 'at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.339" endtime="20210205 20:19:52.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.341" endtime="20210205 20:19:52.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.341" endtime="20210205 20:19:52.341"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.338" endtime="20210205 20:19:52.341"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 58, 'title': 'voluptatum itaque dolores nisi et quasi', 'body': 'veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad simil..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.342" endtime="20210205 20:19:52.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.343" endtime="20210205 20:19:52.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.344" endtime="20210205 20:19:52.344"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.342" endtime="20210205 20:19:52.344"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 59, 'title': 'qui commodi dolor at maiores et quis id accusantium', 'body': 'perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.345" endtime="20210205 20:19:52.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.346" endtime="20210205 20:19:52.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.347" endtime="20210205 20:19:52.347"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.345" endtime="20210205 20:19:52.347"></status>
</kw>
<kw name="${item} = {'userId': 6, 'id': 60, 'title': 'consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere', 'body': 'asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et f..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.348" endtime="20210205 20:19:52.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.349" endtime="20210205 20:19:52.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.350" endtime="20210205 20:19:52.350"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.348" endtime="20210205 20:19:52.350"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 61, 'title': 'voluptatem doloribus consectetur est ut ducimus', 'body': 'ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blandit..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.351" endtime="20210205 20:19:52.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.352" endtime="20210205 20:19:52.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.353" endtime="20210205 20:19:52.353"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.351" endtime="20210205 20:19:52.353"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 62, 'title': 'beatae enim quia vel', 'body': 'enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omn..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.354" endtime="20210205 20:19:52.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.355" endtime="20210205 20:19:52.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.356" endtime="20210205 20:19:52.358"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.354" endtime="20210205 20:19:52.358"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 63, 'title': 'voluptas blanditiis repellendus animi ducimus error sapiente et suscipit', 'body': 'enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporib..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.358" endtime="20210205 20:19:52.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.358" endtime="20210205 20:19:52.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.359" endtime="20210205 20:19:52.360"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.358" endtime="20210205 20:19:52.360"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 64, 'title': 'et fugit quas eum in in aperiam quod', 'body': 'id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaqu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.361" endtime="20210205 20:19:52.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.362" endtime="20210205 20:19:52.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.363" endtime="20210205 20:19:52.364"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.360" endtime="20210205 20:19:52.364"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 65, 'title': 'consequatur id enim sunt et et', 'body': 'voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.365" endtime="20210205 20:19:52.367"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.367" endtime="20210205 20:19:52.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.368" endtime="20210205 20:19:52.369"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.365" endtime="20210205 20:19:52.369"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 66, 'title': 'repudiandae ea animi iusto', 'body': 'officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusd..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.370" endtime="20210205 20:19:52.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.371" endtime="20210205 20:19:52.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.372" endtime="20210205 20:19:52.373"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.370" endtime="20210205 20:19:52.373"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 67, 'title': 'aliquid eos sed fuga est maxime repellendus', 'body': 'reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.374" endtime="20210205 20:19:52.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.376" endtime="20210205 20:19:52.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.377" endtime="20210205 20:19:52.378"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.374" endtime="20210205 20:19:52.378"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 68, 'title': 'odio quis facere architecto reiciendis optio', 'body': 'magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.378" endtime="20210205 20:19:52.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.379" endtime="20210205 20:19:52.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.380" endtime="20210205 20:19:52.381"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.378" endtime="20210205 20:19:52.381"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 69, 'title': 'fugiat quod pariatur odit minima', 'body': 'officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisq..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.381" endtime="20210205 20:19:52.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.382" endtime="20210205 20:19:52.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.383" endtime="20210205 20:19:52.384"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.381" endtime="20210205 20:19:52.384"></status>
</kw>
<kw name="${item} = {'userId': 7, 'id': 70, 'title': 'voluptatem laborum magni', 'body': 'sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.384" endtime="20210205 20:19:52.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.385" endtime="20210205 20:19:52.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.386" endtime="20210205 20:19:52.387"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.384" endtime="20210205 20:19:52.387"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 71, 'title': 'et iusto veniam et illum aut fuga', 'body': 'occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim v..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.388" endtime="20210205 20:19:52.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.388" endtime="20210205 20:19:52.389"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.390" endtime="20210205 20:19:52.390"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.387" endtime="20210205 20:19:52.390"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 72, 'title': 'sint hic doloribus consequatur eos non id', 'body': 'quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque i..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.390" endtime="20210205 20:19:52.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.391" endtime="20210205 20:19:52.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.391" endtime="20210205 20:19:52.392"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.390" endtime="20210205 20:19:52.392"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 73, 'title': 'consequuntur deleniti eos quia temporibus ab aliquid at', 'body': 'voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.392" endtime="20210205 20:19:52.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.393" endtime="20210205 20:19:52.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.393" endtime="20210205 20:19:52.394"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.392" endtime="20210205 20:19:52.394"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 74, 'title': 'enim unde ratione doloribus quas enim ut sit sapiente', 'body': 'odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magna..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.394" endtime="20210205 20:19:52.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.394" endtime="20210205 20:19:52.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.395" endtime="20210205 20:19:52.395"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.394" endtime="20210205 20:19:52.395"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 75, 'title': 'dignissimos eum dolor ut enim et delectus in', 'body': 'commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.396" endtime="20210205 20:19:52.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.396" endtime="20210205 20:19:52.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.397" endtime="20210205 20:19:52.397"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.395" endtime="20210205 20:19:52.397"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 76, 'title': 'doloremque officiis ad et non perferendis', 'body': 'ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.397" endtime="20210205 20:19:52.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.398" endtime="20210205 20:19:52.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.398" endtime="20210205 20:19:52.399"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.397" endtime="20210205 20:19:52.399"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 77, 'title': 'necessitatibus quasi exercitationem odio', 'body': 'modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvolup..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.399" endtime="20210205 20:19:52.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.400" endtime="20210205 20:19:52.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.400" endtime="20210205 20:19:52.400"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.399" endtime="20210205 20:19:52.401"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 78, 'title': 'quam voluptatibus rerum veritatis', 'body': 'nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus'..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.401" endtime="20210205 20:19:52.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.401" endtime="20210205 20:19:52.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.402" endtime="20210205 20:19:52.402"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.401" endtime="20210205 20:19:52.402"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 79, 'title': 'pariatur consequatur quia magnam autem omnis non amet', 'body': 'libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.402" endtime="20210205 20:19:52.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.403" endtime="20210205 20:19:52.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.403" endtime="20210205 20:19:52.404"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.402" endtime="20210205 20:19:52.404"></status>
</kw>
<kw name="${item} = {'userId': 8, 'id': 80, 'title': 'labore in ex et explicabo corporis aut quas', 'body': 'ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.404" endtime="20210205 20:19:52.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.405" endtime="20210205 20:19:52.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.405" endtime="20210205 20:19:52.406"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.404" endtime="20210205 20:19:52.406"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 81, 'title': 'tempora rem veritatis voluptas quo dolores vero', 'body': 'facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.406" endtime="20210205 20:19:52.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.406" endtime="20210205 20:19:52.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.407" endtime="20210205 20:19:52.407"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.406" endtime="20210205 20:19:52.407"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 82, 'title': 'laudantium voluptate suscipit sunt enim enim', 'body': 'ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.408" endtime="20210205 20:19:52.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.408" endtime="20210205 20:19:52.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.409" endtime="20210205 20:19:52.410"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.407" endtime="20210205 20:19:52.410"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 83, 'title': 'odit et voluptates doloribus alias odio et', 'body': 'est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus aut..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.411" endtime="20210205 20:19:52.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.412" endtime="20210205 20:19:52.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.413" endtime="20210205 20:19:52.413"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.410" endtime="20210205 20:19:52.413"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 84, 'title': 'optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut', 'body': 'sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique ven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.414" endtime="20210205 20:19:52.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.415" endtime="20210205 20:19:52.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.416" endtime="20210205 20:19:52.417"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.414" endtime="20210205 20:19:52.417"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 85, 'title': 'dolore veritatis porro provident adipisci blanditiis et sunt', 'body': 'similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam si..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.417" endtime="20210205 20:19:52.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.418" endtime="20210205 20:19:52.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.419" endtime="20210205 20:19:52.420"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.417" endtime="20210205 20:19:52.420"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 86, 'title': 'placeat quia et porro iste', 'body': 'quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel expli..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.421" endtime="20210205 20:19:52.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.422" endtime="20210205 20:19:52.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.423" endtime="20210205 20:19:52.424"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.420" endtime="20210205 20:19:52.424"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 87, 'title': 'nostrum quis quasi placeat', 'body': 'eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.424" endtime="20210205 20:19:52.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.425" endtime="20210205 20:19:52.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.426" endtime="20210205 20:19:52.427"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.424" endtime="20210205 20:19:52.427"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 88, 'title': 'sapiente omnis fugit eos', 'body': 'consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.428" endtime="20210205 20:19:52.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.429" endtime="20210205 20:19:52.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.430" endtime="20210205 20:19:52.430"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.427" endtime="20210205 20:19:52.431"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 89, 'title': 'sint soluta et vel magnam aut ut sed qui', 'body': 'repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.431" endtime="20210205 20:19:52.432"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.432" endtime="20210205 20:19:52.433"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.433" endtime="20210205 20:19:52.434"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.431" endtime="20210205 20:19:52.434"></status>
</kw>
<kw name="${item} = {'userId': 9, 'id': 90, 'title': 'ad iusto omnis odit dolor voluptatibus', 'body': 'minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta simi..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.434" endtime="20210205 20:19:52.435"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.435" endtime="20210205 20:19:52.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.436" endtime="20210205 20:19:52.437"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.434" endtime="20210205 20:19:52.437"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 91, 'title': 'aut amet sed', 'body': 'libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores qu..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.439" endtime="20210205 20:19:52.440"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.438" endtime="20210205 20:19:52.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.442" endtime="20210205 20:19:52.442"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.441" endtime="20210205 20:19:52.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.444" endtime="20210205 20:19:52.444"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.443" endtime="20210205 20:19:52.445"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.438" endtime="20210205 20:19:52.445"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 92, 'title': 'ratione ex tenetur perferendis', 'body': 'aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommod..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.446" endtime="20210205 20:19:52.447"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.445" endtime="20210205 20:19:52.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.448" endtime="20210205 20:19:52.449"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.447" endtime="20210205 20:19:52.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.449" endtime="20210205 20:19:52.450"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.449" endtime="20210205 20:19:52.450"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.445" endtime="20210205 20:19:52.450"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 93, 'title': 'beatae soluta recusandae', 'body': 'dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit to..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.451" endtime="20210205 20:19:52.451"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.450" endtime="20210205 20:19:52.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.452" endtime="20210205 20:19:52.452"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.451" endtime="20210205 20:19:52.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.453" endtime="20210205 20:19:52.454"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.452" endtime="20210205 20:19:52.454"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.450" endtime="20210205 20:19:52.454"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 94, 'title': 'qui qui voluptates illo iste minima', 'body': 'aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.456" endtime="20210205 20:19:52.456"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.455" endtime="20210205 20:19:52.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.458" endtime="20210205 20:19:52.458"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.457" endtime="20210205 20:19:52.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.460" endtime="20210205 20:19:52.460"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.459" endtime="20210205 20:19:52.461"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.454" endtime="20210205 20:19:52.461"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 95, 'title': 'id minus libero illum nam ad officiis', 'body': 'earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dic..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.462" endtime="20210205 20:19:52.463"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.461" endtime="20210205 20:19:52.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.464" endtime="20210205 20:19:52.465"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.463" endtime="20210205 20:19:52.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.466" endtime="20210205 20:19:52.467"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.465" endtime="20210205 20:19:52.467"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.461" endtime="20210205 20:19:52.467"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 96, 'title': 'quaerat velit veniam amet cupiditate aut numquam ut sequi', 'body': 'in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.468" endtime="20210205 20:19:52.469"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.467" endtime="20210205 20:19:52.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.471" endtime="20210205 20:19:52.471"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.470" endtime="20210205 20:19:52.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.472" endtime="20210205 20:19:52.473"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.472" endtime="20210205 20:19:52.473"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.467" endtime="20210205 20:19:52.473"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 97, 'title': 'quas fugiat ut perspiciatis vero provident', 'body': 'eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inven..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.475" endtime="20210205 20:19:52.476"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.474" endtime="20210205 20:19:52.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.477" endtime="20210205 20:19:52.478"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.476" endtime="20210205 20:19:52.478"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.479" endtime="20210205 20:19:52.480"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.478" endtime="20210205 20:19:52.480"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.474" endtime="20210205 20:19:52.480"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 98, 'title': 'laboriosam dolor voluptates', 'body': 'doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.481" endtime="20210205 20:19:52.482"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.480" endtime="20210205 20:19:52.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.483" endtime="20210205 20:19:52.484"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.482" endtime="20210205 20:19:52.484"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.485" endtime="20210205 20:19:52.486"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.484" endtime="20210205 20:19:52.486"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.480" endtime="20210205 20:19:52.486"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 99, 'title': 'temporibus sit alias delectus eligendi possimus magni', 'body': 'quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque ..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.487" endtime="20210205 20:19:52.488"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.487" endtime="20210205 20:19:52.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.489" endtime="20210205 20:19:52.490"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.488" endtime="20210205 20:19:52.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.491" endtime="20210205 20:19:52.491"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.490" endtime="20210205 20:19:52.491"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.486" endtime="20210205 20:19:52.492"></status>
</kw>
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.493" endtime="20210205 20:19:52.493"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.492" endtime="20210205 20:19:52.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.494" endtime="20210205 20:19:52.495"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.494" endtime="20210205 20:19:52.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${item['userId']}" == "${userid}"</arg>
<arg>Append To List</arg>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.496" endtime="20210205 20:19:52.497"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.495" endtime="20210205 20:19:52.497"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.492" endtime="20210205 20:19:52.497"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.202" endtime="20210205 20:19:52.497"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${filteridlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.497" endtime="20210205 20:19:52.498"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${filtertitlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.498" endtime="20210205 20:19:52.498"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${filterbodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.499" endtime="20210205 20:19:52.499"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.500" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.499" endtime="20210205 20:19:52.500"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.501" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.500" endtime="20210205 20:19:52.501"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.502" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.501" endtime="20210205 20:19:52.502"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.502" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.502" endtime="20210205 20:19:52.502"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.503" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.503" endtime="20210205 20:19:52.503"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.504" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.503" endtime="20210205 20:19:52.504"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.047" endtime="20210205 20:19:52.504"></status>
</kw>
<doc>Compare Full Response User Id filtering to /users/{userid}/posts</doc>
<tags>
<tag>Positive</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:19:51.526" endtime="20210205 20:19:52.505" critical="yes"></status>
</test>
<test id="s1-t7" name="TC007 COMPARE POST ID FILTERED POST ENDPOINT RESPONSE TO GET POST BY POST ID URI RESPONSE">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:52.521" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:52.519" endtime="20210205 20:19:52.521"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:19:52.523" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:52.521" endtime="20210205 20:19:52.523"></status>
</kw>
<msg timestamp="20210205 20:19:52.523" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:52.519" endtime="20210205 20:19:52.523"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.526" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:52.524" endtime="20210205 20:19:52.526"></status>
</kw>
<msg timestamp="20210205 20:19:52.526" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:19:52.524" endtime="20210205 20:19:52.526"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.528" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:52.527" endtime="20210205 20:19:52.528"></status>
</kw>
<msg timestamp="20210205 20:19:52.529" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:52.526" endtime="20210205 20:19:52.529"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.532" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:52.530" endtime="20210205 20:19:52.532"></status>
</kw>
<msg timestamp="20210205 20:19:52.533" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:52.529" endtime="20210205 20:19:52.533"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.537" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:52.535" endtime="20210205 20:19:52.537"></status>
</kw>
<msg timestamp="20210205 20:19:52.538" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:19:52.533" endtime="20210205 20:19:52.538"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.540" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:52.539" endtime="20210205 20:19:52.540"></status>
</kw>
<msg timestamp="20210205 20:19:52.541" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:52.538" endtime="20210205 20:19:52.541"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.545" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:52.542" endtime="20210205 20:19:52.545"></status>
</kw>
<msg timestamp="20210205 20:19:52.546" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:52.541" endtime="20210205 20:19:52.546"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.549" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:19:52.547" endtime="20210205 20:19:52.549"></status>
</kw>
<msg timestamp="20210205 20:19:52.550" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:52.546" endtime="20210205 20:19:52.550"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.552" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:52.551" endtime="20210205 20:19:52.552"></status>
</kw>
<msg timestamp="20210205 20:19:52.553" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:52.550" endtime="20210205 20:19:52.553"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.556" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:52.554" endtime="20210205 20:19:52.556"></status>
</kw>
<msg timestamp="20210205 20:19:52.558" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:19:52.553" endtime="20210205 20:19:52.558"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.564" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:52.561" endtime="20210205 20:19:52.565"></status>
</kw>
<msg timestamp="20210205 20:19:52.565" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:52.560" endtime="20210205 20:19:52.565"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:52.569" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:19:52.567" endtime="20210205 20:19:52.570"></status>
</kw>
<msg timestamp="20210205 20:19:52.570" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:52.566" endtime="20210205 20:19:52.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.571" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:52.571" endtime="20210205 20:19:52.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:19:52.572" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:19:52.572" endtime="20210205 20:19:52.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.573" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:19:52.573" endtime="20210205 20:19:52.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.574" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:52.574" endtime="20210205 20:19:52.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.576" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:52.575" endtime="20210205 20:19:52.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.577" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:19:52.577" endtime="20210205 20:19:52.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.579" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:52.578" endtime="20210205 20:19:52.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.580" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:52.579" endtime="20210205 20:19:52.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.581" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:52.581" endtime="20210205 20:19:52.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.582" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:52.582" endtime="20210205 20:19:52.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.583" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:19:52.582" endtime="20210205 20:19:52.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.584" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:52.583" endtime="20210205 20:19:52.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.585" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:52.585" endtime="20210205 20:19:52.585"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.518" endtime="20210205 20:19:52.586"></status>
</kw>
<kw name="Set Test Documentation" library="BuiltIn">
<doc>Sets documentation for the current test case.</doc>
<arguments>
<arg>Compare /posts parameter filter response to posts/{num}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.588" level="INFO">Set test documentation to:
Compare /posts parameter filter response to posts/{num}</msg>
<status status="PASS" starttime="20210205 20:19:52.587" endtime="20210205 20:19:52.588"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postinId}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:52.590" level="INFO">@{post_list} = [ 1 ]</msg>
<status status="PASS" starttime="20210205 20:19:52.589" endtime="20210205 20:19:52.590"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:19:52.591" level="INFO">Length is 1</msg>
<msg timestamp="20210205 20:19:52.591" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20210205 20:19:52.590" endtime="20210205 20:19:52.591"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.591" endtime="20210205 20:19:52.599"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:52.601" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:52.599" endtime="20210205 20:19:52.601"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:52.603" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:52.601" endtime="20210205 20:19:52.603"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.604" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:52.603" endtime="20210205 20:19:52.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:19:52.652" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=1 
 path_url=/posts?id=1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:52.652" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:53 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5c5ecb0aa2d8bce7ad3dd2cb531f38801612574393; expires=Mon, 08-Mar-21 01:19:53 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612346084', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-QtF0EaiifRh1Z3cEspXIXV0RoQY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14248', 'cf-request-id': '0816859e40000074cb94bc6000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=KpWNcUixQtdo1uC5NE9k0ir4668%2B8sqh5DXRre33MsDnBJWUYwUVZOboF6MwWVtMUWhL0dTJpsFne1BpZRmyfRlttaLft2Jk%2FfzM51nQGFk6kt1YgKwa58Hl73tK"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10ba9fa1674cb-IAD', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:19:52.606" endtime="20210205 20:19:52.653"></status>
</kw>
<msg timestamp="20210205 20:19:52.653" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:52.605" endtime="20210205 20:19:52.653"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.654" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.653" endtime="20210205 20:19:52.654"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.655" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.654" endtime="20210205 20:19:52.655"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.655" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.655" endtime="20210205 20:19:52.655"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.656" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.656" endtime="20210205 20:19:52.656"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.657" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.656" endtime="20210205 20:19:52.657"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.659" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.657" endtime="20210205 20:19:52.659"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.660" endtime="20210205 20:19:52.661"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.661" endtime="20210205 20:19:52.662"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.662" endtime="20210205 20:19:52.663"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.660" endtime="20210205 20:19:52.663"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.659" endtime="20210205 20:19:52.663"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.664" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:52.663" endtime="20210205 20:19:52.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:19:52.700" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:52.700" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:53 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dada5163882d80e86892d17cfbaa0491a1612574393; expires=Mon, 08-Mar-21 01:19:53 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612516849', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26849', 'cf-request-id': '0816859e7200000dda81999000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=dtVG%2BzoMGCvT6AtHOuyzZWkwbRY2EiEKxetccy4uYe9VHJdiKau310HYKkWEsoAGmdmRxi5l5KlvTiX9ZAbqq1ETQE7gGOkpMSfL%2FgYuZT0c2EKnFwTDxPafKBfd"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10baa5bfd0dda-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<status status="PASS" starttime="20210205 20:19:52.665" endtime="20210205 20:19:52.700"></status>
</kw>
<msg timestamp="20210205 20:19:52.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:52.664" endtime="20210205 20:19:52.701"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.768" level="INFO">${filteridlist} = [1]</msg>
<status status="PASS" starttime="20210205 20:19:52.701" endtime="20210205 20:19:52.768"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.826" level="INFO">${filtertitlelist} = ['sunt aut facere repellat provident occaecati excepturi optio reprehenderit']</msg>
<status status="PASS" starttime="20210205 20:19:52.768" endtime="20210205 20:19:52.826"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.897" level="INFO">${filterbodylist} = ['quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto']</msg>
<status status="PASS" starttime="20210205 20:19:52.826" endtime="20210205 20:19:52.897"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.897" endtime="20210205 20:19:52.898"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.898" endtime="20210205 20:19:52.899"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.899" endtime="20210205 20:19:52.899"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.900" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.899" endtime="20210205 20:19:52.900"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.901" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.900" endtime="20210205 20:19:52.901"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.901" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.901" endtime="20210205 20:19:52.901"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.902" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.902" endtime="20210205 20:19:52.902"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.903" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.902" endtime="20210205 20:19:52.903"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.903" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.903" endtime="20210205 20:19:52.903"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:52.904" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.904" endtime="20210205 20:19:52.905"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.589" endtime="20210205 20:19:52.905"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postfId}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:52.908" level="INFO">@{post_list} = [ 100 ]</msg>
<status status="PASS" starttime="20210205 20:19:52.908" endtime="20210205 20:19:52.909"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:19:52.909" level="INFO">Length is 1</msg>
<msg timestamp="20210205 20:19:52.910" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20210205 20:19:52.909" endtime="20210205 20:19:52.910"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.910" endtime="20210205 20:19:52.915"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:52.917" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:52.916" endtime="20210205 20:19:52.917"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:52.919" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:52.918" endtime="20210205 20:19:52.920"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.921" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:52.920" endtime="20210205 20:19:52.922"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:19:52.976" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=100 
 path_url=/posts?id=100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:52.977" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:54 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de68b0a7c0a8a3de21c895be9d8ad0dca1612574394; expires=Mon, 08-Mar-21 01:19:54 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612560281', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-AbapSgcu4MKsanVu8/m5reKm/rI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14117', 'cf-request-id': '0816859f7c00002a4bc53bc000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=gFkZ%2F8qSivYrXBjubVQzLu5%2B8qdlsPS3RDrOUE1XE71RIS9vywHqs2C2NZ7VvdXTH8IezwQ1Yfjxm5laHIyEVZbmYQISdYy2jooucO4s%2Bo4b19Lj4GCZFYknogjm"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10babf8af2a4b-IAD', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:19:52.923" endtime="20210205 20:19:52.977"></status>
</kw>
<msg timestamp="20210205 20:19:52.978" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:52.922" endtime="20210205 20:19:52.978"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.979" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.978" endtime="20210205 20:19:52.979"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:52.979" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.979" endtime="20210205 20:19:52.979"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.980" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.980" endtime="20210205 20:19:52.980"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:52.981" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.980" endtime="20210205 20:19:52.981"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.981" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.981" endtime="20210205 20:19:52.982"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:52.983" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:52.982" endtime="20210205 20:19:52.983"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.984" endtime="20210205 20:19:52.985"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.985" endtime="20210205 20:19:52.986"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:52.986" endtime="20210205 20:19:52.986"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.984" endtime="20210205 20:19:52.986"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.983" endtime="20210205 20:19:52.986"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:52.987" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:52.987" endtime="20210205 20:19:52.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:19:53.033" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:53.034" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:54 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d55115b02d1e5370573ed6ffa40daedbd1612574394; expires=Mon, 08-Mar-21 01:19:54 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '914', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12137', 'cf-request-id': '0816859fb80000f0fe0db18000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2F4pHHDWad89Rt9zPPuFgfT8c%2B8PYVXA9i%2Bn3dPwsViHIJlUYw6dZwYGFK2WBaUUrt2ufhGDZWp6%2FHRhAK3IS05k%2BJNPK9y%2Bdm6mK20fWj3YpQwt25%2FOvE2JrZC3c"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bac5a65f0fe-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<status status="PASS" starttime="20210205 20:19:52.989" endtime="20210205 20:19:53.034"></status>
</kw>
<msg timestamp="20210205 20:19:53.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:52.988" endtime="20210205 20:19:53.034"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.104" level="INFO">${filteridlist} = [100]</msg>
<status status="PASS" starttime="20210205 20:19:53.035" endtime="20210205 20:19:53.104"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.177" level="INFO">${filtertitlelist} = ['at nam consequatur ea labore ea harum']</msg>
<status status="PASS" starttime="20210205 20:19:53.104" endtime="20210205 20:19:53.177"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.242" level="INFO">${filterbodylist} = ['cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut']</msg>
<status status="PASS" starttime="20210205 20:19:53.177" endtime="20210205 20:19:53.242"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.242" endtime="20210205 20:19:53.243"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.243" endtime="20210205 20:19:53.243"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.243" endtime="20210205 20:19:53.244"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.244" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.244" endtime="20210205 20:19:53.244"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.244" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.244" endtime="20210205 20:19:53.244"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.245" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.245" endtime="20210205 20:19:53.245"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.245" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.245" endtime="20210205 20:19:53.245"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.246" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.245" endtime="20210205 20:19:53.246"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.246" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.246" endtime="20210205 20:19:53.246"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:53.246" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.246" endtime="20210205 20:19:53.246"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:52.907" endtime="20210205 20:19:53.247"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postfId} ${invalidIpostid}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:53.250" level="INFO">@{post_list} = [ 100 | 0 ]</msg>
<status status="PASS" starttime="20210205 20:19:53.249" endtime="20210205 20:19:53.250"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:19:53.251" level="INFO">Length is 2</msg>
<msg timestamp="20210205 20:19:53.252" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 20:19:53.250" endtime="20210205 20:19:53.252"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.252" endtime="20210205 20:19:53.260"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:53.262" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:53.260" endtime="20210205 20:19:53.262"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:53.264" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:53.263" endtime="20210205 20:19:53.264"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:53.265" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:53.265" endtime="20210205 20:19:53.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:19:53.316" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=100&amp;id=0 
 path_url=/posts?id=100&amp;id=0 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:53.316" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=100&amp;id=0 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:54 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db9353b53476b9b6ba9e8fc8316209d811612574394; expires=Mon, 08-Mar-21 01:19:54 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612566821', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-AbapSgcu4MKsanVu8/m5reKm/rI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7605', 'cf-request-id': '081685a0d000003811e098b000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ARvk0wkVZrkPaS6uS7EHsJkBk7XJW4Q0v1V7Cjg%2FbSiMrRUsHPGxDKPP1YsR4TMfKW7N%2FhxI8jb%2B0AiTsrBUzwLPeRo6bJThjwGCFNaC4HtxiCeo4ql9S1fK21yA"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bae1f5d3811-IAD', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:19:53.267" endtime="20210205 20:19:53.317"></status>
</kw>
<msg timestamp="20210205 20:19:53.317" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:53.266" endtime="20210205 20:19:53.317"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.318" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.318" endtime="20210205 20:19:53.319"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.320" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.319" endtime="20210205 20:19:53.320"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.321" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.320" endtime="20210205 20:19:53.321"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.322" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.321" endtime="20210205 20:19:53.322"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.323" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.322" endtime="20210205 20:19:53.323"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.324" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.324" endtime="20210205 20:19:53.324"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.326" endtime="20210205 20:19:53.326"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.327" endtime="20210205 20:19:53.327"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.327" endtime="20210205 20:19:53.328"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:53.325" endtime="20210205 20:19:53.328"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:53.324" endtime="20210205 20:19:53.328"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:53.328" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:53.328" endtime="20210205 20:19:53.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:19:53.391" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:53.391" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:54 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d6a6d7f884e251e07b84105500e67d3eb1612574394; expires=Mon, 08-Mar-21 01:19:54 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '914', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12137', 'cf-request-id': '081685a10d00000d9eaf900000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=h7ENALE2eXzqbHqBDjEq1aMP0YfM2F4YjS8l%2FTImfHWCgESKmKZouoVjp%2BnX8PtNoC5lv0mbAk%2Bxcy8SbjeZvzguyos7cOAw8TBCkxQQU9mO1Cth9vysBmJR1zgK"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bae7afd0d9e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<status status="PASS" starttime="20210205 20:19:53.329" endtime="20210205 20:19:53.392"></status>
</kw>
<msg timestamp="20210205 20:19:53.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:53.329" endtime="20210205 20:19:53.392"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.463" level="INFO">${filteridlist} = [100]</msg>
<status status="PASS" starttime="20210205 20:19:53.392" endtime="20210205 20:19:53.463"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.518" level="INFO">${filtertitlelist} = ['at nam consequatur ea labore ea harum']</msg>
<status status="PASS" starttime="20210205 20:19:53.463" endtime="20210205 20:19:53.518"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.590" level="INFO">${filterbodylist} = ['cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut']</msg>
<status status="PASS" starttime="20210205 20:19:53.519" endtime="20210205 20:19:53.590"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.590" endtime="20210205 20:19:53.591"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.591" endtime="20210205 20:19:53.592"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.592" endtime="20210205 20:19:53.592"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.593" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.593" endtime="20210205 20:19:53.593"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.594" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.593" endtime="20210205 20:19:53.594"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.594" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.594" endtime="20210205 20:19:53.594"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.595" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.595" endtime="20210205 20:19:53.595"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.596" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.595" endtime="20210205 20:19:53.596"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.597" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.597" endtime="20210205 20:19:53.597"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:53.598" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.597" endtime="20210205 20:19:53.598"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:53.248" endtime="20210205 20:19:53.598"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${invalidIpostid} ${postfId}</arg>
<arg>1</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:53.601" level="INFO">@{post_list} = [ 0 | 100 ]</msg>
<status status="PASS" starttime="20210205 20:19:53.600" endtime="20210205 20:19:53.601"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:19:53.601" level="INFO">Length is 2</msg>
<msg timestamp="20210205 20:19:53.602" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 20:19:53.601" endtime="20210205 20:19:53.602"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.602" endtime="20210205 20:19:53.609"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:53.612" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:53.610" endtime="20210205 20:19:53.612"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:53.614" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:53.613" endtime="20210205 20:19:53.614"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:53.615" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:53.615" endtime="20210205 20:19:53.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:19:53.654" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=0&amp;id=100 
 path_url=/posts?id=0&amp;id=100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:53.655" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=0&amp;id=100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:54 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df9c6dd51894294543d5251bb91a0740d1612574394; expires=Mon, 08-Mar-21 01:19:54 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1612566821', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-AbapSgcu4MKsanVu8/m5reKm/rI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7605', 'cf-request-id': '081685a22c000029c6651b6000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=rJS9zpSwXCX1iMf%2FeyLOlSiJOs89ISgFoAG40SB3RekVxGnD6Tq%2FVGK8u5e3Ks09wv45uL0iscWJAGm%2BqtqkBtjTq5gvuhPCqDTbsl0NTP8j%2FCmCue%2BUJ127rUr1"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bb04c1a29c6-IAD', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 10,
    "id": 100,
    "title": "at nam consequatur ea labore ea harum",
    "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:19:53.617" endtime="20210205 20:19:53.656"></status>
</kw>
<msg timestamp="20210205 20:19:53.656" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:53.616" endtime="20210205 20:19:53.656"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.657" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.657" endtime="20210205 20:19:53.657"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.659" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.658" endtime="20210205 20:19:53.659"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.661" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.660" endtime="20210205 20:19:53.661"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.662" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.661" endtime="20210205 20:19:53.662"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.664" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.663" endtime="20210205 20:19:53.664"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.664" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.664" endtime="20210205 20:19:53.664"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 10, 'id': 100, 'title': 'at nam consequatur ea labore ea harum', 'body': 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distincti..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.666" endtime="20210205 20:19:53.666"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.666" endtime="20210205 20:19:53.667"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.667" endtime="20210205 20:19:53.668"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:53.665" endtime="20210205 20:19:53.668"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:53.665" endtime="20210205 20:19:53.668"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:53.669" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:53.668" endtime="20210205 20:19:53.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:19:53.709" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:53.709" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:54 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d84fd43b89232daafa0ab162624debd671612574394; expires=Mon, 08-Mar-21 01:19:54 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '914', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12137', 'cf-request-id': '081685a26300000d724f0b4000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=pH3SPb4tYQgYH5iJy%2BT%2BoAdWyJrylVCXUDmBSpgAP10WlDQEJA2RvE0Sv%2B2nDIHCPPZHYEgvs%2BBzXHCMaupnbaN%2FNgewKHGUGBqzxKhJjpIw5MDqA24rS6kJQ2%2BX"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bb09bc40d72-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<status status="PASS" starttime="20210205 20:19:53.670" endtime="20210205 20:19:53.710"></status>
</kw>
<msg timestamp="20210205 20:19:53.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:53.669" endtime="20210205 20:19:53.710"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.781" level="INFO">${filteridlist} = [100]</msg>
<status status="PASS" starttime="20210205 20:19:53.710" endtime="20210205 20:19:53.781"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.851" level="INFO">${filtertitlelist} = ['at nam consequatur ea labore ea harum']</msg>
<status status="PASS" starttime="20210205 20:19:53.781" endtime="20210205 20:19:53.851"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.921" level="INFO">${filterbodylist} = ['cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut']</msg>
<status status="PASS" starttime="20210205 20:19:53.852" endtime="20210205 20:19:53.921"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.921" endtime="20210205 20:19:53.922"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.922" endtime="20210205 20:19:53.922"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.922" endtime="20210205 20:19:53.923"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.923" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.923" endtime="20210205 20:19:53.923"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.923" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.923" endtime="20210205 20:19:53.923"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.924" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.923" endtime="20210205 20:19:53.924"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.924" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.924" endtime="20210205 20:19:53.924"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.924" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.924" endtime="20210205 20:19:53.924"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.925" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.925" endtime="20210205 20:19:53.925"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:53.925" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.925" endtime="20210205 20:19:53.925"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:53.599" endtime="20210205 20:19:53.925"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${postinId} ${invalidFpostid}</arg>
<arg>0</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:53.928" level="INFO">@{post_list} = [ 1 | 101 ]</msg>
<status status="PASS" starttime="20210205 20:19:53.928" endtime="20210205 20:19:53.929"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:19:53.929" level="INFO">Length is 2</msg>
<msg timestamp="20210205 20:19:53.930" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 20:19:53.929" endtime="20210205 20:19:53.930"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.930" endtime="20210205 20:19:53.934"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:53.937" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:53.935" endtime="20210205 20:19:53.937"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:53.938" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:53.937" endtime="20210205 20:19:53.939"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:53.939" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:53.939" endtime="20210205 20:19:53.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:19:53.984" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=1&amp;id=101 
 path_url=/posts?id=1&amp;id=101 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:53.985" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=1&amp;id=101 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:55 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbdb72e7ec6c162f8989f1d850ffff84d1612574395; expires=Mon, 08-Mar-21 01:19:55 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1612560401', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-QtF0EaiifRh1Z3cEspXIXV0RoQY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14052', 'cf-request-id': '081685a3720000ea08512e7000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=PvbpdVbnKCj%2F2DhFtsNDRbY%2FQoKN3iVdtxt2fB%2FUzY%2BkgKVcwMnclqpDcxKiXS7AvlSafxOS4qtiRS1mTICyGLUmNuUZKlMrwDmfAZfhOMyoqL%2Fbdy1sDYvbZO54"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bb25d29ea08-IAD', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:19:53.940" endtime="20210205 20:19:53.986"></status>
</kw>
<msg timestamp="20210205 20:19:53.986" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:53.940" endtime="20210205 20:19:53.986"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.987" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.986" endtime="20210205 20:19:53.987"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:53.988" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.987" endtime="20210205 20:19:53.988"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.989" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.988" endtime="20210205 20:19:53.989"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:53.989" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.989" endtime="20210205 20:19:53.989"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.991" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.990" endtime="20210205 20:19:53.991"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:53.991" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:53.991" endtime="20210205 20:19:53.992"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.993" endtime="20210205 20:19:53.994"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.994" endtime="20210205 20:19:53.995"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:53.996" endtime="20210205 20:19:53.997"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:53.993" endtime="20210205 20:19:53.997"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:53.992" endtime="20210205 20:19:53.997"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:53.998" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:53.997" endtime="20210205 20:19:53.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
</arguments>
<msg timestamp="20210205 20:19:54.065" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:54.065" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:55 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d408d263e433b689b4d8f4b6eb087d7b81612574395; expires=Mon, 08-Mar-21 01:19:55 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612516849', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26851', 'cf-request-id': '081685a3b20000097b08390000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=WLKAxntMwgukESvEMwGhH7FWc9WRhuM1n6Gr9f1UrlRYEBKlPu20xP0%2BCJF0eDrPlHUMqsbv2o2IKWfOGzM6VSEHlALG%2FY5JdzURTbuWS3%2B23Af8EW1D5nTd4wno"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bb2b913097b-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<status status="PASS" starttime="20210205 20:19:54.000" endtime="20210205 20:19:54.066"></status>
</kw>
<msg timestamp="20210205 20:19:54.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:53.999" endtime="20210205 20:19:54.066"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:54.115" level="INFO">${filteridlist} = [1]</msg>
<status status="PASS" starttime="20210205 20:19:54.067" endtime="20210205 20:19:54.115"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:54.157" level="INFO">${filtertitlelist} = ['sunt aut facere repellat provident occaecati excepturi optio reprehenderit']</msg>
<status status="PASS" starttime="20210205 20:19:54.115" endtime="20210205 20:19:54.157"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:54.204" level="INFO">${filterbodylist} = ['quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto']</msg>
<status status="PASS" starttime="20210205 20:19:54.158" endtime="20210205 20:19:54.204"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.205" endtime="20210205 20:19:54.205"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.205" endtime="20210205 20:19:54.206"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.206" endtime="20210205 20:19:54.206"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:54.207" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.206" endtime="20210205 20:19:54.207"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:54.207" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.207" endtime="20210205 20:19:54.207"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:54.207" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.207" endtime="20210205 20:19:54.207"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:54.208" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.207" endtime="20210205 20:19:54.208"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:54.208" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.208" endtime="20210205 20:19:54.208"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:54.208" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.208" endtime="20210205 20:19:54.208"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:54.209" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.209" endtime="20210205 20:19:54.209"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:53.927" endtime="20210205 20:19:54.209"></status>
</kw>
<kw name="VALIDATE FILTERED POST URL RESPONSE MATCHES POST ID URI POST RESPONSE" library="PostsHelper">
<arguments>
<arg>${invalidFpostid} ${postinId}</arg>
<arg>1</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${postid}</arg>
</arguments>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:54.211" level="INFO">@{post_list} = [ 101 | 1 ]</msg>
<status status="PASS" starttime="20210205 20:19:54.210" endtime="20210205 20:19:54.211"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${post_list}</arg>
</arguments>
<assign>
<var>${cnt}</var>
</assign>
<msg timestamp="20210205 20:19:54.211" level="INFO">Length is 2</msg>
<msg timestamp="20210205 20:19:54.212" level="INFO">${cnt} = 2</msg>
<status status="PASS" starttime="20210205 20:19:54.211" endtime="20210205 20:19:54.212"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${cnt}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.212" endtime="20210205 20:19:54.217"></status>
</kw>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:54.220" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:54.218" endtime="20210205 20:19:54.220"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>base_url</arg>
</arguments>
<assign>
<var>${baseurl}</var>
</assign>
<msg timestamp="20210205 20:19:54.221" level="INFO">${baseurl} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:54.220" endtime="20210205 20:19:54.221"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.222" level="INFO">Creating Session using : alias=GET_With_Params, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:54.222" endtime="20210205 20:19:54.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${cnt} == 1</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]</arg>
<arg>ELSE IF</arg>
<arg>${cnt} == 2</arg>
<arg>Get On Session</arg>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<assign>
<var>${responseparam}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_Params</arg>
<arg>url=/posts?id=${post_list}[0]&amp;id=${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:19:54.271" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts?id=101&amp;id=1 
 path_url=/posts?id=101&amp;id=1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:54.272" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts?id=101&amp;id=1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:55 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d98b64bc30c3b14ea52562aba9da8ef731612574395; expires=Mon, 08-Mar-21 01:19:55 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '995', 'X-Ratelimit-Reset': '1612566821', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-QtF0EaiifRh1Z3cEspXIXV0RoQY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '7606', 'cf-request-id': '081685a4900000250898861000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Vf4bd3XoRkGqPEQwZZm4J7t%2BLyzD%2FZvoDlnvhKYB2Oe8l9tzV%2FrH4WVPq3TOHQJIqWUG%2FoWL7An44gPzjHY3CHg%2BcqCtUaKdLpiAwaZxh0FT106dugRbFLE4yGdh"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bb41bbb2508-IAD', 'Content-Encoding': 'gzip'} 
 body=[
  {
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
  }
] 
 </msg>
<status status="PASS" starttime="20210205 20:19:54.223" endtime="20210205 20:19:54.272"></status>
</kw>
<msg timestamp="20210205 20:19:54.272" level="INFO">${responseparam} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.223" endtime="20210205 20:19:54.272"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:54.273" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.273" endtime="20210205 20:19:54.273"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:54.273" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.273" endtime="20210205 20:19:54.273"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:54.274" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.273" endtime="20210205 20:19:54.274"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:54.274" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.274" endtime="20210205 20:19:54.274"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:54.275" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.274" endtime="20210205 20:19:54.276"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:54.276" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.276" endtime="20210205 20:19:54.277"></status>
</kw>
<kw name="${item} IN [ @{responseparam.json()} ]" type="for">
<kw name="${item} = {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit..." type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uriidlist}</arg>
<arg>${item['id']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.278" endtime="20210205 20:19:54.279"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${urititlelist}</arg>
<arg>${item['title']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.279" endtime="20210205 20:19:54.279"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${uribodylist}</arg>
<arg>${item['body']}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.279" endtime="20210205 20:19:54.280"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.277" endtime="20210205 20:19:54.280"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.277" endtime="20210205 20:19:54.280"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>${baseurl}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.280" level="INFO">Creating Session using : alias=GET_With_URI, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:54.280" endtime="20210205 20:19:54.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${negativepos} == 0</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[0]</arg>
<arg>ELSE</arg>
<arg>Get On Session</arg>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>GET_With_URI</arg>
<arg>/posts/${post_list}[1]</arg>
</arguments>
<msg timestamp="20210205 20:19:54.321" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:54.322" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:55 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d938b2c734fae9c143fe88d5e51d906011612574395; expires=Mon, 08-Mar-21 01:19:55 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612516849', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26851', 'cf-request-id': '081685a4c40000c17a63103000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=TpiuoMesXQ%2FAeMJ2J%2B7VjXZLUHHPgIACP5HYuNa1jobCpvHQrbHU1detizy3UosGdpoEvt%2FQl07X0dAW7frQpDPxsa8p9C2xq6sXaO8jGbZBbQT1ZjUTQ0gEvmPQ"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bb46dc9c17a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<status status="PASS" starttime="20210205 20:19:54.281" endtime="20210205 20:19:54.322"></status>
</kw>
<msg timestamp="20210205 20:19:54.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.281" endtime="20210205 20:19:54.322"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:54.403" level="INFO">${filteridlist} = [1]</msg>
<status status="PASS" starttime="20210205 20:19:54.323" endtime="20210205 20:19:54.403"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>title</arg>
</arguments>
<assign>
<var>${filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:54.446" level="INFO">${filtertitlelist} = ['sunt aut facere repellat provident occaecati excepturi optio reprehenderit']</msg>
<status status="PASS" starttime="20210205 20:19:54.403" endtime="20210205 20:19:54.446"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>body</arg>
</arguments>
<assign>
<var>${filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:54.492" level="INFO">${filterbodylist} = ['quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto']</msg>
<status status="PASS" starttime="20210205 20:19:54.447" endtime="20210205 20:19:54.492"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filteridlist}</arg>
<arg>${uriidlist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.493" endtime="20210205 20:19:54.493"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filtertitlelist}</arg>
<arg>${urititlelist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.493" endtime="20210205 20:19:54.494"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${filterbodylist}</arg>
<arg>${uribodylist}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.494" endtime="20210205 20:19:54.494"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uriidlist}</var>
</assign>
<msg timestamp="20210205 20:19:54.495" level="INFO">@{uriidlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.494" endtime="20210205 20:19:54.495"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filteridlist}</var>
</assign>
<msg timestamp="20210205 20:19:54.495" level="INFO">@{filteridlist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.495" endtime="20210205 20:19:54.495"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{urititlelist}</var>
</assign>
<msg timestamp="20210205 20:19:54.495" level="INFO">@{urititlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.495" endtime="20210205 20:19:54.495"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filtertitlelist}</var>
</assign>
<msg timestamp="20210205 20:19:54.496" level="INFO">@{filtertitlelist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.495" endtime="20210205 20:19:54.496"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{uribodylist}</var>
</assign>
<msg timestamp="20210205 20:19:54.497" level="INFO">@{uribodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.496" endtime="20210205 20:19:54.497"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{filterbodylist}</var>
</assign>
<msg timestamp="20210205 20:19:54.498" level="INFO">@{filterbodylist} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.498" endtime="20210205 20:19:54.498"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{post_list}</var>
</assign>
<msg timestamp="20210205 20:19:54.499" level="INFO">@{post_list} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.498" endtime="20210205 20:19:54.499"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.209" endtime="20210205 20:19:54.499"></status>
</kw>
<doc>Compare /posts parameter filter response to posts/{num}</doc>
<tags>
<tag>Hybrid</tag>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20210205 20:19:52.517" endtime="20210205 20:19:54.499" critical="yes"></status>
</test>
<test id="s1-t8" name="TC008 VALIDATE GET POST BY POST ID FOR ALL POST ID">
<kw name="ENVIRONMENT SETUP" type="setup">
<kw name="GET ENVIRONMENT TYPE" library="PostsHelper">
<arguments>
<arg>base_url</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Get Environment" library="FixtureLoader">
<assign>
<var>${envVal}</var>
</assign>
<msg timestamp="20210205 20:19:54.506" level="INFO">${envVal} = production</msg>
<status status="PASS" starttime="20210205 20:19:54.505" endtime="20210205 20:19:54.506"></status>
</kw>
<kw name="Get Global Variables" library="FixtureLoader">
<arguments>
<arg>${envVal}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210205 20:19:54.507" level="INFO">${result} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:54.506" endtime="20210205 20:19:54.507"></status>
</kw>
<msg timestamp="20210205 20:19:54.507" level="INFO">${url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:54.503" endtime="20210205 20:19:54.507"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>allposts</arg>
<arg>postcount</arg>
</arguments>
<assign>
<var>${allpostcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.508" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:54.508" endtime="20210205 20:19:54.508"></status>
</kw>
<msg timestamp="20210205 20:19:54.508" level="INFO">${allpostcount} = 100</msg>
<status status="PASS" starttime="20210205 20:19:54.507" endtime="20210205 20:19:54.508"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${userinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.510" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:54.510" endtime="20210205 20:19:54.510"></status>
</kw>
<msg timestamp="20210205 20:19:54.510" level="INFO">${userinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:54.508" endtime="20210205 20:19:54.510"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validInitCount</arg>
</arguments>
<assign>
<var>${userpostinitcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.514" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:54.513" endtime="20210205 20:19:54.514"></status>
</kw>
<msg timestamp="20210205 20:19:54.515" level="INFO">${userpostinitcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:54.510" endtime="20210205 20:19:54.515"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${userfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.518" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:54.516" endtime="20210205 20:19:54.519"></status>
</kw>
<msg timestamp="20210205 20:19:54.519" level="INFO">${userfinalid} = 10</msg>
<status status="PASS" starttime="20210205 20:19:54.515" endtime="20210205 20:19:54.519"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>validFinalCount</arg>
</arguments>
<assign>
<var>${userpostfinalcount}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.522" level="INFO">${tempvalue} = 10</msg>
<status status="PASS" starttime="20210205 20:19:54.521" endtime="20210205 20:19:54.522"></status>
</kw>
<msg timestamp="20210205 20:19:54.523" level="INFO">${userpostfinalcount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:54.519" endtime="20210205 20:19:54.523"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invaliduserinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.526" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:54.524" endtime="20210205 20:19:54.526"></status>
</kw>
<msg timestamp="20210205 20:19:54.528" level="INFO">${invaliduserinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:54.523" endtime="20210205 20:19:54.528"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>users</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invaliduserfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.532" level="INFO">${tempvalue} = 11</msg>
<status status="PASS" starttime="20210205 20:19:54.530" endtime="20210205 20:19:54.532"></status>
</kw>
<msg timestamp="20210205 20:19:54.532" level="INFO">${invaliduserfinalid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:54.529" endtime="20210205 20:19:54.532"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validInitial</arg>
</arguments>
<assign>
<var>${postinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.534" level="INFO">${tempvalue} = 1</msg>
<status status="PASS" starttime="20210205 20:19:54.533" endtime="20210205 20:19:54.534"></status>
</kw>
<msg timestamp="20210205 20:19:54.534" level="INFO">${postinitid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:54.532" endtime="20210205 20:19:54.534"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>validFinal</arg>
</arguments>
<assign>
<var>${postfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.535" level="INFO">${tempvalue} = 100</msg>
<status status="PASS" starttime="20210205 20:19:54.535" endtime="20210205 20:19:54.535"></status>
</kw>
<msg timestamp="20210205 20:19:54.536" level="INFO">${postfinalid} = 100</msg>
<status status="PASS" starttime="20210205 20:19:54.534" endtime="20210205 20:19:54.536"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidInitial</arg>
</arguments>
<assign>
<var>${invalidpostinitid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.537" level="INFO">${tempvalue} = 0</msg>
<status status="PASS" starttime="20210205 20:19:54.536" endtime="20210205 20:19:54.537"></status>
</kw>
<msg timestamp="20210205 20:19:54.538" level="INFO">${invalidpostinitid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:54.536" endtime="20210205 20:19:54.538"></status>
</kw>
<kw name="GET TEMPLATE VALUE" library="PostsHelper">
<arguments>
<arg>TestData.json</arg>
<arg>posts</arg>
<arg>InvalidFinal</arg>
</arguments>
<assign>
<var>${invalidpostfinalid}</var>
</assign>
<kw name="Get Expected Value" library="FixtureLoader">
<arguments>
<arg>${templatefile}</arg>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<assign>
<var>${tempvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.539" level="INFO">${tempvalue} = 101</msg>
<status status="PASS" starttime="20210205 20:19:54.538" endtime="20210205 20:19:54.539"></status>
</kw>
<msg timestamp="20210205 20:19:54.540" level="INFO">${invalidpostfinalid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:54.538" endtime="20210205 20:19:54.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${base_url}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.540" level="INFO">${base_url} = http://jsonplaceholder.typicode.com</msg>
<status status="PASS" starttime="20210205 20:19:54.540" endtime="20210205 20:19:54.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${templatefile}</arg>
<arg>TestData.json</arg>
</arguments>
<msg timestamp="20210205 20:19:54.541" level="INFO">${templatefile} = TestData.json</msg>
<status status="PASS" starttime="20210205 20:19:54.540" endtime="20210205 20:19:54.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${allpostcnt}</arg>
<arg>${allpostcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.541" level="INFO">${allpostcnt} = 100</msg>
<status status="PASS" starttime="20210205 20:19:54.541" endtime="20210205 20:19:54.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinId}</arg>
<arg>${userinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.544" level="INFO">${userinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:54.542" endtime="20210205 20:19:54.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userinCount}</arg>
<arg>${userpostinitcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.546" level="INFO">${userinCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:54.545" endtime="20210205 20:19:54.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfId}</arg>
<arg>${userfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.547" level="INFO">${userfId} = 10</msg>
<status status="PASS" starttime="20210205 20:19:54.547" endtime="20210205 20:19:54.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${userfCount}</arg>
<arg>${userpostfinalcount}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.548" level="INFO">${userfCount} = 10</msg>
<status status="PASS" starttime="20210205 20:19:54.547" endtime="20210205 20:19:54.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIuserid}</arg>
<arg>${invaliduserinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.549" level="INFO">${invalidIuserid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:54.548" endtime="20210205 20:19:54.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFuserid}</arg>
<arg>${invaliduserfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.550" level="INFO">${invalidFuserid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:54.549" endtime="20210205 20:19:54.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postinId}</arg>
<arg>${postinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.550" level="INFO">${postinId} = 1</msg>
<status status="PASS" starttime="20210205 20:19:54.550" endtime="20210205 20:19:54.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${postfId}</arg>
<arg>${postfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.551" level="INFO">${postfId} = 100</msg>
<status status="PASS" starttime="20210205 20:19:54.550" endtime="20210205 20:19:54.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidIpostid}</arg>
<arg>${invalidpostinitid}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.551" level="INFO">${invalidIpostid} = 0</msg>
<status status="PASS" starttime="20210205 20:19:54.551" endtime="20210205 20:19:54.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${invalidFpostid}</arg>
<arg>${invalidpostfinalid}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.552" level="INFO">${invalidFpostid} = 101</msg>
<status status="PASS" starttime="20210205 20:19:54.551" endtime="20210205 20:19:54.552"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.503" endtime="20210205 20:19:54.552"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${allpostcnt}</arg>
</arguments>
<assign>
<var>${allpostnum}</var>
</assign>
<msg timestamp="20210205 20:19:54.567" level="INFO">${allpostnum} = 100</msg>
<status status="PASS" starttime="20210205 20:19:54.565" endtime="20210205 20:19:54.567"></status>
</kw>
<kw name="${postid} IN RANGE [ 1 | ${allpostnum+1} ]" type="for">
<kw name="${postid} = 1" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.570" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:54.570" endtime="20210205 20:19:54.572"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:54.632" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/1 
 path_url=/posts/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:54.632" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:55 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de973bb9da0d648c98704625b906b34511612574395; expires=Mon, 08-Mar-21 01:19:55 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612516849', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26851', 'cf-request-id': '081685a5ea000028f2aba86000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Ipx32IPr7kjvBrJY0P3CtdSoOVED%2FyOCSD63zig9R0DT%2F8VUTt4jiiamsM9pAlkOHFWojEXY3eLqsW2zE%2FYPtlCxFR0KpC5wn%2BeStBI2q0QXnt3hlcaLII%2FxN7sq"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bb64d2428f2-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
} 
 </msg>
<msg timestamp="20210205 20:19:54.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.572" endtime="20210205 20:19:54.632"></status>
</kw>
<msg timestamp="20210205 20:19:54.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.569" endtime="20210205 20:19:54.633"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.636" endtime="20210205 20:19:54.641"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.634" endtime="20210205 20:19:54.641"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.633" endtime="20210205 20:19:54.641"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.644" endtime="20210205 20:19:54.644"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.642" endtime="20210205 20:19:54.645"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.646" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.646" endtime="20210205 20:19:54.646"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.716" level="INFO">${idvalue} = [1]</msg>
<status status="PASS" starttime="20210205 20:19:54.647" endtime="20210205 20:19:54.716"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:54.717" level="INFO">${responseid} = 1</msg>
<status status="PASS" starttime="20210205 20:19:54.716" endtime="20210205 20:19:54.717"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.717" endtime="20210205 20:19:54.718"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.718" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.718" endtime="20210205 20:19:54.718"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.645" endtime="20210205 20:19:54.719"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.569" endtime="20210205 20:19:54.719"></status>
</kw>
<kw name="${postid} = 2" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.720" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:54.720" endtime="20210205 20:19:54.721"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:54.758" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/2 
 path_url=/posts/2 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:54.758" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/2 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:56 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbfd0d2b3f552716f5060f8a2f2716b171612574396; expires=Mon, 08-Mar-21 01:19:56 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612529090', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"116-jnDuMpjju89+9j7e0BqkdFsVRjs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14364', 'cf-request-id': '081685a67a0000c1d47835f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=y1Q98LdJ8rzT%2FHFjZ9IWnHmLKqqUOQCmGe%2Bs%2FAAbcpSoIwrHfFOxO7EIaqf5ru1qps1zyz4RPg0SgZMSQZNwJXjcpjm8%2BvB1VChXgZpKrkX5MH5bSTHyQARmkzvM"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bb72e10c1d4-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 2,
  "title": "qui est esse",
  "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
} 
 </msg>
<msg timestamp="20210205 20:19:54.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.721" endtime="20210205 20:19:54.758"></status>
</kw>
<msg timestamp="20210205 20:19:54.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.719" endtime="20210205 20:19:54.759"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.761" endtime="20210205 20:19:54.766"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.760" endtime="20210205 20:19:54.766"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.759" endtime="20210205 20:19:54.767"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.768" endtime="20210205 20:19:54.769"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.767" endtime="20210205 20:19:54.770"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.772" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.771" endtime="20210205 20:19:54.772"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.828" level="INFO">${idvalue} = [2]</msg>
<status status="PASS" starttime="20210205 20:19:54.772" endtime="20210205 20:19:54.828"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:54.830" level="INFO">${responseid} = 2</msg>
<status status="PASS" starttime="20210205 20:19:54.829" endtime="20210205 20:19:54.830"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.830" endtime="20210205 20:19:54.831"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.831" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.831" endtime="20210205 20:19:54.831"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.770" endtime="20210205 20:19:54.832"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.719" endtime="20210205 20:19:54.832"></status>
</kw>
<kw name="${postid} = 3" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.834" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:54.833" endtime="20210205 20:19:54.835"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:54.966" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/3 
 path_url=/posts/3 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:54.966" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/3 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:56 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd0176f135a137a9b8b221aa1e7f51b9c1612574396; expires=Mon, 08-Mar-21 01:19:56 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612321319', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11b-USacuIw5a/iXAGdNKBvqr/TbMTc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '14343', 'cf-request-id': '081685a743000074827aa6e000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=XutzRXF7Q1xePc1LrVgWMGmrfb4hUaSGAiMUKskzsInaiQ65S7K%2FVENEQOXLYot7OwQbwwnOWJ7KsuQKjA1nkFFUyIv6e03%2BSLJMGvPtSPLYyjlscaq60IlUD2X7"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bb868e77482-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 3,
  "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
  "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
} 
 </msg>
<msg timestamp="20210205 20:19:54.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.835" endtime="20210205 20:19:54.967"></status>
</kw>
<msg timestamp="20210205 20:19:54.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.832" endtime="20210205 20:19:54.968"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:54.970" endtime="20210205 20:19:54.973"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.969" endtime="20210205 20:19:54.973"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.968" endtime="20210205 20:19:54.973"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:54.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:54.974" endtime="20210205 20:19:54.975"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.973" endtime="20210205 20:19:54.975"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:54.977" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:54.976" endtime="20210205 20:19:54.977"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.090" level="INFO">${idvalue} = [3]</msg>
<status status="PASS" starttime="20210205 20:19:54.977" endtime="20210205 20:19:55.090"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:55.091" level="INFO">${responseid} = 3</msg>
<status status="PASS" starttime="20210205 20:19:55.090" endtime="20210205 20:19:55.091"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:55.091" endtime="20210205 20:19:55.092"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.092" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:55.092" endtime="20210205 20:19:55.092"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.976" endtime="20210205 20:19:55.093"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.832" endtime="20210205 20:19:55.093"></status>
</kw>
<kw name="${postid} = 4" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:55.095" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:55.094" endtime="20210205 20:19:55.095"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:55.250" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/4 
 path_url=/posts/4 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:55.250" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/4 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:56 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d90f7a96ed8245f2132d4c1a79a27bd4f1612574396; expires=Mon, 08-Mar-21 01:19:56 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1610211040', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10e-HqG77o1RAmatkSwR36f4+Io6g1E"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685a8600000ea86911d4000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=hShSvzVv4pWnVWeKNkPSqoadHdxiEBy5IZGhsnFlKn3vyfVsT9sm1mOCfGeNbgSeBX%2BgtWX9IDIp6RILoJk7RyFkiG1OXmQdSlXqI5vD%2F9W3ICa7wJLWWu8TrXIP"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bba3b5dea86-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 4,
  "title": "eum et est occaecati",
  "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
} 
 </msg>
<msg timestamp="20210205 20:19:55.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.096" endtime="20210205 20:19:55.251"></status>
</kw>
<msg timestamp="20210205 20:19:55.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.093" endtime="20210205 20:19:55.252"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:55.254" endtime="20210205 20:19:55.257"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.253" endtime="20210205 20:19:55.257"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.252" endtime="20210205 20:19:55.257"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:55.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.259" endtime="20210205 20:19:55.259"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.258" endtime="20210205 20:19:55.260"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.261" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:55.261" endtime="20210205 20:19:55.261"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.326" level="INFO">${idvalue} = [4]</msg>
<status status="PASS" starttime="20210205 20:19:55.261" endtime="20210205 20:19:55.326"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:55.327" level="INFO">${responseid} = 4</msg>
<status status="PASS" starttime="20210205 20:19:55.326" endtime="20210205 20:19:55.327"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:55.327" endtime="20210205 20:19:55.328"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.329" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:55.328" endtime="20210205 20:19:55.329"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.260" endtime="20210205 20:19:55.330"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.093" endtime="20210205 20:19:55.330"></status>
</kw>
<kw name="${postid} = 5" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:55.332" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:55.332" endtime="20210205 20:19:55.333"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:55.507" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/5 
 path_url=/posts/5 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:55.507" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/5 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:56 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d696d7d489749778bbf56b066eea904fa1612574396; expires=Mon, 08-Mar-21 01:19:56 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612053918', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-IivojO0CtPZmcMK0iydTbsfG7Wc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685a965000074c3a610b000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=EmxfmBBS0PVT0%2FQfBCGjdw1D5jzAnK0TCg1y9FqWSAYqNoT%2B%2ByscW3ML5ma4cWuUJy%2BL2gPyzwU1WP90Ar9NS5wvDOqiwjX8VWH20vGi5WnOOcoP4bqBCajvUhTK"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bbbda8874c3-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 5,
  "title": "nesciunt quas odio",
  "body": "repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque"
} 
 </msg>
<msg timestamp="20210205 20:19:55.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.333" endtime="20210205 20:19:55.508"></status>
</kw>
<msg timestamp="20210205 20:19:55.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.330" endtime="20210205 20:19:55.508"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:55.511" endtime="20210205 20:19:55.514"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.510" endtime="20210205 20:19:55.514"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.509" endtime="20210205 20:19:55.514"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:55.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.515" endtime="20210205 20:19:55.516"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.514" endtime="20210205 20:19:55.516"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.518" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:55.517" endtime="20210205 20:19:55.518"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.588" level="INFO">${idvalue} = [5]</msg>
<status status="PASS" starttime="20210205 20:19:55.518" endtime="20210205 20:19:55.588"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:55.589" level="INFO">${responseid} = 5</msg>
<status status="PASS" starttime="20210205 20:19:55.588" endtime="20210205 20:19:55.589"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:55.589" endtime="20210205 20:19:55.590"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.590" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:55.590" endtime="20210205 20:19:55.590"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.517" endtime="20210205 20:19:55.591"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.330" endtime="20210205 20:19:55.591"></status>
</kw>
<kw name="${postid} = 6" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:55.593" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:55.592" endtime="20210205 20:19:55.593"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:55.769" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/6 
 path_url=/posts/6 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:55.769" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/6 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:56 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d31552c8c77515a5dca4c645069fcfbcf1612574396; expires=Mon, 08-Mar-21 01:19:56 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612531790', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-kxIuVC3UpKrGIRfIBmsZMsJaaiA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12502', 'cf-request-id': '081685a9e6000073c90d3ff000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Fg9%2BrHjNL8gv786xtmCuoyVA7oP0OLytkX7BqTf0jlPpUxExZ%2FppjLHjD1QXh4UWT3BA3GzJ2KU3TK6zTQitwkY%2FQe9oUBfq0nVJitMVUDi63hqn6BrN%2FWI8n5Si"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bbcab2273c9-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 6,
  "title": "dolorem eum magni eos aperiam quia",
  "body": "ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae"
} 
 </msg>
<msg timestamp="20210205 20:19:55.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.593" endtime="20210205 20:19:55.770"></status>
</kw>
<msg timestamp="20210205 20:19:55.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.591" endtime="20210205 20:19:55.771"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:55.774" endtime="20210205 20:19:55.777"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.772" endtime="20210205 20:19:55.777"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.771" endtime="20210205 20:19:55.777"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:55.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.778" endtime="20210205 20:19:55.779"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.777" endtime="20210205 20:19:55.779"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.781" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:55.780" endtime="20210205 20:19:55.781"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.852" level="INFO">${idvalue} = [6]</msg>
<status status="PASS" starttime="20210205 20:19:55.781" endtime="20210205 20:19:55.852"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:55.853" level="INFO">${responseid} = 6</msg>
<status status="PASS" starttime="20210205 20:19:55.852" endtime="20210205 20:19:55.853"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:55.853" endtime="20210205 20:19:55.854"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.854" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:55.854" endtime="20210205 20:19:55.854"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.780" endtime="20210205 20:19:55.855"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.591" endtime="20210205 20:19:55.855"></status>
</kw>
<kw name="${postid} = 7" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:55.856" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:55.856" endtime="20210205 20:19:55.857"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:55.904" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/7 
 path_url=/posts/7 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:55.904" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/7 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:57 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5c71cc7fb86785563518e195284c24901612574397; expires=Mon, 08-Mar-21 01:19:57 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612307332', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-wrK4SLERwov0EbpkNAKTHsvGWBs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685aaf2000029de39a85000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=p9s1cIowPk5vxT6FGn50L072hnEy55YG8NPZ8J%2FH4cLha900BVQpk5yFBt67b5lJc7lhWHQokgT0je9QrZS3mTIdvo4VxYHlRs56n2U1OXJ%2BkKtKe3vJpcwTb6AD"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bbe5c0929de-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 7,
  "title": "magnam facilis autem",
  "body": "dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas"
} 
 </msg>
<msg timestamp="20210205 20:19:55.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.857" endtime="20210205 20:19:55.905"></status>
</kw>
<msg timestamp="20210205 20:19:55.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.855" endtime="20210205 20:19:55.906"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:55.908" endtime="20210205 20:19:55.911"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.907" endtime="20210205 20:19:55.911"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.906" endtime="20210205 20:19:55.912"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:55.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.913" endtime="20210205 20:19:55.914"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.912" endtime="20210205 20:19:55.914"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.915" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:55.915" endtime="20210205 20:19:55.915"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.985" level="INFO">${idvalue} = [7]</msg>
<status status="PASS" starttime="20210205 20:19:55.916" endtime="20210205 20:19:55.985"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:55.986" level="INFO">${responseid} = 7</msg>
<status status="PASS" starttime="20210205 20:19:55.985" endtime="20210205 20:19:55.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:55.986" endtime="20210205 20:19:55.987"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:55.988" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:55.987" endtime="20210205 20:19:55.988"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.914" endtime="20210205 20:19:55.988"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.855" endtime="20210205 20:19:55.988"></status>
</kw>
<kw name="${postid} = 8" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:55.990" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:55.990" endtime="20210205 20:19:55.991"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:56.086" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/8 
 path_url=/posts/8 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:56.086" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/8 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:57 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d79b080b7126d7ee3eb9452d1783e971a1612574397; expires=Mon, 08-Mar-21 01:19:57 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '996', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"104-Yd+P3vUk4gJ20H3qrEyZIqbProI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685aba200002abcd7bf0000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=z1gH5gC3w%2BqEyedi7B%2F9isTlEsBq1%2BiR65aeN5dTqgQ6b0%2BpAdE0x6WXq0fUk7EtTKtk7dIYl65RO%2BWiIEWgAl9%2FihzwAgOzRBNm2UWcu3VESRW3p16J3iWOnZsx"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bbf6cd72abc-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 8,
  "title": "dolorem dolore est ipsam",
  "body": "dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae"
} 
 </msg>
<msg timestamp="20210205 20:19:56.087" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.991" endtime="20210205 20:19:56.087"></status>
</kw>
<msg timestamp="20210205 20:19:56.087" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:55.988" endtime="20210205 20:19:56.087"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.090" endtime="20210205 20:19:56.093"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.089" endtime="20210205 20:19:56.093"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.088" endtime="20210205 20:19:56.093"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.095" endtime="20210205 20:19:56.095"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.094" endtime="20210205 20:19:56.096"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.097" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.097" endtime="20210205 20:19:56.097"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.168" level="INFO">${idvalue} = [8]</msg>
<status status="PASS" starttime="20210205 20:19:56.097" endtime="20210205 20:19:56.168"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:56.169" level="INFO">${responseid} = 8</msg>
<status status="PASS" starttime="20210205 20:19:56.168" endtime="20210205 20:19:56.169"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.169" endtime="20210205 20:19:56.170"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.170" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.170" endtime="20210205 20:19:56.170"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.096" endtime="20210205 20:19:56.171"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:55.988" endtime="20210205 20:19:56.171"></status>
</kw>
<kw name="${postid} = 9" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.172" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:56.172" endtime="20210205 20:19:56.173"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:56.266" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/9 
 path_url=/posts/9 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:56.266" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/9 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:57 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dda82bbdded35dddb551dbc2add5167891612574397; expires=Mon, 08-Mar-21 01:19:57 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '994', 'x-ratelimit-reset': '1612493026', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"f6-mPDZopc4bkupX1TAvUQz4Bpbp5s"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685ac5a00000dc2ff8c6000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=RS15GcBCrv2Nk3wIh0sYpVREmVGYrtf9%2F0wpTHXrLV%2FwYLXFMS%2BdW9asptuHOZXfRoQQsyQwpWvEU14Wv%2BwnLsC3B809TGqG7u640Bf43TKfRkPRfgz4kSbuaiLE"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bc09f720dc2-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 9,
  "title": "nesciunt iure omnis dolorem tempora et accusantium",
  "body": "consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas"
} 
 </msg>
<msg timestamp="20210205 20:19:56.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.173" endtime="20210205 20:19:56.267"></status>
</kw>
<msg timestamp="20210205 20:19:56.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.171" endtime="20210205 20:19:56.267"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.270" endtime="20210205 20:19:56.273"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.268" endtime="20210205 20:19:56.273"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.267" endtime="20210205 20:19:56.273"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.275" endtime="20210205 20:19:56.275"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.274" endtime="20210205 20:19:56.276"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.277" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.277" endtime="20210205 20:19:56.277"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.357" level="INFO">${idvalue} = [9]</msg>
<status status="PASS" starttime="20210205 20:19:56.277" endtime="20210205 20:19:56.357"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:56.358" level="INFO">${responseid} = 9</msg>
<status status="PASS" starttime="20210205 20:19:56.357" endtime="20210205 20:19:56.358"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.358" endtime="20210205 20:19:56.359"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.359" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.359" endtime="20210205 20:19:56.359"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.276" endtime="20210205 20:19:56.360"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.171" endtime="20210205 20:19:56.360"></status>
</kw>
<kw name="${postid} = 10" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.361" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:56.361" endtime="20210205 20:19:56.362"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:56.402" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/10 
 path_url=/posts/10 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:56.402" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/10 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:57 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd1369dc80cc5916d7107b8e01521362f1612574397; expires=Mon, 08-Mar-21 01:19:57 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1612269749', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d9-iWGkhNuCVU3QUpWXcSkr72qX524"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685ace400000daeb73d3000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=B72BntB2d%2BM7twdAoVJ%2Frd5vdZCOQFiYMYyXy8p1WilAHC4m%2BvMLFWIXDmSydyoGJCZDNtzH%2B3f9W3Xy9WJbjCd%2FwIlUC%2BK3JGfLsMnjbQqecwZiPJJZWmCojw8U"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bc16a670dae-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 1,
  "id": 10,
  "title": "optio molestias id quia eum",
  "body": "quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error"
} 
 </msg>
<msg timestamp="20210205 20:19:56.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.362" endtime="20210205 20:19:56.403"></status>
</kw>
<msg timestamp="20210205 20:19:56.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.360" endtime="20210205 20:19:56.404"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.406" endtime="20210205 20:19:56.409"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.405" endtime="20210205 20:19:56.409"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.404" endtime="20210205 20:19:56.409"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.411" endtime="20210205 20:19:56.411"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.410" endtime="20210205 20:19:56.412"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.413" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.413" endtime="20210205 20:19:56.413"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.481" level="INFO">${idvalue} = [10]</msg>
<status status="PASS" starttime="20210205 20:19:56.414" endtime="20210205 20:19:56.481"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:56.482" level="INFO">${responseid} = 10</msg>
<status status="PASS" starttime="20210205 20:19:56.482" endtime="20210205 20:19:56.482"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.483" endtime="20210205 20:19:56.483"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.484" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.484" endtime="20210205 20:19:56.484"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.412" endtime="20210205 20:19:56.484"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.360" endtime="20210205 20:19:56.484"></status>
</kw>
<kw name="${postid} = 11" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.486" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:56.486" endtime="20210205 20:19:56.487"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:56.598" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/11 
 path_url=/posts/11 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:56.598" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/11 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:57 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc5695b35f86a66e941f91c197e98a6ab1612574397; expires=Mon, 08-Mar-21 01:19:57 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '831', 'X-Ratelimit-Reset': '1611749100', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"106-uIZ0aYbaIRT3eH//+EjRpRGAwRw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685ada5000029f73daec000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2FITdMkciuhkgvXztztdynEkwlNr%2FAlPMvNmwpjKohfGLOR6Ir9Xu4OXr2sYnPr0%2Fj%2F2PdXk77oErU1a2UO1suHkNVxtivyHYUhsf248gNyqIJrcvJoQDqD9NwKbB"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bc2ad6c29f7-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 11,
  "title": "et ea vero quia laudantium autem",
  "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
} 
 </msg>
<msg timestamp="20210205 20:19:56.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.487" endtime="20210205 20:19:56.599"></status>
</kw>
<msg timestamp="20210205 20:19:56.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.485" endtime="20210205 20:19:56.600"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.602" endtime="20210205 20:19:56.605"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.601" endtime="20210205 20:19:56.605"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.600" endtime="20210205 20:19:56.605"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.607" endtime="20210205 20:19:56.607"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.605" endtime="20210205 20:19:56.607"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.609" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.608" endtime="20210205 20:19:56.609"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.682" level="INFO">${idvalue} = [11]</msg>
<status status="PASS" starttime="20210205 20:19:56.609" endtime="20210205 20:19:56.682"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:56.683" level="INFO">${responseid} = 11</msg>
<status status="PASS" starttime="20210205 20:19:56.683" endtime="20210205 20:19:56.683"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.684" endtime="20210205 20:19:56.684"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.685" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.684" endtime="20210205 20:19:56.685"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.608" endtime="20210205 20:19:56.685"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.484" endtime="20210205 20:19:56.685"></status>
</kw>
<kw name="${postid} = 12" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.687" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:56.687" endtime="20210205 20:19:56.688"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:56.827" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/12 
 path_url=/posts/12 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:56.828" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/12 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:58 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dacbcfeb1247f0a4ddd03f00a631f21041612574397; expires=Mon, 08-Mar-21 01:19:57 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '813', 'X-Ratelimit-Reset': '1611749100', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fa-Kb6iNtCKEzLRQ8QyZ5zRPuKRNgs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685ae2a000029c6570f0000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=jxjnGeHNdVHRs2SM6AQaB67%2Btjx4XojR1xJ%2B%2FayZRfXoNMJ3hV%2FHze5Uq12ESlO9%2Fv3XzM2nKkS7ZRZaV3kVmuEGWXZYkzZt0tHUtviX%2BpcXx4jGotHeAtDet61R"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bc37a6929c6-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 12,
  "title": "in quibusdam tempore odit est dolorem",
  "body": "itaque id aut magnam\npraesentium quia et ea odit et ea voluptas et\nsapiente quia nihil amet occaecati quia id voluptatem\nincidunt ea est distinctio odio"
} 
 </msg>
<msg timestamp="20210205 20:19:56.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.688" endtime="20210205 20:19:56.828"></status>
</kw>
<msg timestamp="20210205 20:19:56.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.686" endtime="20210205 20:19:56.829"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.831" endtime="20210205 20:19:56.835"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.830" endtime="20210205 20:19:56.835"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.829" endtime="20210205 20:19:56.835"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.836" endtime="20210205 20:19:56.837"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.835" endtime="20210205 20:19:56.837"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.839" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.838" endtime="20210205 20:19:56.839"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.910" level="INFO">${idvalue} = [12]</msg>
<status status="PASS" starttime="20210205 20:19:56.839" endtime="20210205 20:19:56.910"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:56.911" level="INFO">${responseid} = 12</msg>
<status status="PASS" starttime="20210205 20:19:56.910" endtime="20210205 20:19:56.911"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.911" endtime="20210205 20:19:56.912"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.913" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.912" endtime="20210205 20:19:56.913"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.837" endtime="20210205 20:19:56.913"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.686" endtime="20210205 20:19:56.913"></status>
</kw>
<kw name="${postid} = 13" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.915" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:56.914" endtime="20210205 20:19:56.915"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:56.962" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/13 
 path_url=/posts/13 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:56.962" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/13 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:58 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3ab5d40e3181881ef0bbca667980f4de1612574398; expires=Mon, 08-Mar-21 01:19:58 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '796', 'X-Ratelimit-Reset': '1611749100', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"150-jmPMxXQIZLCEEVRunU0Zippecws"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685af140000ea6a6b866000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1FJyiL1vPE%2B1TAxcSe3m4c98KZ%2FOMTfVlzZ7peZDjJLPtpDAx%2B%2F%2F107hUyg88o5Xifq8zTEivLQjArRfqY4Dl3T5cL50pJi%2FXXXrbz5yDgM%2BUd4Aa6b0klGL1UKT"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bc4e8ecea6a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 13,
  "title": "dolorum ut in voluptas mollitia et saepe quo animi",
  "body": "aut dicta possimus sint mollitia voluptas commodi quo doloremque\niste corrupti reiciendis voluptatem eius rerum\nsit cumque quod eligendi laborum minima\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam"
} 
 </msg>
<msg timestamp="20210205 20:19:56.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.916" endtime="20210205 20:19:56.963"></status>
</kw>
<msg timestamp="20210205 20:19:56.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.913" endtime="20210205 20:19:56.963"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:56.966" endtime="20210205 20:19:56.969"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.965" endtime="20210205 20:19:56.969"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.964" endtime="20210205 20:19:56.969"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:56.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:56.970" endtime="20210205 20:19:56.971"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.969" endtime="20210205 20:19:56.971"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:56.973" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:56.972" endtime="20210205 20:19:56.973"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.045" level="INFO">${idvalue} = [13]</msg>
<status status="PASS" starttime="20210205 20:19:56.973" endtime="20210205 20:19:57.045"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:57.046" level="INFO">${responseid} = 13</msg>
<status status="PASS" starttime="20210205 20:19:57.045" endtime="20210205 20:19:57.046"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.046" endtime="20210205 20:19:57.047"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.047" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.047" endtime="20210205 20:19:57.047"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.971" endtime="20210205 20:19:57.048"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:56.913" endtime="20210205 20:19:57.048"></status>
</kw>
<kw name="${postid} = 14" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.050" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:57.049" endtime="20210205 20:19:57.050"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:57.120" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/14 
 path_url=/posts/14 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:57.120" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/14 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:58 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3e2412014a94e8fcec01e4dac71045201612574398; expires=Mon, 08-Mar-21 01:19:58 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '779', 'X-Ratelimit-Reset': '1611749100', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e6-a5waiJMRxEr5D9vgRbpDZ2ofS4U"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685afb40000299ab885d000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=vdDptpRAnggP%2FdYsRKIs3vvquNUV6I2XrTNY7WTkSmIQc9B%2BkonO484WYpJmwY0ta0Gg5YE6evAJaN6qb6I5QfY3xKWhnbeyCgCQCcHD40asQ6gLEdsDhatEFGez"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bc5ecb6299a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 14,
  "title": "voluptatem eligendi optio",
  "body": "fuga et accusamus dolorum perferendis illo voluptas\nnon doloremque neque facere\nad qui dolorum molestiae beatae\nsed aut voluptas totam sit illum"
} 
 </msg>
<msg timestamp="20210205 20:19:57.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.050" endtime="20210205 20:19:57.121"></status>
</kw>
<msg timestamp="20210205 20:19:57.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.048" endtime="20210205 20:19:57.121"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.124" endtime="20210205 20:19:57.127"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.123" endtime="20210205 20:19:57.127"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.122" endtime="20210205 20:19:57.127"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.129" endtime="20210205 20:19:57.129"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.128" endtime="20210205 20:19:57.130"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.131" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.131" endtime="20210205 20:19:57.131"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.201" level="INFO">${idvalue} = [14]</msg>
<status status="PASS" starttime="20210205 20:19:57.132" endtime="20210205 20:19:57.201"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:57.202" level="INFO">${responseid} = 14</msg>
<status status="PASS" starttime="20210205 20:19:57.201" endtime="20210205 20:19:57.202"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.202" endtime="20210205 20:19:57.203"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.203" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.203" endtime="20210205 20:19:57.203"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.130" endtime="20210205 20:19:57.204"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.048" endtime="20210205 20:19:57.204"></status>
</kw>
<kw name="${postid} = 15" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.205" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:57.205" endtime="20210205 20:19:57.206"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:57.358" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/15 
 path_url=/posts/15 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:57.358" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/15 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:58 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3bfeaffe4dba0626662b47af28e6ad561612574398; expires=Mon, 08-Mar-21 01:19:58 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1612193164', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"eb-g42jCAr46rCEFHt8pUWS/uASMcA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685b0310000ea72cd27f000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=x%2FwJ1Drb7spNYasFBYfq4DtSrxcCwcZCSoLzPuLti3q6lMeqb8JWTITeWfzcM5xz7NIOgBQJJbe261V1NiZS4RmnYLjBMIRfuFDg2WRHR%2FUkpmR%2FrXiGOM8wGqQk"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bc6bda9ea72-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 15,
  "title": "eveniet quod temporibus",
  "body": "reprehenderit quos placeat\nvelit minima officia dolores impedit repudiandae molestiae nam\nvoluptas recusandae quis delectus\nofficiis harum fugiat vitae"
} 
 </msg>
<msg timestamp="20210205 20:19:57.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.206" endtime="20210205 20:19:57.359"></status>
</kw>
<msg timestamp="20210205 20:19:57.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.204" endtime="20210205 20:19:57.359"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.362" endtime="20210205 20:19:57.365"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.361" endtime="20210205 20:19:57.365"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.360" endtime="20210205 20:19:57.365"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.367" endtime="20210205 20:19:57.367"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.365" endtime="20210205 20:19:57.367"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.369" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.368" endtime="20210205 20:19:57.369"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.438" level="INFO">${idvalue} = [15]</msg>
<status status="PASS" starttime="20210205 20:19:57.369" endtime="20210205 20:19:57.438"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:57.439" level="INFO">${responseid} = 15</msg>
<status status="PASS" starttime="20210205 20:19:57.438" endtime="20210205 20:19:57.439"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.439" endtime="20210205 20:19:57.440"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.441" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.440" endtime="20210205 20:19:57.441"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.368" endtime="20210205 20:19:57.441"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.204" endtime="20210205 20:19:57.441"></status>
</kw>
<kw name="${postid} = 16" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.443" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:57.442" endtime="20210205 20:19:57.444"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:57.492" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/16 
 path_url=/posts/16 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:57.492" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/16 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:58 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9a460c0b3fad9c31102c650d4db621961612574398; expires=Mon, 08-Mar-21 01:19:58 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '994', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"139-Ry5LVphQL/+x/ADbFfrczHgqqDs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685b11e0000f10acc1cf000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=tUMsom2gOmPetUDeXRjg61ocHERO6YxPO9DXOblJ1Fx8pR5IWqrLVKXJl105YKBrDNHBYs%2Fn6BwqqI8gWGgyixcTLhtrXlGd22x2zwGPbLu5kbcW88l24ZfMMKtn"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bc83bc2f10a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 16,
  "title": "sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio",
  "body": "suscipit nam nisi quo aperiam aut\nasperiores eos fugit maiores voluptatibus quia\nvoluptatem quis ullam qui in alias quia est\nconsequatur magni mollitia accusamus ea nisi voluptate dicta"
} 
 </msg>
<msg timestamp="20210205 20:19:57.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.444" endtime="20210205 20:19:57.493"></status>
</kw>
<msg timestamp="20210205 20:19:57.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.442" endtime="20210205 20:19:57.494"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.496" endtime="20210205 20:19:57.499"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.495" endtime="20210205 20:19:57.499"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.494" endtime="20210205 20:19:57.499"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.501" endtime="20210205 20:19:57.501"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.500" endtime="20210205 20:19:57.502"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.503" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.503" endtime="20210205 20:19:57.503"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.564" level="INFO">${idvalue} = [16]</msg>
<status status="PASS" starttime="20210205 20:19:57.503" endtime="20210205 20:19:57.564"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:57.565" level="INFO">${responseid} = 16</msg>
<status status="PASS" starttime="20210205 20:19:57.564" endtime="20210205 20:19:57.565"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.565" endtime="20210205 20:19:57.566"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.567" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.566" endtime="20210205 20:19:57.567"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.502" endtime="20210205 20:19:57.567"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.441" endtime="20210205 20:19:57.567"></status>
</kw>
<kw name="${postid} = 17" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.569" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:57.569" endtime="20210205 20:19:57.570"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:57.656" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/17 
 path_url=/posts/17 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:57.656" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/17 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:58 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9f8a3ad7d3e385a272081f18b8d6bb691612574398; expires=Mon, 08-Mar-21 01:19:58 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '967', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-Y7y9zgdEq0WndoXZmQZBsN4+z14"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685b1c90000f0dd03872000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=H7JzPD180mVxSFFsp1o03nRdil9xxw49N6owqUH4gRmi7uvuNGM%2F3UoaSMYbxfpbkW5uJcdASwAsOemZzPLPdcX6Owue2x8%2BJT11pIvit%2F55GwDyAmXCh1UiX8kd"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bc9490ef0dd-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 17,
  "title": "fugit voluptas sed molestias voluptatem provident",
  "body": "eos voluptas et aut odit natus earum\naspernatur fuga molestiae ullam\ndeserunt ratione qui eos\nqui nihil ratione nemo velit ut aut id quo"
} 
 </msg>
<msg timestamp="20210205 20:19:57.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.570" endtime="20210205 20:19:57.657"></status>
</kw>
<msg timestamp="20210205 20:19:57.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.568" endtime="20210205 20:19:57.657"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.660" endtime="20210205 20:19:57.663"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.659" endtime="20210205 20:19:57.663"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.658" endtime="20210205 20:19:57.663"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.665" endtime="20210205 20:19:57.665"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.664" endtime="20210205 20:19:57.666"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.667" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.667" endtime="20210205 20:19:57.667"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.741" level="INFO">${idvalue} = [17]</msg>
<status status="PASS" starttime="20210205 20:19:57.667" endtime="20210205 20:19:57.742"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:57.743" level="INFO">${responseid} = 17</msg>
<status status="PASS" starttime="20210205 20:19:57.742" endtime="20210205 20:19:57.743"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.743" endtime="20210205 20:19:57.743"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.744" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.744" endtime="20210205 20:19:57.744"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.666" endtime="20210205 20:19:57.744"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.567" endtime="20210205 20:19:57.745"></status>
</kw>
<kw name="${postid} = 18" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.746" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:57.746" endtime="20210205 20:19:57.747"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:57.889" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/18 
 path_url=/posts/18 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:57.889" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/18 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:59 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5d9e42aac9d2ebfe0ccab778ab178fbd1612574399; expires=Mon, 08-Mar-21 01:19:59 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '950', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d6-gBDS8x9CZAqgdjWUPWV0jWIQ7ps"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685b24d0000f10208bae000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=cofrQ%2Bd58j1M%2FyRSt6rF2XAujenliIEqEplZR52MjR0cC9Mxm1j%2BQxZOhdA8cmz2R6V1PnxTDqVON9EQjGGkWz4%2B3WNqOU%2FeHiHPJz%2B%2BxOcS6F2uR3mWxLZ7Pf3S"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bca1f1ef102-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 18,
  "title": "voluptate et itaque vero tempora molestiae",
  "body": "eveniet quo quis\nlaborum totam consequatur non dolor\nut et est repudiandae\nest voluptatem vel debitis et magnam"
} 
 </msg>
<msg timestamp="20210205 20:19:57.890" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.747" endtime="20210205 20:19:57.890"></status>
</kw>
<msg timestamp="20210205 20:19:57.890" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.745" endtime="20210205 20:19:57.890"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.893" endtime="20210205 20:19:57.896"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.892" endtime="20210205 20:19:57.896"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.891" endtime="20210205 20:19:57.897"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.898" endtime="20210205 20:19:57.899"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.897" endtime="20210205 20:19:57.899"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.900" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.900" endtime="20210205 20:19:57.900"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.969" level="INFO">${idvalue} = [18]</msg>
<status status="PASS" starttime="20210205 20:19:57.901" endtime="20210205 20:19:57.969"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:57.970" level="INFO">${responseid} = 18</msg>
<status status="PASS" starttime="20210205 20:19:57.969" endtime="20210205 20:19:57.970"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:57.970" endtime="20210205 20:19:57.970"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:57.971" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:57.970" endtime="20210205 20:19:57.971"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.899" endtime="20210205 20:19:57.971"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.745" endtime="20210205 20:19:57.971"></status>
</kw>
<kw name="${postid} = 19" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:57.972" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:57.972" endtime="20210205 20:19:57.972"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:58.013" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/19 
 path_url=/posts/19 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:58.013" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/19 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:59 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d01a38bcf7c8764f73b55a2c5e71e7a681612574399; expires=Mon, 08-Mar-21 01:19:59 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '933', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f5-6MONAVAj01S9sHCgIVhhm8kT8bk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685b32e0000ceb8bcb68000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=6oPGSkUDBqImQjyF2fPFn2PbOgMEZqUbIhcgLnbV0XISNU9b3CIrbrEKq%2FUCxQgr383EQEGqygS8e%2Buw7NpCj692S%2B9tdKhUSo%2BX8NkIpq%2BHggSONmP%2FsovfnXF5"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bcb7e1bceb8-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 19,
  "title": "adipisci placeat illum aut reiciendis qui",
  "body": "illum quis cupiditate provident sit magnam\nea sed aut omnis\nveniam maiores ullam consequatur atque\nadipisci quo iste expedita sit quos voluptas"
} 
 </msg>
<msg timestamp="20210205 20:19:58.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.973" endtime="20210205 20:19:58.014"></status>
</kw>
<msg timestamp="20210205 20:19:58.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:57.971" endtime="20210205 20:19:58.014"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:58.017" endtime="20210205 20:19:58.019"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.016" endtime="20210205 20:19:58.020"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.015" endtime="20210205 20:19:58.020"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:58.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.021" endtime="20210205 20:19:58.022"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.020" endtime="20210205 20:19:58.022"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.024" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:58.024" endtime="20210205 20:19:58.024"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.091" level="INFO">${idvalue} = [19]</msg>
<status status="PASS" starttime="20210205 20:19:58.025" endtime="20210205 20:19:58.092"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:58.093" level="INFO">${responseid} = 19</msg>
<status status="PASS" starttime="20210205 20:19:58.092" endtime="20210205 20:19:58.093"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:58.093" endtime="20210205 20:19:58.093"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.094" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:58.094" endtime="20210205 20:19:58.094"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.023" endtime="20210205 20:19:58.094"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:57.971" endtime="20210205 20:19:58.094"></status>
</kw>
<kw name="${postid} = 20" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:58.096" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:58.096" endtime="20210205 20:19:58.097"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:58.210" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/20 
 path_url=/posts/20 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:58.210" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/20 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:59 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4e2b7f2edba67b82fb9d6b3501b8fce71612574399; expires=Mon, 08-Mar-21 01:19:59 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '990', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"134-B2D4HCXMgAW5NzE2tV3HVA4JP6M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685b3ea00002accda0f0000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=gTXVxkQkKMEYuj6UghoXDThSvmvOfbEehMZM1cUduck9%2FBPITO60rp4YnIfs8vpL8N1L2wt6zCONpbVU%2F9XMuTZKLeLg0VKvWi7TPyW3kM7wIcsiKgNDkoOrus6w"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bccada42acc-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 2,
  "id": 20,
  "title": "doloribus ad provident suscipit at",
  "body": "qui consequuntur ducimus possimus quisquam amet similique\nsuscipit porro ipsam amet\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\nomnis rerum consequatur expedita quidem cumque explicabo"
} 
 </msg>
<msg timestamp="20210205 20:19:58.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.097" endtime="20210205 20:19:58.211"></status>
</kw>
<msg timestamp="20210205 20:19:58.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.095" endtime="20210205 20:19:58.211"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:58.214" endtime="20210205 20:19:58.217"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.213" endtime="20210205 20:19:58.217"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.212" endtime="20210205 20:19:58.217"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:58.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.218" endtime="20210205 20:19:58.219"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.217" endtime="20210205 20:19:58.219"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.221" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:58.220" endtime="20210205 20:19:58.221"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.293" level="INFO">${idvalue} = [20]</msg>
<status status="PASS" starttime="20210205 20:19:58.221" endtime="20210205 20:19:58.293"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:58.294" level="INFO">${responseid} = 20</msg>
<status status="PASS" starttime="20210205 20:19:58.293" endtime="20210205 20:19:58.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:58.294" endtime="20210205 20:19:58.295"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.296" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:58.295" endtime="20210205 20:19:58.296"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.220" endtime="20210205 20:19:58.296"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.095" endtime="20210205 20:19:58.296"></status>
</kw>
<kw name="${postid} = 21" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:58.298" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:58.297" endtime="20210205 20:19:58.298"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:58.443" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/21 
 path_url=/posts/21 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:58.443" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/21 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:59 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4e2b7f2edba67b82fb9d6b3501b8fce71612574399; expires=Mon, 08-Mar-21 01:19:59 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612560701', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"117-mvqE9pMkp/BxthnOAO6lQoihz2M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '13739', 'cf-request-id': '081685b4de00002acc08012000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=eKvseAX1pWg7ZO4CN25A0Cpsdb%2B%2Fl3cnW4G9tTyHSGF7ZnbKo6mhEh3xs0g6nikaz%2B%2B%2Bdgrnfks9ZOiUJYIwHJrfn2BRSdqxCldh13dYF%2BTi4NRns2%2Fy49zX%2B3%2Fh"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bce396c2acc-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 21,
  "title": "asperiores ea ipsam voluptatibus modi minima quia sint",
  "body": "repellat aliquid praesentium dolorem quo\nsed totam minus non itaque\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\ntempora et tenetur expedita sunt"
} 
 </msg>
<msg timestamp="20210205 20:19:58.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.299" endtime="20210205 20:19:58.444"></status>
</kw>
<msg timestamp="20210205 20:19:58.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.296" endtime="20210205 20:19:58.444"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:58.447" endtime="20210205 20:19:58.450"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.446" endtime="20210205 20:19:58.450"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.445" endtime="20210205 20:19:58.450"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:58.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.452" endtime="20210205 20:19:58.452"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.450" endtime="20210205 20:19:58.452"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.454" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:58.453" endtime="20210205 20:19:58.454"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.522" level="INFO">${idvalue} = [21]</msg>
<status status="PASS" starttime="20210205 20:19:58.454" endtime="20210205 20:19:58.522"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:58.523" level="INFO">${responseid} = 21</msg>
<status status="PASS" starttime="20210205 20:19:58.523" endtime="20210205 20:19:58.524"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:58.524" endtime="20210205 20:19:58.525"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.525" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:58.525" endtime="20210205 20:19:58.526"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.453" endtime="20210205 20:19:58.526"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.296" endtime="20210205 20:19:58.526"></status>
</kw>
<kw name="${postid} = 22" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:58.528" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:58.527" endtime="20210205 20:19:58.529"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:58.692" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/22 
 path_url=/posts/22 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:58.693" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/22 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:19:59 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d799a9b042046dc94c93ad31a562bb39d1612574399; expires=Mon, 08-Mar-21 01:19:59 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '882', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e6-PXw6heQCz2Yay/FrkPvuks+op8Y"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685b5640000f9f71b27c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=rbCbhBFPBwADaugX8446WaO6bOh3K5gP7%2B0tRyW9gzs3RKVsjE4OoTJ%2BIDtnRGI5cetAoU50jug2l%2Fty3sIA6%2BmpdKWlHhfPS7dZlbrCBWgFD8ZohdKUXdKlJrH%2B"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bcf0f57f9f7-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 22,
  "title": "dolor sint quo a velit explicabo quia nam",
  "body": "eos qui et ipsum ipsam suscipit aut\nsed omnis non odio\nexpedita earum mollitia molestiae aut atque rem suscipit\nnam impedit esse"
} 
 </msg>
<msg timestamp="20210205 20:19:58.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.529" endtime="20210205 20:19:58.693"></status>
</kw>
<msg timestamp="20210205 20:19:58.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.526" endtime="20210205 20:19:58.694"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:58.696" endtime="20210205 20:19:58.699"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.695" endtime="20210205 20:19:58.699"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.694" endtime="20210205 20:19:58.699"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:58.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.701" endtime="20210205 20:19:58.702"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.700" endtime="20210205 20:19:58.702"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.703" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:58.703" endtime="20210205 20:19:58.703"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.785" level="INFO">${idvalue} = [22]</msg>
<status status="PASS" starttime="20210205 20:19:58.703" endtime="20210205 20:19:58.786"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:58.787" level="INFO">${responseid} = 22</msg>
<status status="PASS" starttime="20210205 20:19:58.786" endtime="20210205 20:19:58.787"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:58.787" endtime="20210205 20:19:58.788"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.788" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:58.788" endtime="20210205 20:19:58.788"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.702" endtime="20210205 20:19:58.789"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.526" endtime="20210205 20:19:58.789"></status>
</kw>
<kw name="${postid} = 23" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:58.791" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:58.791" endtime="20210205 20:19:58.792"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:58.956" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/23 
 path_url=/posts/23 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:58.956" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/23 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:00 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9727b9e41a5b24be1c3ae6bbeeb17ead1612574400; expires=Mon, 08-Mar-21 01:20:00 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '865', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-2cknVyBv5gWr1s/pxvkFBL7N/38"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685b663000038533da21000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Xb4klgeGre6p9sckqz%2BIoCZrGmlAMtuhwOiZoHDMLpby0W1QI%2BgGOE6Wn4%2F7Z1iZjYTkXtPuvcpcertT5Hg9Twt8CgtKaHBOpUGH%2Fu7Ffk7aDpJIlOiMU1ZGuVtb"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bd09d193853-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 23,
  "title": "maxime id vitae nihil numquam",
  "body": "veritatis unde neque eligendi\nquae quod architecto quo neque vitae\nest illo sit tempora doloremque fugit quod\net et vel beatae sequi ullam sed tenetur perspiciatis"
} 
 </msg>
<msg timestamp="20210205 20:19:58.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.792" endtime="20210205 20:19:58.957"></status>
</kw>
<msg timestamp="20210205 20:19:58.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.789" endtime="20210205 20:19:58.957"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:58.960" endtime="20210205 20:19:58.963"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.959" endtime="20210205 20:19:58.963"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.958" endtime="20210205 20:19:58.963"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:58.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:58.964" endtime="20210205 20:19:58.965"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.963" endtime="20210205 20:19:58.965"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:58.966" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:58.966" endtime="20210205 20:19:58.967"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.038" level="INFO">${idvalue} = [23]</msg>
<status status="PASS" starttime="20210205 20:19:58.967" endtime="20210205 20:19:59.038"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:59.039" level="INFO">${responseid} = 23</msg>
<status status="PASS" starttime="20210205 20:19:59.039" endtime="20210205 20:19:59.039"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.040" endtime="20210205 20:19:59.040"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.041" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.040" endtime="20210205 20:19:59.041"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.965" endtime="20210205 20:19:59.041"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:58.789" endtime="20210205 20:19:59.041"></status>
</kw>
<kw name="${postid} = 24" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.043" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:59.043" endtime="20210205 20:19:59.044"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:59.084" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/24 
 path_url=/posts/24 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:59.084" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/24 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:00 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d166afee14a2926893035c3171bb7a7f71612574400; expires=Mon, 08-Mar-21 01:20:00 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '848', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f3-ifVym0pMyH3QE/zD+bJosWWZ/xY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685b7600000f0c1e49ee000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=o5d5yAS61hfBjhRY%2BUGG4Tosu7NRK20MWnaCQFUA5K9r3o%2BqRQZpUL%2FuSpVkhlN0OHVLNUcFchbNSljOJt%2BuDGdDcjkY0bbQpFSgNAise6vPhRXHBdaqZEP%2BdQUr"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bd23acdf0c1-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 24,
  "title": "autem hic labore sunt dolores incidunt",
  "body": "enim et ex nulla\nomnis voluptas quia qui\nvoluptatem consequatur numquam aliquam sunt\ntotam recusandae id dignissimos aut sed asperiores deserunt"
} 
 </msg>
<msg timestamp="20210205 20:19:59.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.044" endtime="20210205 20:19:59.085"></status>
</kw>
<msg timestamp="20210205 20:19:59.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.042" endtime="20210205 20:19:59.085"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.088" endtime="20210205 20:19:59.091"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.086" endtime="20210205 20:19:59.091"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.086" endtime="20210205 20:19:59.091"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.092" endtime="20210205 20:19:59.093"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.091" endtime="20210205 20:19:59.093"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.095" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.094" endtime="20210205 20:19:59.095"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.169" level="INFO">${idvalue} = [24]</msg>
<status status="PASS" starttime="20210205 20:19:59.095" endtime="20210205 20:19:59.169"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:59.170" level="INFO">${responseid} = 24</msg>
<status status="PASS" starttime="20210205 20:19:59.169" endtime="20210205 20:19:59.170"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.170" endtime="20210205 20:19:59.171"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.171" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.171" endtime="20210205 20:19:59.171"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.093" endtime="20210205 20:19:59.172"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.041" endtime="20210205 20:19:59.172"></status>
</kw>
<kw name="${postid} = 25" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.173" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:59.173" endtime="20210205 20:19:59.174"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:59.261" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/25 
 path_url=/posts/25 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:59.261" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/25 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:00 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3ae33a96768a50d0a0c2566a1a03c6f71612574400; expires=Mon, 08-Mar-21 01:20:00 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '831', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ed-5nZjsj4lJ1lY/Chj2v9voa/MRVw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685b80e000074bf39304000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=cSKqpTVs6KqESQv98XvknregEnDVZ1uRCcUPm3q7KvwEQLQku1kVm%2BNypR56O0i6GzbiP0%2FeIe%2BbHwVuOijblNcu7nMPk2prtiPteOtCGJ%2F%2FZpY1JEYtGmbzrqrQ"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bd34dc474bf-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 25,
  "title": "rem alias distinctio quo quis",
  "body": "ullam consequatur ut\nomnis quis sit vel consequuntur\nipsa eligendi ipsum molestiae et omnis error nostrum\nmolestiae illo tempore quia et distinctio"
} 
 </msg>
<msg timestamp="20210205 20:19:59.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.175" endtime="20210205 20:19:59.262"></status>
</kw>
<msg timestamp="20210205 20:19:59.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.172" endtime="20210205 20:19:59.263"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.265" endtime="20210205 20:19:59.268"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.264" endtime="20210205 20:19:59.268"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.263" endtime="20210205 20:19:59.268"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.270" endtime="20210205 20:19:59.270"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.268" endtime="20210205 20:19:59.271"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.272" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.272" endtime="20210205 20:19:59.272"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.342" level="INFO">${idvalue} = [25]</msg>
<status status="PASS" starttime="20210205 20:19:59.272" endtime="20210205 20:19:59.342"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:59.343" level="INFO">${responseid} = 25</msg>
<status status="PASS" starttime="20210205 20:19:59.342" endtime="20210205 20:19:59.343"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.343" endtime="20210205 20:19:59.344"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.344" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.344" endtime="20210205 20:19:59.344"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.271" endtime="20210205 20:19:59.345"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.172" endtime="20210205 20:19:59.345"></status>
</kw>
<kw name="${postid} = 26" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.346" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:59.346" endtime="20210205 20:19:59.347"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:59.489" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/26 
 path_url=/posts/26 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:59.489" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/26 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:00 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d278f823dec9cd3e02f0ed7a42671b7c01612574400; expires=Mon, 08-Mar-21 01:20:00 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '814', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"103-nvdlqF1XCHpBd3+QuyEzLJ0DKRU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685b8a40000747aa7372000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2FCmNgoFpc0xcY1NxUjKWjV9NDD5VQNb8W1LgOMFFyCos7HJSb4%2FDD%2B%2BE1XYTU3fFTBbSGj3saJTCCLXbQP0uZrMlI4Br1pyCwJAaRiwU7RzZBLix7vKcNo%2FHmwYc"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bd43ad9747a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 26,
  "title": "est et quae odit qui non",
  "body": "similique esse doloribus nihil accusamus\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\nperspiciatis cum ut laudantium\nomnis aut molestiae vel vero"
} 
 </msg>
<msg timestamp="20210205 20:19:59.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.347" endtime="20210205 20:19:59.490"></status>
</kw>
<msg timestamp="20210205 20:19:59.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.345" endtime="20210205 20:19:59.491"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.493" endtime="20210205 20:19:59.496"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.492" endtime="20210205 20:19:59.497"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.491" endtime="20210205 20:19:59.497"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.498" endtime="20210205 20:19:59.499"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.497" endtime="20210205 20:19:59.499"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.501" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.500" endtime="20210205 20:19:59.501"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.567" level="INFO">${idvalue} = [26]</msg>
<status status="PASS" starttime="20210205 20:19:59.501" endtime="20210205 20:19:59.567"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:59.568" level="INFO">${responseid} = 26</msg>
<status status="PASS" starttime="20210205 20:19:59.567" endtime="20210205 20:19:59.568"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.568" endtime="20210205 20:19:59.568"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.569" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.568" endtime="20210205 20:19:59.569"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.499" endtime="20210205 20:19:59.569"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.345" endtime="20210205 20:19:59.569"></status>
</kw>
<kw name="${postid} = 27" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.572" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:59.571" endtime="20210205 20:19:59.572"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:59.627" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/27 
 path_url=/posts/27 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:59.627" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/27 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:00 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dfe8f7e3436ccc04dd776fac6f5e11e381612574400; expires=Mon, 08-Mar-21 01:20:00 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '797', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-qKM2azhXtnWXfnWclKp4KhCN+BA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685b9710000f4743b01d000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1yWNd0qJtRXGKL5AXsH8Aq12AFwoyu3Qm7mosrT0lxCkcnPX%2F5dDBjg6szTEoFX8Q%2BXz0y8UopQWphyg7qrYFs0bbQeDrUReuU8CBvWr%2FO%2FKC12XzRlMi5BJVTON"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bd57a2ff474-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 27,
  "title": "quasi id et eos tenetur aut quo autem",
  "body": "eum sed dolores ipsam sint possimus debitis occaecati\ndebitis qui qui et\nut placeat enim earum aut odit facilis\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur"
} 
 </msg>
<msg timestamp="20210205 20:19:59.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.573" endtime="20210205 20:19:59.628"></status>
</kw>
<msg timestamp="20210205 20:19:59.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.570" endtime="20210205 20:19:59.629"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.631" endtime="20210205 20:19:59.634"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.630" endtime="20210205 20:19:59.634"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.629" endtime="20210205 20:19:59.634"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.636" endtime="20210205 20:19:59.636"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.635" endtime="20210205 20:19:59.637"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.638" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.638" endtime="20210205 20:19:59.638"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.690" level="INFO">${idvalue} = [27]</msg>
<status status="PASS" starttime="20210205 20:19:59.638" endtime="20210205 20:19:59.690"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:59.691" level="INFO">${responseid} = 27</msg>
<status status="PASS" starttime="20210205 20:19:59.690" endtime="20210205 20:19:59.691"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.691" endtime="20210205 20:19:59.692"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.693" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.692" endtime="20210205 20:19:59.693"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.637" endtime="20210205 20:19:59.693"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.570" endtime="20210205 20:19:59.693"></status>
</kw>
<kw name="${postid} = 28" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.695" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:59.694" endtime="20210205 20:19:59.695"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:19:59.797" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/28 
 path_url=/posts/28 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:19:59.797" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/28 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:01 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=ddbd533dcdada838161a7475f8a2cbb061612574401; expires=Mon, 08-Mar-21 01:20:01 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '780', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f9-AEZ+sXaihdyQslUCCBcxh7QHSIc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685ba1c00003848be040000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=PKJr%2B8u%2BGhQ0y0ADqvwYXupROIIvCvjzNCbCblClHIkD51R6nYCuA34cDELfiigymRCDosUPpNxbzjugqA7grV%2BkG4EbdDyuQbJCRmz0ttCWY19emcOBjypBEx14"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bd69b333848-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 28,
  "title": "delectus ullam et corporis nulla voluptas sequi",
  "body": "non et quaerat ex quae ad maiores\nmaiores recusandae totam aut blanditiis mollitia quas illo\nut voluptatibus voluptatem\nsimilique nostrum eum"
} 
 </msg>
<msg timestamp="20210205 20:19:59.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.695" endtime="20210205 20:19:59.798"></status>
</kw>
<msg timestamp="20210205 20:19:59.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.694" endtime="20210205 20:19:59.798"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.801" endtime="20210205 20:19:59.804"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.800" endtime="20210205 20:19:59.804"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.799" endtime="20210205 20:19:59.805"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.806" endtime="20210205 20:19:59.807"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.805" endtime="20210205 20:19:59.807"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.809" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.808" endtime="20210205 20:19:59.809"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.880" level="INFO">${idvalue} = [28]</msg>
<status status="PASS" starttime="20210205 20:19:59.809" endtime="20210205 20:19:59.880"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:19:59.881" level="INFO">${responseid} = 28</msg>
<status status="PASS" starttime="20210205 20:19:59.880" endtime="20210205 20:19:59.881"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:19:59.881" endtime="20210205 20:19:59.882"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:19:59.883" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:19:59.882" endtime="20210205 20:19:59.883"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.807" endtime="20210205 20:19:59.883"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.693" endtime="20210205 20:19:59.883"></status>
</kw>
<kw name="${postid} = 29" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:19:59.885" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:19:59.884" endtime="20210205 20:19:59.886"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:00.094" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/29 
 path_url=/posts/29 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:00.094" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/29 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:01 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d708dfed9dbb47037358f4446439a856d1612574401; expires=Mon, 08-Mar-21 01:20:01 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612324980', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-s0ld/Dvp7Q01gQ2gs/shmGjHA3Q"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685bb21000073ad78a02000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=o6eMyINVn%2BCsrv%2FFT7pgyjRCFy076JXNBmljwOEUOISxXAE9UtxctgowS%2B6zfoJ3YfetA3IDZURKmrBeo9U8n%2FTll5KgdIk2w9CmMc4ENnBlGKTIADh7fPWHd3F9"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bd82c5973ad-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 29,
  "title": "iusto eius quod necessitatibus culpa ea",
  "body": "odit magnam ut saepe sed non qui\ntempora atque nihil\naccusamus illum doloribus illo dolor\neligendi repudiandae odit magni similique sed cum maiores"
} 
 </msg>
<msg timestamp="20210205 20:20:00.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.886" endtime="20210205 20:20:00.095"></status>
</kw>
<msg timestamp="20210205 20:20:00.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:19:59.883" endtime="20210205 20:20:00.095"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:00.097" endtime="20210205 20:20:00.099"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.096" endtime="20210205 20:20:00.099"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.095" endtime="20210205 20:20:00.099"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:00.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.100" endtime="20210205 20:20:00.100"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.099" endtime="20210205 20:20:00.101"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.101" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:00.101" endtime="20210205 20:20:00.101"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.173" level="INFO">${idvalue} = [29]</msg>
<status status="PASS" starttime="20210205 20:20:00.102" endtime="20210205 20:20:00.173"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:00.174" level="INFO">${responseid} = 29</msg>
<status status="PASS" starttime="20210205 20:20:00.173" endtime="20210205 20:20:00.174"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:00.174" endtime="20210205 20:20:00.175"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.175" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:00.175" endtime="20210205 20:20:00.175"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.101" endtime="20210205 20:20:00.176"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:59.883" endtime="20210205 20:20:00.176"></status>
</kw>
<kw name="${postid} = 30" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:00.177" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:00.177" endtime="20210205 20:20:00.178"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:00.343" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/30 
 path_url=/posts/30 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:00.343" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/30 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:01 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d1f1f72d51e49f57e80c8e00bbf0c6b041612574401; expires=Mon, 08-Mar-21 01:20:01 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '746', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-p/fED6+/tICtAVNeMV6EIhtgIes"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685bc2e0000ea4017962000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=fGNfDVWvKTvGkrHuFIiL1A0W4xgIugnsnsO7%2BogDwKfl%2B9aq7aImzFhT0KYzpzjslh45r6BGsxZj17inwKim4e%2BQD3iQhGwKVBiaz7pIvuY7bfz9y3k6MC%2BN0a6R"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bd9eac5ea40-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 3,
  "id": 30,
  "title": "a quo magni similique perferendis",
  "body": "alias dolor cumque\nimpedit blanditiis non eveniet odio maxime\nblanditiis amet eius quis tempora quia autem rem\na provident perspiciatis quia"
} 
 </msg>
<msg timestamp="20210205 20:20:00.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.178" endtime="20210205 20:20:00.344"></status>
</kw>
<msg timestamp="20210205 20:20:00.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.176" endtime="20210205 20:20:00.344"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:00.347" endtime="20210205 20:20:00.350"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.346" endtime="20210205 20:20:00.350"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.345" endtime="20210205 20:20:00.350"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:00.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.352" endtime="20210205 20:20:00.352"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.351" endtime="20210205 20:20:00.353"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.354" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:00.354" endtime="20210205 20:20:00.354"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.416" level="INFO">${idvalue} = [30]</msg>
<status status="PASS" starttime="20210205 20:20:00.354" endtime="20210205 20:20:00.416"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:00.417" level="INFO">${responseid} = 30</msg>
<status status="PASS" starttime="20210205 20:20:00.416" endtime="20210205 20:20:00.417"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:00.417" endtime="20210205 20:20:00.418"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.418" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:00.418" endtime="20210205 20:20:00.418"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.353" endtime="20210205 20:20:00.418"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.176" endtime="20210205 20:20:00.418"></status>
</kw>
<kw name="${postid} = 31" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:00.419" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:00.419" endtime="20210205 20:20:00.420"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:00.580" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/31 
 path_url=/posts/31 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:00.580" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/31 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:01 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d67eb7d37b13969778ee562953b5b27281612574401; expires=Mon, 08-Mar-21 01:20:01 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '729', 'X-Ratelimit-Reset': '1611749160', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"114-fvaKvcE5R6RW/jKcF4ij0mXJXnI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685bd32000025ed2db62000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=de86%2FF8NEr5HdoEW2OAoE9b2QOHcLm8l4XtOS2mOWFMb%2FNMcTk6dGekbLVJ%2BaTzvLpRlWLg%2BPHQsJkkZmNVEH%2FUgzfK9f9zgYOQhxSD42WrkE0GRa3qjKUHoFzDf"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bdb895825ed-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 31,
  "title": "ullam ut quidem id aut vel consequuntur",
  "body": "debitis eius sed quibusdam non quis consectetur vitae\nimpedit ut qui consequatur sed aut in\nquidem sit nostrum et maiores adipisci atque\nquaerat voluptatem adipisci repudiandae"
} 
 </msg>
<msg timestamp="20210205 20:20:00.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.420" endtime="20210205 20:20:00.581"></status>
</kw>
<msg timestamp="20210205 20:20:00.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.418" endtime="20210205 20:20:00.581"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:00.584" endtime="20210205 20:20:00.587"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.583" endtime="20210205 20:20:00.587"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.582" endtime="20210205 20:20:00.587"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:00.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.589" endtime="20210205 20:20:00.589"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.587" endtime="20210205 20:20:00.589"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.591" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:00.590" endtime="20210205 20:20:00.591"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.718" level="INFO">${idvalue} = [31]</msg>
<status status="PASS" starttime="20210205 20:20:00.591" endtime="20210205 20:20:00.718"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:00.719" level="INFO">${responseid} = 31</msg>
<status status="PASS" starttime="20210205 20:20:00.718" endtime="20210205 20:20:00.719"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:00.720" endtime="20210205 20:20:00.720"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.721" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:00.721" endtime="20210205 20:20:00.721"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.590" endtime="20210205 20:20:00.722"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.418" endtime="20210205 20:20:00.722"></status>
</kw>
<kw name="${postid} = 32" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:00.724" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:00.724" endtime="20210205 20:20:00.725"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:00.764" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/32 
 path_url=/posts/32 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:00.764" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/32 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:02 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d82c95daffa33cc470739b46df9d55da41612574402; expires=Mon, 08-Mar-21 01:20:02 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '978', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"118-gU6x6yKuGnLxOVfx4b/csDm80xc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685bdee0000e0da9c981000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=13uWi5W%2B4pQZLv5pMCSlVZD5jk5g9dWPPXgu1e101YTIwBu3Nk2N8mhnXKZQqtJO4nH%2BRfeC1kRsxfDxJF3rinQ%2FJW2g6arIs3u9Veno7g8yQj5BT1T5HpALNm2i"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bdcbacee0da-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 32,
  "title": "doloremque illum aliquid sunt",
  "body": "deserunt eos nobis asperiores et hic\nest debitis repellat molestiae optio\nnihil ratione ut eos beatae quibusdam distinctio maiores\nearum voluptates et aut adipisci ea maiores voluptas maxime"
} 
 </msg>
<msg timestamp="20210205 20:20:00.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.725" endtime="20210205 20:20:00.764"></status>
</kw>
<msg timestamp="20210205 20:20:00.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.722" endtime="20210205 20:20:00.765"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:00.767" endtime="20210205 20:20:00.769"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.766" endtime="20210205 20:20:00.769"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.765" endtime="20210205 20:20:00.769"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:00.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.770" endtime="20210205 20:20:00.771"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.769" endtime="20210205 20:20:00.771"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.772" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:00.771" endtime="20210205 20:20:00.772"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.831" level="INFO">${idvalue} = [32]</msg>
<status status="PASS" starttime="20210205 20:20:00.772" endtime="20210205 20:20:00.831"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:00.832" level="INFO">${responseid} = 32</msg>
<status status="PASS" starttime="20210205 20:20:00.831" endtime="20210205 20:20:00.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:00.832" endtime="20210205 20:20:00.832"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.832" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:00.832" endtime="20210205 20:20:00.833"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.771" endtime="20210205 20:20:00.833"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.722" endtime="20210205 20:20:00.833"></status>
</kw>
<kw name="${postid} = 33" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:00.834" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:00.834" endtime="20210205 20:20:00.834"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:00.878" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/33 
 path_url=/posts/33 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:00.878" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/33 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:02 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbd5160a143e8c7e389abd6bb5693d1781612574402; expires=Mon, 08-Mar-21 01:20:02 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '972', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e4-eJS5AAgYswVFXcpPGUc/6yS0JGs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685be5f0000c1d97883a000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zzOFCXHg%2BCMzA5LlQNFHknBF6a6BBC2PS5PPY0PUFag7nk3lkC4UsoC5MULTmACzIPHHn6ah%2FYQc7Qzk60fsG3oqrqzRiSqaqmIQbHiPqs1hM4wnPXb%2FiaxZs1GP"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bdd6a6ec1d9-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 33,
  "title": "qui explicabo molestiae dolorem",
  "body": "rerum ut et numquam laborum odit est sit\nid qui sint in\nquasi tenetur tempore aperiam et quaerat qui in\nrerum officiis sequi cumque quod"
} 
 </msg>
<msg timestamp="20210205 20:20:00.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.835" endtime="20210205 20:20:00.878"></status>
</kw>
<msg timestamp="20210205 20:20:00.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.833" endtime="20210205 20:20:00.879"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:00.881" endtime="20210205 20:20:00.884"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.880" endtime="20210205 20:20:00.884"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.879" endtime="20210205 20:20:00.884"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:00.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.885" endtime="20210205 20:20:00.886"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.884" endtime="20210205 20:20:00.886"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.888" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:00.887" endtime="20210205 20:20:00.888"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.953" level="INFO">${idvalue} = [33]</msg>
<status status="PASS" starttime="20210205 20:20:00.889" endtime="20210205 20:20:00.953"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:00.954" level="INFO">${responseid} = 33</msg>
<status status="PASS" starttime="20210205 20:20:00.953" endtime="20210205 20:20:00.954"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:00.954" endtime="20210205 20:20:00.954"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:00.955" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:00.954" endtime="20210205 20:20:00.955"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.887" endtime="20210205 20:20:00.955"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.833" endtime="20210205 20:20:00.955"></status>
</kw>
<kw name="${postid} = 34" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:00.956" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:00.956" endtime="20210205 20:20:00.956"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:00.998" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/34 
 path_url=/posts/34 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:00.998" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/34 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:02 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db7df7b89580ac2a3d8be4703155c76711612574402; expires=Mon, 08-Mar-21 01:20:02 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '972', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"125-Vy2bCExpJwbgL2QLF7SvYE5QZaQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685bed80000295ed89c7000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aVw%2FNZl1fKODPjOuql%2BIue9iAtNoB3fH35FbToSL%2Fj%2Bv%2BPai4dsaqPMsBiqKyoSZSC6FBJZq1AG1OyGuZMlYReITP6T01kH3v55BIH6DGEhgZZfb%2FEVNLPT3BBIQ"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bde2e0c295e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 34,
  "title": "magnam ut rerum iure",
  "body": "ea velit perferendis earum ut voluptatem voluptate itaque iusto\ntotam pariatur in\nnemo voluptatem voluptatem autem magni tempora minima in\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis"
} 
 </msg>
<msg timestamp="20210205 20:20:00.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.957" endtime="20210205 20:20:00.999"></status>
</kw>
<msg timestamp="20210205 20:20:01.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:00.955" endtime="20210205 20:20:01.000"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.002" endtime="20210205 20:20:01.005"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.001" endtime="20210205 20:20:01.005"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.000" endtime="20210205 20:20:01.006"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.007" endtime="20210205 20:20:01.008"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.006" endtime="20210205 20:20:01.008"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.009" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.009" endtime="20210205 20:20:01.009"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.078" level="INFO">${idvalue} = [34]</msg>
<status status="PASS" starttime="20210205 20:20:01.010" endtime="20210205 20:20:01.078"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:01.079" level="INFO">${responseid} = 34</msg>
<status status="PASS" starttime="20210205 20:20:01.078" endtime="20210205 20:20:01.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.079" endtime="20210205 20:20:01.079"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.079" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.079" endtime="20210205 20:20:01.080"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.008" endtime="20210205 20:20:01.080"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:00.955" endtime="20210205 20:20:01.080"></status>
</kw>
<kw name="${postid} = 35" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.081" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:01.081" endtime="20210205 20:20:01.081"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:01.123" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/35 
 path_url=/posts/35 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:01.124" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/35 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:02 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5de3f893273b47d323f221a70f7e24381612574402; expires=Mon, 08-Mar-21 01:20:02 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '970', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11b-iEiJpVAW3iKhqKkCM+WpQc2jSXM"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685bf540000c1de1b3e7000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Wjs3rc3MNG417SrKUyjbh%2BS%2FwPX1BlwjrLD1B1gJDXR7ObO6AHiZ3M2YekYoxFwOyLk7m4C5OKhSbmDydaRnAhhrXl%2FCWiV84JT559Q67g8AvZLflMYzuMsREoVq"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bdee975c1de-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 35,
  "title": "id nihil consequatur molestias animi provident",
  "body": "nisi error delectus possimus ut eligendi vitae\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\nmodi ducimus quo illum voluptas eligendi\net nobis quia fugit"
} 
 </msg>
<msg timestamp="20210205 20:20:01.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.081" endtime="20210205 20:20:01.124"></status>
</kw>
<msg timestamp="20210205 20:20:01.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.080" endtime="20210205 20:20:01.125"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.127" endtime="20210205 20:20:01.130"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.126" endtime="20210205 20:20:01.130"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.125" endtime="20210205 20:20:01.130"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.132" endtime="20210205 20:20:01.132"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.131" endtime="20210205 20:20:01.133"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.134" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.134" endtime="20210205 20:20:01.134"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.198" level="INFO">${idvalue} = [35]</msg>
<status status="PASS" starttime="20210205 20:20:01.134" endtime="20210205 20:20:01.198"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:01.199" level="INFO">${responseid} = 35</msg>
<status status="PASS" starttime="20210205 20:20:01.198" endtime="20210205 20:20:01.199"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.199" endtime="20210205 20:20:01.200"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.200" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.200" endtime="20210205 20:20:01.201"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.133" endtime="20210205 20:20:01.201"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.080" endtime="20210205 20:20:01.201"></status>
</kw>
<kw name="${postid} = 36" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.202" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:01.202" endtime="20210205 20:20:01.202"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:01.240" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/36 
 path_url=/posts/36 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:01.240" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/36 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:02 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d946a51e982eaaabeb82fcb8d7ae65f251612574402; expires=Mon, 08-Mar-21 01:20:02 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '969', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"137-0d4vuWkf3JGVhfhGGDlsOUqEBTg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685bfca00000dde3da8a000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=FYsDYUaztAoUg4lvP6pdJuIHN6fVZMHnZ%2FZ%2F7q6Mv7athwJPGmRccqP4%2B58D79WlONUSOF5KDjue%2BNu1UAAHPK4Ulzih7zbPb34dcmJnuozG5LKI26XQdnZp%2B0D0"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bdfa8da0dde-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 36,
  "title": "fuga nam accusamus voluptas reiciendis itaque",
  "body": "ad mollitia et omnis minus architecto odit\nvoluptas doloremque maxime aut non ipsa qui alias veniam\nblanditiis culpa aut quia nihil cumque facere et occaecati\nqui aspernatur quia eaque ut aperiam inventore"
} 
 </msg>
<msg timestamp="20210205 20:20:01.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.202" endtime="20210205 20:20:01.241"></status>
</kw>
<msg timestamp="20210205 20:20:01.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.201" endtime="20210205 20:20:01.242"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.244" endtime="20210205 20:20:01.247"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.243" endtime="20210205 20:20:01.248"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.242" endtime="20210205 20:20:01.248"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.249" endtime="20210205 20:20:01.250"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.248" endtime="20210205 20:20:01.250"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.252" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.251" endtime="20210205 20:20:01.252"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.314" level="INFO">${idvalue} = [36]</msg>
<status status="PASS" starttime="20210205 20:20:01.252" endtime="20210205 20:20:01.314"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:01.315" level="INFO">${responseid} = 36</msg>
<status status="PASS" starttime="20210205 20:20:01.315" endtime="20210205 20:20:01.315"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.315" endtime="20210205 20:20:01.316"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.316" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.316" endtime="20210205 20:20:01.316"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.250" endtime="20210205 20:20:01.316"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.201" endtime="20210205 20:20:01.316"></status>
</kw>
<kw name="${postid} = 37" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.318" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:01.317" endtime="20210205 20:20:01.318"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:01.422" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/37 
 path_url=/posts/37 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:01.422" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/37 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:02 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7831bd04a776bb900b2904c3c129396a1612574402; expires=Mon, 08-Mar-21 01:20:02 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612411377', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10d-xivyKLJTyyTwJlVChjsxbkyN93k"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685c0630000e0ca3db45000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=WDvB4dNOVSD7eGeaPHP%2BnAe5cyH6%2FFSp%2BX0J9C926okK3qbPs66BxxL6ESD898FzRKjH%2F%2FbnR2xR4ZHBeUJP6SWJzhVyQzz%2FnF%2B2KGBMO5ZUv%2BFP%2FH80YHMv7c43"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10be06b3ae0ca-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 37,
  "title": "provident vel ut sit ratione est",
  "body": "debitis et eaque non officia sed nesciunt pariatur vel\nvoluptatem iste vero et ea\nnumquam aut expedita ipsum nulla in\nvoluptates omnis consequatur aut enim officiis in quam qui"
} 
 </msg>
<msg timestamp="20210205 20:20:01.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.318" endtime="20210205 20:20:01.422"></status>
</kw>
<msg timestamp="20210205 20:20:01.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.317" endtime="20210205 20:20:01.423"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.425" endtime="20210205 20:20:01.428"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.424" endtime="20210205 20:20:01.428"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.423" endtime="20210205 20:20:01.429"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.430" endtime="20210205 20:20:01.431"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.429" endtime="20210205 20:20:01.431"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.432" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.432" endtime="20210205 20:20:01.432"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.494" level="INFO">${idvalue} = [37]</msg>
<status status="PASS" starttime="20210205 20:20:01.433" endtime="20210205 20:20:01.494"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:01.495" level="INFO">${responseid} = 37</msg>
<status status="PASS" starttime="20210205 20:20:01.494" endtime="20210205 20:20:01.495"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.495" endtime="20210205 20:20:01.495"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.496" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.496" endtime="20210205 20:20:01.496"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.431" endtime="20210205 20:20:01.496"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.316" endtime="20210205 20:20:01.496"></status>
</kw>
<kw name="${postid} = 38" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.497" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:01.497" endtime="20210205 20:20:01.498"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:01.553" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/38 
 path_url=/posts/38 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:01.553" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/38 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:02 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df09cfdd35f04f4c6a514ea415926d42c1612574402; expires=Mon, 08-Mar-21 01:20:02 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '967', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"13a-HzjuaEKBfsU2W89T3U0Yxx0R1zE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c0f20000c1bbc4931000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=VfbnVtOwcQ4LyD%2BJdljzQiYOAJqtoUbHP3%2FvBlN3YV1vdlYyHl4M%2FhIdiklEmcPGH%2Fzwdth8k1xpRL%2BApQP2U3Czy%2B2%2FYFnCaUgUHoPN6k%2BvubqhVJW%2B2%2FkS67je"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10be18e1cc1bb-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 38,
  "title": "explicabo et eos deleniti nostrum ab id repellendus",
  "body": "animi esse sit aut sit nesciunt assumenda eum voluptas\nquia voluptatibus provident quia necessitatibus ea\nrerum repudiandae quia voluptatem delectus fugit aut id quia\nratione optio eos iusto veniam iure"
} 
 </msg>
<msg timestamp="20210205 20:20:01.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.498" endtime="20210205 20:20:01.554"></status>
</kw>
<msg timestamp="20210205 20:20:01.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.496" endtime="20210205 20:20:01.554"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.557" endtime="20210205 20:20:01.560"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.556" endtime="20210205 20:20:01.560"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.555" endtime="20210205 20:20:01.560"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.562" endtime="20210205 20:20:01.563"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.561" endtime="20210205 20:20:01.563"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.564" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.564" endtime="20210205 20:20:01.564"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.634" level="INFO">${idvalue} = [38]</msg>
<status status="PASS" starttime="20210205 20:20:01.564" endtime="20210205 20:20:01.634"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:01.635" level="INFO">${responseid} = 38</msg>
<status status="PASS" starttime="20210205 20:20:01.635" endtime="20210205 20:20:01.635"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.636" endtime="20210205 20:20:01.636"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.637" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.636" endtime="20210205 20:20:01.637"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.563" endtime="20210205 20:20:01.637"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.496" endtime="20210205 20:20:01.637"></status>
</kw>
<kw name="${postid} = 39" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.639" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:01.639" endtime="20210205 20:20:01.640"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:01.682" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/39 
 path_url=/posts/39 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:01.682" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/39 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:02 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da72df1cfa5d5b261a60ff0b3c507043d1612574402; expires=Mon, 08-Mar-21 01:20:02 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '966', 'X-Ratelimit-Reset': '1611283708', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11e-UefH5pVf0iJOGuchVJ4dBA7q9aw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c18100002520541df000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=07hfOZyZ3JPWbISVUqDSXZmUeqWhKenyrDGUYjX6qHCGoFudMiS2UE9wTITm2ZSOfT%2BqjpGueqSgz7fy%2BRE1QYhl7FP9R82mkhruVwlPUPCtqqUVwGJMFZfIKbBV"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10be26f932520-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 39,
  "title": "eos dolorem iste accusantium est eaque quam",
  "body": "corporis rerum ducimus vel eum accusantium\nmaxime aspernatur a porro possimus iste omnis\nest in deleniti asperiores fuga aut\nvoluptas sapiente vel dolore minus voluptatem incidunt ex"
} 
 </msg>
<msg timestamp="20210205 20:20:01.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.640" endtime="20210205 20:20:01.683"></status>
</kw>
<msg timestamp="20210205 20:20:01.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.638" endtime="20210205 20:20:01.683"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.686" endtime="20210205 20:20:01.689"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.685" endtime="20210205 20:20:01.689"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.684" endtime="20210205 20:20:01.689"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.691" endtime="20210205 20:20:01.692"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.690" endtime="20210205 20:20:01.692"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.693" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.693" endtime="20210205 20:20:01.693"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.764" level="INFO">${idvalue} = [39]</msg>
<status status="PASS" starttime="20210205 20:20:01.693" endtime="20210205 20:20:01.764"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:01.765" level="INFO">${responseid} = 39</msg>
<status status="PASS" starttime="20210205 20:20:01.764" endtime="20210205 20:20:01.765"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.766" endtime="20210205 20:20:01.766"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.767" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.766" endtime="20210205 20:20:01.767"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.692" endtime="20210205 20:20:01.768"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.637" endtime="20210205 20:20:01.768"></status>
</kw>
<kw name="${postid} = 40" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.770" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:01.769" endtime="20210205 20:20:01.770"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:01.831" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/40 
 path_url=/posts/40 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:01.832" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/40 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:03 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d05989121f966e4ef0f4fc94f6ed398c61612574403; expires=Mon, 08-Mar-21 01:20:03 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '966', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f4-I7RG0h0Rd47Iq9Rj+KpOcUnz3RA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685c208000073ddbbb40000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=eU5s6ib7coR3W63krSbiTzMQHPmBB66xVt2Xvep9P5zeMmqC9G%2FLgqXPxPfSWuUC8irw%2B4d2U6ML32BOyvIi4DdGx3buXv2qj%2BRZywrXHITRZBcgt18SVCM8rFhw"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10be3487173dd-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 4,
  "id": 40,
  "title": "enim quo cumque",
  "body": "ut voluptatum aliquid illo tenetur nemo sequi quo facilis\nipsum rem optio mollitia quas\nvoluptatem eum voluptas qui\nunde omnis voluptatem iure quasi maxime voluptas nam"
} 
 </msg>
<msg timestamp="20210205 20:20:01.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.771" endtime="20210205 20:20:01.832"></status>
</kw>
<msg timestamp="20210205 20:20:01.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.768" endtime="20210205 20:20:01.833"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.835" endtime="20210205 20:20:01.838"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.834" endtime="20210205 20:20:01.838"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.833" endtime="20210205 20:20:01.839"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.840" endtime="20210205 20:20:01.841"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.839" endtime="20210205 20:20:01.841"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.842" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.842" endtime="20210205 20:20:01.842"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.914" level="INFO">${idvalue} = [40]</msg>
<status status="PASS" starttime="20210205 20:20:01.843" endtime="20210205 20:20:01.914"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:01.915" level="INFO">${responseid} = 40</msg>
<status status="PASS" starttime="20210205 20:20:01.914" endtime="20210205 20:20:01.915"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.915" endtime="20210205 20:20:01.916"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.916" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.916" endtime="20210205 20:20:01.916"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.841" endtime="20210205 20:20:01.917"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.768" endtime="20210205 20:20:01.917"></status>
</kw>
<kw name="${postid} = 41" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.919" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:01.918" endtime="20210205 20:20:01.919"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:01.961" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/41 
 path_url=/posts/41 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:01.961" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/41 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:03 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc253d187dd0c646f025988d1371b94e11612574403; expires=Mon, 08-Mar-21 01:20:03 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '964', 'X-Ratelimit-Reset': '1611283708', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"100-Q8c9gEwMpBLWIJsW0KobJ16pdlE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685c29c000074974d311000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=TVi89Iv8qLz7MMlrzGhHo9n38rNStz4GU6my6d%2BXKf5SxZWiH044pbfg8fWguwhwMZQHyLgzouvEIa5g%2FkpV6yCyNP8r6QNWyJvJAuIscsps0Kv2cJO3KXhZ9VdV"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10be42d3a7497-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 41,
  "title": "non est facere",
  "body": "molestias id nostrum\nexcepturi molestiae dolore omnis repellendus quaerat saepe\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\nnam quidem est ducimus sunt debitis saepe"
} 
 </msg>
<msg timestamp="20210205 20:20:01.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.920" endtime="20210205 20:20:01.962"></status>
</kw>
<msg timestamp="20210205 20:20:01.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.917" endtime="20210205 20:20:01.962"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:01.965" endtime="20210205 20:20:01.967"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.963" endtime="20210205 20:20:01.968"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.963" endtime="20210205 20:20:01.968"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:01.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:01.969" endtime="20210205 20:20:01.970"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.968" endtime="20210205 20:20:01.970"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:01.971" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:01.971" endtime="20210205 20:20:01.971"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.033" level="INFO">${idvalue} = [41]</msg>
<status status="PASS" starttime="20210205 20:20:01.972" endtime="20210205 20:20:02.033"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:02.033" level="INFO">${responseid} = 41</msg>
<status status="PASS" starttime="20210205 20:20:02.033" endtime="20210205 20:20:02.033"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.034" endtime="20210205 20:20:02.034"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.034" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.034" endtime="20210205 20:20:02.034"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.970" endtime="20210205 20:20:02.035"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:01.917" endtime="20210205 20:20:02.035"></status>
</kw>
<kw name="${postid} = 42" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.037" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:02.037" endtime="20210205 20:20:02.038"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:02.085" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/42 
 path_url=/posts/42 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:02.085" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/42 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:03 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d479bee2b7b7d84f5da6430d24db5b2ae1612574403; expires=Mon, 08-Mar-21 01:20:03 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612405316', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"131-uHddi0mgHIPmmzZ13FEZKREc9o4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '26749', 'cf-request-id': '081685c318000037f3049e8000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=qDxZopbLxV8KAeF5zvHaWZ1MS14srCjGHQnt3RveFaHRToY5Gs8S0UDRQOr3j0bKPmSZF%2Bzbq9j8xfUx0lyQ8miR1tqBJZhTRGvYX%2BeuiD%2FskKsOBZfKF%2Fw9cQtf"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10be4f82537f3-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 42,
  "title": "commodi ullam sint et excepturi error explicabo praesentium voluptas",
  "body": "odio fugit voluptatum ducimus earum autem est incidunt voluptatem\nodit reiciendis aliquam sunt sequi nulla dolorem\nnon facere repellendus voluptates quia\nratione harum vitae ut"
} 
 </msg>
<msg timestamp="20210205 20:20:02.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.038" endtime="20210205 20:20:02.086"></status>
</kw>
<msg timestamp="20210205 20:20:02.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.035" endtime="20210205 20:20:02.086"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.089" endtime="20210205 20:20:02.092"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.088" endtime="20210205 20:20:02.092"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.087" endtime="20210205 20:20:02.092"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.094" endtime="20210205 20:20:02.094"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.093" endtime="20210205 20:20:02.095"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.096" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.096" endtime="20210205 20:20:02.096"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.164" level="INFO">${idvalue} = [42]</msg>
<status status="PASS" starttime="20210205 20:20:02.096" endtime="20210205 20:20:02.164"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:02.165" level="INFO">${responseid} = 42</msg>
<status status="PASS" starttime="20210205 20:20:02.165" endtime="20210205 20:20:02.166"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.166" endtime="20210205 20:20:02.166"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.167" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.167" endtime="20210205 20:20:02.167"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.095" endtime="20210205 20:20:02.167"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.035" endtime="20210205 20:20:02.167"></status>
</kw>
<kw name="${postid} = 43" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.169" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:02.169" endtime="20210205 20:20:02.169"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:02.231" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/43 
 path_url=/posts/43 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:02.232" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/43 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:03 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0888ee171bbba46494f21e46f27b158f1612574403; expires=Mon, 08-Mar-21 01:20:03 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '965', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"149-CIe5MorMt/6eiC+lMhHtDjhofck"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685c3a4000074c78511c000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=YhcHgIML0tf6ADcohOpihux1Uhxr%2FqOYH1cCdaVHJ2NHVohhB3crWuWyNUFfB9deXJcXEPe9W3UXTYS6UoFtPrfyFVfjJCjL0tYSKKYTFQisMDrT3XJHFCBim0Ik"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10be5dd6c74c7-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 43,
  "title": "eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis",
  "body": "similique fugit est\nillum et dolorum harum et voluptate eaque quidem\nexercitationem quos nam commodi possimus cum odio nihil nulla\ndolorum exercitationem magnam ex et a et distinctio debitis"
} 
 </msg>
<msg timestamp="20210205 20:20:02.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.169" endtime="20210205 20:20:02.232"></status>
</kw>
<msg timestamp="20210205 20:20:02.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.168" endtime="20210205 20:20:02.233"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.235" endtime="20210205 20:20:02.238"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.234" endtime="20210205 20:20:02.238"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.233" endtime="20210205 20:20:02.239"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.240" endtime="20210205 20:20:02.241"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.239" endtime="20210205 20:20:02.241"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.242" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.242" endtime="20210205 20:20:02.242"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.314" level="INFO">${idvalue} = [43]</msg>
<status status="PASS" starttime="20210205 20:20:02.243" endtime="20210205 20:20:02.314"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:02.315" level="INFO">${responseid} = 43</msg>
<status status="PASS" starttime="20210205 20:20:02.315" endtime="20210205 20:20:02.315"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.316" endtime="20210205 20:20:02.316"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.317" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.316" endtime="20210205 20:20:02.317"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.241" endtime="20210205 20:20:02.317"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.168" endtime="20210205 20:20:02.317"></status>
</kw>
<kw name="${postid} = 44" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.319" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:02.319" endtime="20210205 20:20:02.320"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:02.366" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/44 
 path_url=/posts/44 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:02.366" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/44 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:03 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7aef5b8c463a4e0162315cf84c1d4ce51612574403; expires=Mon, 08-Mar-21 01:20:03 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '964', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f9-qeEI4xhxJyQd+h1AmBEbRcZU5LE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c430000073d9ca378000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=RmLSh4Ou72J0S3vcyKi3%2FACLADZWTPOH7d83u9D3K2aUgel12gi2sT3k%2FBZn96Xml39lIKEArhyaaMpUUoY%2B9VsrpTzbyxVjpCXz04oUtj5XX9fzyWKL1Ix6oCj4"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10be6bb4c73d9-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 44,
  "title": "optio dolor molestias sit",
  "body": "temporibus est consectetur dolore\net libero debitis vel velit laboriosam quia\nipsum quibusdam qui itaque fuga rem aut\nea et iure quam sed maxime ut distinctio quae"
} 
 </msg>
<msg timestamp="20210205 20:20:02.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.320" endtime="20210205 20:20:02.366"></status>
</kw>
<msg timestamp="20210205 20:20:02.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.317" endtime="20210205 20:20:02.367"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.370" endtime="20210205 20:20:02.373"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.368" endtime="20210205 20:20:02.373"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.367" endtime="20210205 20:20:02.373"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.374" endtime="20210205 20:20:02.375"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.373" endtime="20210205 20:20:02.375"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.377" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.376" endtime="20210205 20:20:02.377"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.449" level="INFO">${idvalue} = [44]</msg>
<status status="PASS" starttime="20210205 20:20:02.377" endtime="20210205 20:20:02.450"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:02.451" level="INFO">${responseid} = 44</msg>
<status status="PASS" starttime="20210205 20:20:02.450" endtime="20210205 20:20:02.451"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.451" endtime="20210205 20:20:02.452"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.452" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.452" endtime="20210205 20:20:02.452"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.375" endtime="20210205 20:20:02.452"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.317" endtime="20210205 20:20:02.453"></status>
</kw>
<kw name="${postid} = 45" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.454" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:02.454" endtime="20210205 20:20:02.455"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:02.506" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/45 
 path_url=/posts/45 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:02.506" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/45 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:03 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d01fb72ca312c42950044a85aac0635031612574403; expires=Mon, 08-Mar-21 01:20:03 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '963', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ed-rWKwMfMntbkO4fMbZo0ZEINfI8c"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c4b2000073e93889d000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=lmR1ewBFladYQWtiECdzlLRimt6xablOMGaIQsqUinFpPqc9JjVPDTJuAJA0ann0Vd1nB9v7uoi3jIT%2F2pkJvePQ87sG8iipx2GFi%2BOQ%2FpGBZ0owlw5pgaPLkCxd"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10be78bc973e9-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 45,
  "title": "ut numquam possimus omnis eius suscipit laudantium iure",
  "body": "est natus reiciendis nihil possimus aut provident\nex et dolor\nrepellat pariatur est\nnobis rerum repellendus dolorem autem"
} 
 </msg>
<msg timestamp="20210205 20:20:02.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.455" endtime="20210205 20:20:02.506"></status>
</kw>
<msg timestamp="20210205 20:20:02.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.453" endtime="20210205 20:20:02.507"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.509" endtime="20210205 20:20:02.512"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.508" endtime="20210205 20:20:02.512"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.507" endtime="20210205 20:20:02.513"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.514" endtime="20210205 20:20:02.515"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.513" endtime="20210205 20:20:02.515"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.517" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.516" endtime="20210205 20:20:02.517"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.588" level="INFO">${idvalue} = [45]</msg>
<status status="PASS" starttime="20210205 20:20:02.517" endtime="20210205 20:20:02.588"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:02.589" level="INFO">${responseid} = 45</msg>
<status status="PASS" starttime="20210205 20:20:02.588" endtime="20210205 20:20:02.589"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.589" endtime="20210205 20:20:02.590"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.590" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.590" endtime="20210205 20:20:02.590"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.515" endtime="20210205 20:20:02.591"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.453" endtime="20210205 20:20:02.591"></status>
</kw>
<kw name="${postid} = 46" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.592" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:02.592" endtime="20210205 20:20:02.593"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:02.647" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/46 
 path_url=/posts/46 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:02.647" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/46 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:03 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d65bd5d0c9fc84f5fed5caa6bd8fcad721612574403; expires=Mon, 08-Mar-21 01:20:03 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '962', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d0-OhfTd80AsvDHSFm9T0Fi068MWcY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c53e0000cee896125000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=aWZbnBTQblonYjmnTW6bYSxXpgE95WuDaJZZO7N3kNlCCN7N50JjS0TgVsU%2FjBxrIl9RMhyNvfCPu1fhpOWCSBowvgq%2BvPh%2F4SW%2FPJJPLMgrlykE4RJL0ZkCHaqo"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10be86cfacee8-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 46,
  "title": "aut quo modi neque nostrum ducimus",
  "body": "voluptatem quisquam iste\nvoluptatibus natus officiis facilis dolorem\nquis quas ipsam\nvel et voluptatum in aliquid"
} 
 </msg>
<msg timestamp="20210205 20:20:02.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.593" endtime="20210205 20:20:02.648"></status>
</kw>
<msg timestamp="20210205 20:20:02.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.591" endtime="20210205 20:20:02.648"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.651" endtime="20210205 20:20:02.654"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.650" endtime="20210205 20:20:02.654"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.649" endtime="20210205 20:20:02.654"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.655" endtime="20210205 20:20:02.656"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.654" endtime="20210205 20:20:02.656"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.658" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.657" endtime="20210205 20:20:02.658"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.728" level="INFO">${idvalue} = [46]</msg>
<status status="PASS" starttime="20210205 20:20:02.658" endtime="20210205 20:20:02.728"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:02.729" level="INFO">${responseid} = 46</msg>
<status status="PASS" starttime="20210205 20:20:02.728" endtime="20210205 20:20:02.729"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.729" endtime="20210205 20:20:02.730"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.730" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.730" endtime="20210205 20:20:02.730"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.657" endtime="20210205 20:20:02.731"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.591" endtime="20210205 20:20:02.731"></status>
</kw>
<kw name="${postid} = 47" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.733" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:02.732" endtime="20210205 20:20:02.733"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:02.781" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/47 
 path_url=/posts/47 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:02.781" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/47 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2d835a2fc0e5fd590c2b4c44d828851e1612574404; expires=Mon, 08-Mar-21 01:20:04 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '956', 'X-Ratelimit-Reset': '1611704501', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"109-s96ANlpy6qW0Y5CU7Xc8LI9hFKE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685c5ce0000ea598838f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=LkUoENvx0Pn2wNftM8KR8n6ff42Z%2Fx2iGfbHdqZYwMZwT%2FtHgqua0wFgdMvRR68OX68JRok6hx9UC%2FZjHBU%2B%2FR%2FVo%2BH8L9gsvDtP7SjUjKRBz3UKll5oMlL0R6DW"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10be94d9bea59-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 47,
  "title": "quibusdam cumque rem aut deserunt",
  "body": "voluptatem assumenda ut qui ut cupiditate aut impedit veniam\noccaecati nemo illum voluptatem laudantium\nmolestiae beatae rerum ea iure soluta nostrum\neligendi et voluptate"
} 
 </msg>
<msg timestamp="20210205 20:20:02.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.733" endtime="20210205 20:20:02.782"></status>
</kw>
<msg timestamp="20210205 20:20:02.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.731" endtime="20210205 20:20:02.782"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.785" endtime="20210205 20:20:02.788"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.784" endtime="20210205 20:20:02.788"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.783" endtime="20210205 20:20:02.788"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.790" endtime="20210205 20:20:02.790"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.789" endtime="20210205 20:20:02.791"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.792" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.792" endtime="20210205 20:20:02.792"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.860" level="INFO">${idvalue} = [47]</msg>
<status status="PASS" starttime="20210205 20:20:02.792" endtime="20210205 20:20:02.860"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:02.861" level="INFO">${responseid} = 47</msg>
<status status="PASS" starttime="20210205 20:20:02.860" endtime="20210205 20:20:02.861"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.861" endtime="20210205 20:20:02.862"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.862" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.862" endtime="20210205 20:20:02.862"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.791" endtime="20210205 20:20:02.863"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.731" endtime="20210205 20:20:02.863"></status>
</kw>
<kw name="${postid} = 48" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.865" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:02.864" endtime="20210205 20:20:02.865"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:02.910" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/48 
 path_url=/posts/48 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:02.910" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/48 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d4e3c4f02f632e59cd3ad97619d3155621612574404; expires=Mon, 08-Mar-21 01:20:04 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '961', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"107-td+hSQ4ZRU5RdRcCg9ZABJ7WwQI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c65000000d721a043000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=GQDr6RGIlW19zzut8wT5bpr3t2E0PoUeTst5jH73VUK6RF0eCEldqnv1Y7EmVN5uvZPL5LuRV13fPw1NaVrJR7c422ZTD3aXvsQrWQFXhVPxkYl3GHeQKkwE6fLy"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bea1c370d72-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 48,
  "title": "ut voluptatem illum ea doloribus itaque eos",
  "body": "voluptates quo voluptatem facilis iure occaecati\nvel assumenda rerum officia et\nillum perspiciatis ab deleniti\nlaudantium repellat ad ut et autem reprehenderit"
} 
 </msg>
<msg timestamp="20210205 20:20:02.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.865" endtime="20210205 20:20:02.911"></status>
</kw>
<msg timestamp="20210205 20:20:02.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.863" endtime="20210205 20:20:02.912"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.914" endtime="20210205 20:20:02.917"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.913" endtime="20210205 20:20:02.918"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.912" endtime="20210205 20:20:02.918"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.919" endtime="20210205 20:20:02.920"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.918" endtime="20210205 20:20:02.920"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.922" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.921" endtime="20210205 20:20:02.922"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.993" level="INFO">${idvalue} = [48]</msg>
<status status="PASS" starttime="20210205 20:20:02.922" endtime="20210205 20:20:02.993"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:02.994" level="INFO">${responseid} = 48</msg>
<status status="PASS" starttime="20210205 20:20:02.993" endtime="20210205 20:20:02.994"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:02.994" endtime="20210205 20:20:02.995"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:02.996" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:02.995" endtime="20210205 20:20:02.996"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.920" endtime="20210205 20:20:02.996"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.863" endtime="20210205 20:20:02.996"></status>
</kw>
<kw name="${postid} = 49" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:02.998" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:02.998" endtime="20210205 20:20:02.999"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:03.041" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/49 
 path_url=/posts/49 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:03.041" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/49 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da51bd2025ff1b94dd436baf8918dd8731612574404; expires=Mon, 08-Mar-21 01:20:04 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612152217', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"112-lKkCmj93YmY7yVGzoTlsICQTIV8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c6d30000f112e78e4000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zgbOxQP%2FJQlkm9c6CmHDL3xNmdiNmvtzp2e1Sdqrg2KkH7EqqHUvIpsFCKDLmTX3jLio9kgFwKFyPzjihX5CH5d4yC4R%2FKrNVtEiwYmAHRkK3A8qwkkXqmqHMBnV"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10beaeae8f112-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 49,
  "title": "laborum non sunt aut ut assumenda perspiciatis voluptas",
  "body": "inventore ab sint\nnatus fugit id nulla sequi architecto nihil quaerat\neos tenetur in in eum veritatis non\nquibusdam officiis aspernatur cumque aut commodi aut"
} 
 </msg>
<msg timestamp="20210205 20:20:03.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.999" endtime="20210205 20:20:03.042"></status>
</kw>
<msg timestamp="20210205 20:20:03.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:02.997" endtime="20210205 20:20:03.042"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.045" endtime="20210205 20:20:03.048"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.044" endtime="20210205 20:20:03.048"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.043" endtime="20210205 20:20:03.048"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.049" endtime="20210205 20:20:03.050"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.048" endtime="20210205 20:20:03.050"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.052" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.051" endtime="20210205 20:20:03.052"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.113" level="INFO">${idvalue} = [49]</msg>
<status status="PASS" starttime="20210205 20:20:03.052" endtime="20210205 20:20:03.113"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:03.114" level="INFO">${responseid} = 49</msg>
<status status="PASS" starttime="20210205 20:20:03.113" endtime="20210205 20:20:03.114"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.114" endtime="20210205 20:20:03.114"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.115" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.114" endtime="20210205 20:20:03.115"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.050" endtime="20210205 20:20:03.115"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:02.996" endtime="20210205 20:20:03.115"></status>
</kw>
<kw name="${postid} = 50" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.116" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:03.116" endtime="20210205 20:20:03.117"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:03.164" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/50 
 path_url=/posts/50 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:03.164" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/50 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da8f236f0d327037b21991c9ea815be251612574404; expires=Mon, 08-Mar-21 01:20:04 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612411557', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"14d-XND1VIG+pZHF+RVMSi1awppS1XI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c74800000daacf8f4000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=MCr0BB%2BfuxHNLXiMcDMmA79WS3h8q%2BPYcFCTH%2FKUp4r9iPqgbABdMt%2BXAbskEkuTEPJ6MRShcyUc1sTfzvr3w55ayNphJvvEiMbOzI73FXrzEBOGqfyA%2Bhl6NQte"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bebac750daa-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 5,
  "id": 50,
  "title": "repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem",
  "body": "error suscipit maxime adipisci consequuntur recusandae\nvoluptas eligendi et est et voluptates\nquia distinctio ab amet quaerat molestiae et vitae\nadipisci impedit sequi nesciunt quis consectetur"
} 
 </msg>
<msg timestamp="20210205 20:20:03.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.117" endtime="20210205 20:20:03.164"></status>
</kw>
<msg timestamp="20210205 20:20:03.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.115" endtime="20210205 20:20:03.165"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.167" endtime="20210205 20:20:03.171"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.166" endtime="20210205 20:20:03.171"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.165" endtime="20210205 20:20:03.171"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.172" endtime="20210205 20:20:03.173"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.171" endtime="20210205 20:20:03.173"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.175" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.174" endtime="20210205 20:20:03.175"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.249" level="INFO">${idvalue} = [50]</msg>
<status status="PASS" starttime="20210205 20:20:03.175" endtime="20210205 20:20:03.249"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:03.250" level="INFO">${responseid} = 50</msg>
<status status="PASS" starttime="20210205 20:20:03.249" endtime="20210205 20:20:03.250"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.250" endtime="20210205 20:20:03.251"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.251" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.251" endtime="20210205 20:20:03.251"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.173" endtime="20210205 20:20:03.252"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.115" endtime="20210205 20:20:03.252"></status>
</kw>
<kw name="${postid} = 51" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.254" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:03.253" endtime="20210205 20:20:03.254"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:03.296" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/51 
 path_url=/posts/51 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:03.296" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/51 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d78340949664d73f54e2e3ecd047127171612574404; expires=Mon, 08-Mar-21 01:20:04 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '958', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ec-KSZLw8b2VyQH0CoS7Z65vSSln78"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c7d2000074394f1bf000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=wsTKAhSw%2BxLqw5Y3p63J72ULjqiuM0tAjf4GscJBLC2hXZhC715FF5tLkos2dAFOYdB8KoClxw5iAO4CUF0nN8dZZsdY65EU%2Ftk1yv%2BBFuG0IDGfugydZ2JaxOi8"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bec8d2b7439-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 51,
  "title": "soluta aliquam aperiam consequatur illo quis voluptas",
  "body": "sunt dolores aut doloribus\ndolore doloribus voluptates tempora et\ndoloremque et quo\ncum asperiores sit consectetur dolorem"
} 
 </msg>
<msg timestamp="20210205 20:20:03.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.255" endtime="20210205 20:20:03.297"></status>
</kw>
<msg timestamp="20210205 20:20:03.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.252" endtime="20210205 20:20:03.297"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.300" endtime="20210205 20:20:03.303"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.299" endtime="20210205 20:20:03.303"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.298" endtime="20210205 20:20:03.303"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.304" endtime="20210205 20:20:03.305"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.303" endtime="20210205 20:20:03.305"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.307" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.306" endtime="20210205 20:20:03.307"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.376" level="INFO">${idvalue} = [51]</msg>
<status status="PASS" starttime="20210205 20:20:03.307" endtime="20210205 20:20:03.376"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:03.377" level="INFO">${responseid} = 51</msg>
<status status="PASS" starttime="20210205 20:20:03.376" endtime="20210205 20:20:03.377"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.377" endtime="20210205 20:20:03.378"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.379" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.378" endtime="20210205 20:20:03.379"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.305" endtime="20210205 20:20:03.379"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.252" endtime="20210205 20:20:03.379"></status>
</kw>
<kw name="${postid} = 52" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.381" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:03.381" endtime="20210205 20:20:03.382"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:03.419" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/52 
 path_url=/posts/52 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:03.420" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/52 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d015b79ab4f29548edf991b51958d95db1612574404; expires=Mon, 08-Mar-21 01:20:04 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '957', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11d-WmrD+HyY132p7brEZQ1rec9ZC6E"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c8500000747a14231000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zsQ%2B00L1hp0J373BYFx5v9OT2JHFxXBi4kUmtjpBPFrJzycjg%2FycnC%2BSlW0sOwav%2Bhc5t7RghZZp95JOgwsiN8R9aptARDh4hpxERWi6pZt1lAM2t2Jm5SXIX9eo"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bed4aca747a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 52,
  "title": "qui enim et consequuntur quia animi quis voluptate quibusdam",
  "body": "iusto est quibusdam fuga quas quaerat molestias\na enim ut sit accusamus enim\ntemporibus iusto accusantium provident architecto\nsoluta esse reprehenderit qui laborum"
} 
 </msg>
<msg timestamp="20210205 20:20:03.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.382" endtime="20210205 20:20:03.420"></status>
</kw>
<msg timestamp="20210205 20:20:03.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.380" endtime="20210205 20:20:03.421"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.423" endtime="20210205 20:20:03.426"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.422" endtime="20210205 20:20:03.426"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.421" endtime="20210205 20:20:03.427"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.428" endtime="20210205 20:20:03.429"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.427" endtime="20210205 20:20:03.429"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.430" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.430" endtime="20210205 20:20:03.431"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.501" level="INFO">${idvalue} = [52]</msg>
<status status="PASS" starttime="20210205 20:20:03.431" endtime="20210205 20:20:03.501"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:03.502" level="INFO">${responseid} = 52</msg>
<status status="PASS" starttime="20210205 20:20:03.501" endtime="20210205 20:20:03.502"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.502" endtime="20210205 20:20:03.503"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.503" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.503" endtime="20210205 20:20:03.503"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.429" endtime="20210205 20:20:03.504"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.379" endtime="20210205 20:20:03.504"></status>
</kw>
<kw name="${postid} = 53" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.505" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:03.505" endtime="20210205 20:20:03.506"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:03.549" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/53 
 path_url=/posts/53 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:03.549" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/53 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d54a4d37b1e25b3de7ba4dfd1edcaca001612574404; expires=Mon, 08-Mar-21 01:20:04 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '956', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-X55YQF6JtuvUfAW398enLPpXN4M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c8ce00000316e9b2b000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=t91uIWaopnLwyBn%2FdQ8UMG62%2ByxJ43PhPVPtrlamb2Yp4yQTHA3zoMxaw4G8DJeKZXlYTBs%2BWTVy4NQfa8Rv8lOhW8l3Ss2ilqZUTSQUGHEUJWahOUu27Y923InH"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bee1db80316-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 53,
  "title": "ut quo aut ducimus alias",
  "body": "minima harum praesentium eum rerum illo dolore\nquasi exercitationem rerum nam\nporro quis neque quo\nconsequatur minus dolor quidem veritatis sunt non explicabo similique"
} 
 </msg>
<msg timestamp="20210205 20:20:03.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.506" endtime="20210205 20:20:03.550"></status>
</kw>
<msg timestamp="20210205 20:20:03.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.504" endtime="20210205 20:20:03.550"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.553" endtime="20210205 20:20:03.556"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.552" endtime="20210205 20:20:03.556"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.551" endtime="20210205 20:20:03.556"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.557" endtime="20210205 20:20:03.558"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.556" endtime="20210205 20:20:03.558"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.560" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.560" endtime="20210205 20:20:03.560"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.628" level="INFO">${idvalue} = [53]</msg>
<status status="PASS" starttime="20210205 20:20:03.560" endtime="20210205 20:20:03.628"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:03.629" level="INFO">${responseid} = 53</msg>
<status status="PASS" starttime="20210205 20:20:03.628" endtime="20210205 20:20:03.629"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.629" endtime="20210205 20:20:03.630"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.630" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.630" endtime="20210205 20:20:03.630"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.558" endtime="20210205 20:20:03.631"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.504" endtime="20210205 20:20:03.631"></status>
</kw>
<kw name="${postid} = 54" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.633" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:03.632" endtime="20210205 20:20:03.633"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:03.687" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/54 
 path_url=/posts/54 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:03.687" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/54 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:04 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d20fff4d099d65f34ac3e647bb0a4f5231612574404; expires=Mon, 08-Mar-21 01:20:04 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '955', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-/rMACUfvajsqfpLr5SV6d7Kh/pA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685c94f0000030435aa7000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=3T%2BuT7IJvtYCzBJPA%2B6i9QP%2FNbl5ZX6DfZc5MCO6MZcRTzR5OcWDWGuA27xtg%2B%2FufvgGZIDJwNhWTUlIx%2FK7vMufOlGYDn8IhWcWxD6SNbyV%2B7ZzafTdf2wGYRlP"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10beeed350304-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 54,
  "title": "sit asperiores ipsam eveniet odio non quia",
  "body": "totam corporis dignissimos\nvitae dolorem ut occaecati accusamus\nex velit deserunt\net exercitationem vero incidunt corrupti mollitia"
} 
 </msg>
<msg timestamp="20210205 20:20:03.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.633" endtime="20210205 20:20:03.688"></status>
</kw>
<msg timestamp="20210205 20:20:03.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.631" endtime="20210205 20:20:03.688"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.691" endtime="20210205 20:20:03.694"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.690" endtime="20210205 20:20:03.694"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.689" endtime="20210205 20:20:03.695"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.696" endtime="20210205 20:20:03.697"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.695" endtime="20210205 20:20:03.697"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.699" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.698" endtime="20210205 20:20:03.699"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.765" level="INFO">${idvalue} = [54]</msg>
<status status="PASS" starttime="20210205 20:20:03.699" endtime="20210205 20:20:03.765"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:03.766" level="INFO">${responseid} = 54</msg>
<status status="PASS" starttime="20210205 20:20:03.766" endtime="20210205 20:20:03.767"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.767" endtime="20210205 20:20:03.767"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.768" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.768" endtime="20210205 20:20:03.768"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.697" endtime="20210205 20:20:03.768"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.631" endtime="20210205 20:20:03.768"></status>
</kw>
<kw name="${postid} = 55" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.770" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:03.770" endtime="20210205 20:20:03.771"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:03.816" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/55 
 path_url=/posts/55 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:03.816" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/55 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:05 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db8296435aaf6c0cc9ad02caa261e3e611612574405; expires=Mon, 08-Mar-21 01:20:05 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612065799', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f0-VxeBMfiov8SnmTjGIBYMw53XYbw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685c9d80000f474ea180000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BdPkIOD7EBscZJtRyBKPCu4uPJ5Fptr1dJ5JHzvGDCTw3F62IX9%2BCIymFEXrJ3DQRFmxfrlI3B5js7zF7EBj%2BIJb%2FPgoZxINUoBOAPpugGjHeEEWj30utnM9pQ7n"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10befbb54f474-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 55,
  "title": "sit vel voluptatem et non libero",
  "body": "debitis excepturi ea perferendis harum libero optio\neos accusamus cum fuga ut sapiente repudiandae\net ut incidunt omnis molestiae\nnihil ut eum odit"
} 
 </msg>
<msg timestamp="20210205 20:20:03.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.771" endtime="20210205 20:20:03.817"></status>
</kw>
<msg timestamp="20210205 20:20:03.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.769" endtime="20210205 20:20:03.817"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.820" endtime="20210205 20:20:03.823"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.819" endtime="20210205 20:20:03.823"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.818" endtime="20210205 20:20:03.823"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.824" endtime="20210205 20:20:03.825"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.823" endtime="20210205 20:20:03.826"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.828" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.827" endtime="20210205 20:20:03.828"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.901" level="INFO">${idvalue} = [55]</msg>
<status status="PASS" starttime="20210205 20:20:03.828" endtime="20210205 20:20:03.901"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:03.902" level="INFO">${responseid} = 55</msg>
<status status="PASS" starttime="20210205 20:20:03.901" endtime="20210205 20:20:03.902"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.902" endtime="20210205 20:20:03.903"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.903" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.903" endtime="20210205 20:20:03.903"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.826" endtime="20210205 20:20:03.904"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.769" endtime="20210205 20:20:03.904"></status>
</kw>
<kw name="${postid} = 56" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.906" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:03.905" endtime="20210205 20:20:03.907"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:03.953" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/56 
 path_url=/posts/56 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:03.953" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/56 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:05 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d21c52e5fbaf64c9d2dd8d56dac845d841612574405; expires=Mon, 08-Mar-21 01:20:05 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '952', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-u98FTQTucjGThpIemwDEky3CeT0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685ca5e000037ee3b365000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=5U1%2F3kjqS12ATpsMqD8dKVOmztRSPtzf2k7gI7B8BXyJ1C5rcd44iUuggAJjojgqpwToO2hhe%2FdhLelSmrCkA0mGcIHDo8D7XBFnAvE5aHqmcDZr8rKjdVBr8bpJ"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bf09ae537ee-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 56,
  "title": "qui et at rerum necessitatibus",
  "body": "aut est omnis dolores\nneque rerum quod ea rerum velit pariatur beatae excepturi\net provident voluptas corrupti\ncorporis harum reprehenderit dolores eligendi"
} 
 </msg>
<msg timestamp="20210205 20:20:03.954" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.907" endtime="20210205 20:20:03.954"></status>
</kw>
<msg timestamp="20210205 20:20:03.954" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.904" endtime="20210205 20:20:03.954"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:03.957" endtime="20210205 20:20:03.960"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.956" endtime="20210205 20:20:03.960"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.955" endtime="20210205 20:20:03.960"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:03.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:03.962" endtime="20210205 20:20:03.962"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.960" endtime="20210205 20:20:03.962"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:03.964" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:03.963" endtime="20210205 20:20:03.964"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.036" level="INFO">${idvalue} = [56]</msg>
<status status="PASS" starttime="20210205 20:20:03.964" endtime="20210205 20:20:04.036"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:04.037" level="INFO">${responseid} = 56</msg>
<status status="PASS" starttime="20210205 20:20:04.036" endtime="20210205 20:20:04.037"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.037" endtime="20210205 20:20:04.038"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.038" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.038" endtime="20210205 20:20:04.038"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.963" endtime="20210205 20:20:04.039"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:03.904" endtime="20210205 20:20:04.039"></status>
</kw>
<kw name="${postid} = 57" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.041" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:04.040" endtime="20210205 20:20:04.041"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:04.103" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/57 
 path_url=/posts/57 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:04.103" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/57 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:05 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbe500873f96728dc651eeec53f1288fd1612574405; expires=Mon, 08-Mar-21 01:20:05 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '952', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ce-Iwt4vkAV2fTGb7NKDpU2J1zQlLg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685caeb0000cec8ea8a2000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ob7%2BOr9tiU4TAdiiXs2qYDRgf0jY%2Fw%2FD39M1hWYsBlX%2BEPsCow9IjvF8h3n5S2006RIOeU98LkfxlLOZ5fHJ9BY%2B%2Bhh9m9%2BOl9rBP9dwJM3PYie1YLQdE2trZLf8"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bf17c67cec8-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 57,
  "title": "sed ab est est",
  "body": "at pariatur consequuntur earum quidem\nquo est laudantium soluta voluptatem\nqui ullam et est\net cum voluptas voluptatum repellat est"
} 
 </msg>
<msg timestamp="20210205 20:20:04.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.041" endtime="20210205 20:20:04.104"></status>
</kw>
<msg timestamp="20210205 20:20:04.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.039" endtime="20210205 20:20:04.104"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.107" endtime="20210205 20:20:04.110"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.106" endtime="20210205 20:20:04.110"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.105" endtime="20210205 20:20:04.110"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.112" endtime="20210205 20:20:04.112"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.111" endtime="20210205 20:20:04.113"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.114" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.114" endtime="20210205 20:20:04.114"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.185" level="INFO">${idvalue} = [57]</msg>
<status status="PASS" starttime="20210205 20:20:04.114" endtime="20210205 20:20:04.185"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:04.186" level="INFO">${responseid} = 57</msg>
<status status="PASS" starttime="20210205 20:20:04.185" endtime="20210205 20:20:04.186"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.186" endtime="20210205 20:20:04.187"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.188" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.187" endtime="20210205 20:20:04.188"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.113" endtime="20210205 20:20:04.188"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.039" endtime="20210205 20:20:04.188"></status>
</kw>
<kw name="${postid} = 58" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.190" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:04.189" endtime="20210205 20:20:04.191"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:04.245" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/58 
 path_url=/posts/58 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:04.245" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/58 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:05 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc75e4cf16076688405ad819670c2c0501612574405; expires=Mon, 08-Mar-21 01:20:05 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '949', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"df-bD3LY230qxsVBb8KHrs4UpWT93M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685cb8000000df3e5bc8000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=bMjSiIneLk4e6qPRkVm2HaWzHhs0OtJ10krNv%2FgceEEwJWejuiLPCunZNY6RsrW%2F%2BsEHty7AbkNSpMsJ8swpITqXPfpSwM5sQhqL1TFxaNsr2gJyIyaGT1POyNlV"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bf26c3f0df3-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 58,
  "title": "voluptatum itaque dolores nisi et quasi",
  "body": "veniam voluptatum quae adipisci id\net id quia eos ad et dolorem\naliquam quo nisi sunt eos impedit error\nad similique veniam"
} 
 </msg>
<msg timestamp="20210205 20:20:04.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.191" endtime="20210205 20:20:04.246"></status>
</kw>
<msg timestamp="20210205 20:20:04.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.188" endtime="20210205 20:20:04.247"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.249" endtime="20210205 20:20:04.252"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.248" endtime="20210205 20:20:04.252"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.247" endtime="20210205 20:20:04.253"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.254" endtime="20210205 20:20:04.255"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.253" endtime="20210205 20:20:04.255"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.256" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.256" endtime="20210205 20:20:04.256"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.371" level="INFO">${idvalue} = [58]</msg>
<status status="PASS" starttime="20210205 20:20:04.257" endtime="20210205 20:20:04.371"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:04.372" level="INFO">${responseid} = 58</msg>
<status status="PASS" starttime="20210205 20:20:04.371" endtime="20210205 20:20:04.372"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.372" endtime="20210205 20:20:04.373"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.373" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.373" endtime="20210205 20:20:04.373"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.255" endtime="20210205 20:20:04.374"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.188" endtime="20210205 20:20:04.374"></status>
</kw>
<kw name="${postid} = 59" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.376" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:04.376" endtime="20210205 20:20:04.377"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:04.422" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/59 
 path_url=/posts/59 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:04.422" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/59 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:05 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db19f01d1ef30f205a022fc38cb26d7b81612574405; expires=Mon, 08-Mar-21 01:20:05 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '951', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"135-f8DoN5pkvK3E3Z4uNHbshLKUln0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685cc370000ea4d252f7000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=U65tA8sb2bKgSLBz0V7Q4stLDfZlGDopyv%2BDSyJHAwLutMT0El0BqzRjBJMMrYgzFISNBGPKs6lzjJFIfZ7%2F9PggcmOYXxP0aTDlrKTSmq7lUHQFTumu7%2FqbbdZu"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bf38d38ea4d-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 59,
  "title": "qui commodi dolor at maiores et quis id accusantium",
  "body": "perspiciatis et quam ea autem temporibus non voluptatibus qui\nbeatae a earum officia nesciunt dolores suscipit voluptas et\nanimi doloribus cum rerum quas et magni\net hic ut ut commodi expedita sunt"
} 
 </msg>
<msg timestamp="20210205 20:20:04.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.377" endtime="20210205 20:20:04.423"></status>
</kw>
<msg timestamp="20210205 20:20:04.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.374" endtime="20210205 20:20:04.424"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.426" endtime="20210205 20:20:04.429"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.425" endtime="20210205 20:20:04.429"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.424" endtime="20210205 20:20:04.429"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.430" endtime="20210205 20:20:04.431"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.429" endtime="20210205 20:20:04.431"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.433" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.432" endtime="20210205 20:20:04.433"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.503" level="INFO">${idvalue} = [59]</msg>
<status status="PASS" starttime="20210205 20:20:04.433" endtime="20210205 20:20:04.503"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:04.504" level="INFO">${responseid} = 59</msg>
<status status="PASS" starttime="20210205 20:20:04.503" endtime="20210205 20:20:04.504"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.504" endtime="20210205 20:20:04.505"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.505" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.505" endtime="20210205 20:20:04.505"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.432" endtime="20210205 20:20:04.506"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.374" endtime="20210205 20:20:04.506"></status>
</kw>
<kw name="${postid} = 60" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.508" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:04.507" endtime="20210205 20:20:04.508"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:04.576" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/60 
 path_url=/posts/60 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:04.577" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/60 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:05 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dab8cbc25144e6e2b387cad61cc91442f1612574405; expires=Mon, 08-Mar-21 01:20:05 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '950', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10c-7tnlht60JBKnr58PtdEE+vo8WCI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685ccb60000ea1ca421f000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BvwuohgzNsqVIKpTdjaPrOw%2Bb20Tb%2FAVqB6pyJt3SIx%2BBhTNaK%2BupW2K5%2B1z17%2FGyuO%2B26ozoUVrmC8GY3digykyH%2BE25nDZy7WcuQcdgbf9xmYHQbiLNc9YSCtW"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bf45f1bea1c-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 6,
  "id": 60,
  "title": "consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere",
  "body": "asperiores sunt ab assumenda cumque modi velit\nqui esse omnis\nvoluptate et fuga perferendis voluptas\nillo ratione amet aut et omnis"
} 
 </msg>
<msg timestamp="20210205 20:20:04.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.509" endtime="20210205 20:20:04.577"></status>
</kw>
<msg timestamp="20210205 20:20:04.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.506" endtime="20210205 20:20:04.578"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.580" endtime="20210205 20:20:04.583"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.579" endtime="20210205 20:20:04.583"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.578" endtime="20210205 20:20:04.584"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.585" endtime="20210205 20:20:04.586"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.584" endtime="20210205 20:20:04.586"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.587" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.587" endtime="20210205 20:20:04.588"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.658" level="INFO">${idvalue} = [60]</msg>
<status status="PASS" starttime="20210205 20:20:04.588" endtime="20210205 20:20:04.658"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:04.659" level="INFO">${responseid} = 60</msg>
<status status="PASS" starttime="20210205 20:20:04.659" endtime="20210205 20:20:04.660"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.660" endtime="20210205 20:20:04.661"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.661" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.661" endtime="20210205 20:20:04.661"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.586" endtime="20210205 20:20:04.662"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.506" endtime="20210205 20:20:04.662"></status>
</kw>
<kw name="${postid} = 61" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.664" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:04.663" endtime="20210205 20:20:04.664"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:04.711" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/61 
 path_url=/posts/61 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:04.711" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/61 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:05 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8cb7eb045ecd3c783dd785892bf18c0c1612574405; expires=Mon, 08-Mar-21 01:20:05 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '946', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"117-2lMq4LJFOqWrZ3nCurXp4bbe50g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685cd570000f0c977bd3000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=IIOV%2BkEtRkhFKlsy5Os%2FfGsrOuTF4ef3Yjt1rjBRPYX3LvJz2GXi6EF1JCojaScamwmEqL9i3a0Z%2FMN7PL9KIC4ZQAe9rje3uszhG6cxcRaCY%2BsyaCqsSryanMdr"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bf55d04f0c9-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 61,
  "title": "voluptatem doloribus consectetur est ut ducimus",
  "body": "ab nemo optio odio\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\nvero blanditiis debitis in nesciunt doloribus dicta dolores\nmagnam minus velit"
} 
 </msg>
<msg timestamp="20210205 20:20:04.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.665" endtime="20210205 20:20:04.712"></status>
</kw>
<msg timestamp="20210205 20:20:04.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.662" endtime="20210205 20:20:04.713"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.715" endtime="20210205 20:20:04.718"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.714" endtime="20210205 20:20:04.718"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.713" endtime="20210205 20:20:04.718"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.720" endtime="20210205 20:20:04.720"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.718" endtime="20210205 20:20:04.721"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.722" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.722" endtime="20210205 20:20:04.722"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.791" level="INFO">${idvalue} = [61]</msg>
<status status="PASS" starttime="20210205 20:20:04.722" endtime="20210205 20:20:04.791"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:04.792" level="INFO">${responseid} = 61</msg>
<status status="PASS" starttime="20210205 20:20:04.791" endtime="20210205 20:20:04.792"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.792" endtime="20210205 20:20:04.793"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.794" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.793" endtime="20210205 20:20:04.794"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.721" endtime="20210205 20:20:04.794"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.662" endtime="20210205 20:20:04.794"></status>
</kw>
<kw name="${postid} = 62" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.796" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:04.795" endtime="20210205 20:20:04.796"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:04.950" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/62 
 path_url=/posts/62 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:04.950" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/62 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:06 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d096e531381d28973b6e861f36d26b3061612574406; expires=Mon, 08-Mar-21 01:20:06 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '948', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fc-wUwohCARVvkGoN5CwlwsirOR5iU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685cdd60000c17a36aa0000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=oFmwV2Zuu2LD0J34%2Fv5Q0NI6rWr54A7SUWkP9RIQvbkcR6KQQUvOuhvaholHKleRE2Jfk7V5zEBqAh37e%2B8yuG699yeamPhV%2F3dZBZXGLXtJea4B3C2SZyZhg64U"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bf62eb6c17a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 62,
  "title": "beatae enim quia vel",
  "body": "enim aspernatur illo distinctio quae praesentium\nbeatae alias amet delectus qui voluptate distinctio\nodit sint accusantium autem omnis\nquo molestiae omnis ea eveniet optio"
} 
 </msg>
<msg timestamp="20210205 20:20:04.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.797" endtime="20210205 20:20:04.951"></status>
</kw>
<msg timestamp="20210205 20:20:04.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.794" endtime="20210205 20:20:04.951"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:04.954" endtime="20210205 20:20:04.957"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.953" endtime="20210205 20:20:04.957"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.952" endtime="20210205 20:20:04.958"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:04.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:04.959" endtime="20210205 20:20:04.960"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.958" endtime="20210205 20:20:04.960"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:04.962" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:04.961" endtime="20210205 20:20:04.962"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.032" level="INFO">${idvalue} = [62]</msg>
<status status="PASS" starttime="20210205 20:20:04.962" endtime="20210205 20:20:05.032"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:05.033" level="INFO">${responseid} = 62</msg>
<status status="PASS" starttime="20210205 20:20:05.032" endtime="20210205 20:20:05.033"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.033" endtime="20210205 20:20:05.034"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.035" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.034" endtime="20210205 20:20:05.035"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.960" endtime="20210205 20:20:05.035"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:04.794" endtime="20210205 20:20:05.035"></status>
</kw>
<kw name="${postid} = 63" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.038" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:05.036" endtime="20210205 20:20:05.038"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:05.081" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/63 
 path_url=/posts/63 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:05.082" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/63 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:06 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc5c566a76dcc668a79081c4f461a0ba81612574406; expires=Mon, 08-Mar-21 01:20:06 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '947', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"154-0kFmwh5nu5wS1Jzcpk0yszfjrjQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685cec80000ea046c2ba000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zRcNNN26kylw5HKh6SiuRP7izx%2FMC2OZM0K8Kdg3h21DZV6SwwcQF8xOdXxUQOml%2F%2F%2FsGKhndTPJih1KVjqsliERV7V8hVVrfOuaDK7FAT72Eaowuh5v9lqplM6x"}],"max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bf7ad45ea04-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 63,
  "title": "voluptas blanditiis repellendus animi ducimus error sapiente et suscipit",
  "body": "enim adipisci aspernatur nemo\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\nab delectus culpa quo reprehenderit blanditiis asperiores\naccusantium ut quam in voluptatibus voluptas ipsam dicta"
} 
 </msg>
<msg timestamp="20210205 20:20:05.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.038" endtime="20210205 20:20:05.082"></status>
</kw>
<msg timestamp="20210205 20:20:05.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.035" endtime="20210205 20:20:05.083"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.086" endtime="20210205 20:20:05.089"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.085" endtime="20210205 20:20:05.089"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.083" endtime="20210205 20:20:05.089"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.091" endtime="20210205 20:20:05.091"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.090" endtime="20210205 20:20:05.092"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.093" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.093" endtime="20210205 20:20:05.093"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.165" level="INFO">${idvalue} = [63]</msg>
<status status="PASS" starttime="20210205 20:20:05.093" endtime="20210205 20:20:05.165"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:05.166" level="INFO">${responseid} = 63</msg>
<status status="PASS" starttime="20210205 20:20:05.165" endtime="20210205 20:20:05.166"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.166" endtime="20210205 20:20:05.167"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.167" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.167" endtime="20210205 20:20:05.167"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.092" endtime="20210205 20:20:05.168"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.035" endtime="20210205 20:20:05.168"></status>
</kw>
<kw name="${postid} = 64" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.170" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:05.169" endtime="20210205 20:20:05.170"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:05.265" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/64 
 path_url=/posts/64 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:05.265" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/64 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:06 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db51e554440c13f2de9692dab1ab734271612574406; expires=Mon, 08-Mar-21 01:20:06 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '946', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e1-fG+p7wNrgpgJUc/3oEW9IALNB1s"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685cf7e0000ea4022261000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=dsfibsiakKKBYFVDTaam791lHypoVumsRPDGsFDQljpm%2FN5OksrYY5VqZ35bW3tT3XM5SSZ4OwgWSWZJennSM0eL8N2ZI11tC9XSBDYpQMQ3JnOpxkDJvo4UFUDu"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bf8cb24ea40-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 64,
  "title": "et fugit quas eum in in aperiam quod",
  "body": "id velit blanditiis\neum ea voluptatem\nmolestiae sint occaecati est eos perspiciatis\nincidunt a error provident eaque aut aut qui"
} 
 </msg>
<msg timestamp="20210205 20:20:05.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.170" endtime="20210205 20:20:05.266"></status>
</kw>
<msg timestamp="20210205 20:20:05.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.168" endtime="20210205 20:20:05.266"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.269" endtime="20210205 20:20:05.272"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.268" endtime="20210205 20:20:05.272"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.267" endtime="20210205 20:20:05.273"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.274" endtime="20210205 20:20:05.275"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.273" endtime="20210205 20:20:05.275"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.277" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.276" endtime="20210205 20:20:05.277"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.344" level="INFO">${idvalue} = [64]</msg>
<status status="PASS" starttime="20210205 20:20:05.277" endtime="20210205 20:20:05.344"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:05.345" level="INFO">${responseid} = 64</msg>
<status status="PASS" starttime="20210205 20:20:05.345" endtime="20210205 20:20:05.345"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.346" endtime="20210205 20:20:05.346"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.347" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.347" endtime="20210205 20:20:05.347"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.275" endtime="20210205 20:20:05.347"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.168" endtime="20210205 20:20:05.348"></status>
</kw>
<kw name="${postid} = 65" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.350" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:05.349" endtime="20210205 20:20:05.350"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:05.530" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/65 
 path_url=/posts/65 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:05.530" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/65 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:06 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc82e872ba41785433ad931d3b42f40c71612574406; expires=Mon, 08-Mar-21 01:20:06 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '945', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"108-o7Djqn++3cXC+SK+HeS4ds9s4Dk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685d08a00002a9f23af4000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1hhqHL2nv%2BjIGqtm20cp%2Bu5vJfVgFYGwJdu0uBolAmw%2BnNQ%2BTzMLzUL%2FMAUnLlS3AZhuph%2BlCUHMyyf3UhCsprg4JgU8owftm0y8fMATrMaZrxcVSOO1aZXnottN"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bfa78d62a9f-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 65,
  "title": "consequatur id enim sunt et et",
  "body": "voluptatibus ex esse\nsint explicabo est aliquid cumque adipisci fuga repellat labore\nmolestiae corrupti ex saepe at asperiores et perferendis\nnatus id esse incidunt pariatur"
} 
 </msg>
<msg timestamp="20210205 20:20:05.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.350" endtime="20210205 20:20:05.531"></status>
</kw>
<msg timestamp="20210205 20:20:05.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.348" endtime="20210205 20:20:05.532"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.534" endtime="20210205 20:20:05.537"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.533" endtime="20210205 20:20:05.537"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.532" endtime="20210205 20:20:05.537"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.538" endtime="20210205 20:20:05.539"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.537" endtime="20210205 20:20:05.539"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.541" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.540" endtime="20210205 20:20:05.541"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.611" level="INFO">${idvalue} = [65]</msg>
<status status="PASS" starttime="20210205 20:20:05.541" endtime="20210205 20:20:05.611"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:05.612" level="INFO">${responseid} = 65</msg>
<status status="PASS" starttime="20210205 20:20:05.612" endtime="20210205 20:20:05.612"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.612" endtime="20210205 20:20:05.613"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.614" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.613" endtime="20210205 20:20:05.614"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.540" endtime="20210205 20:20:05.614"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.348" endtime="20210205 20:20:05.614"></status>
</kw>
<kw name="${postid} = 66" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.616" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:05.615" endtime="20210205 20:20:05.617"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:05.786" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/66 
 path_url=/posts/66 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:05.787" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/66 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:06 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d37a6081a906e388bdb29a1a8eb3ec3aa1612574406; expires=Mon, 08-Mar-21 01:20:06 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '936', 'X-Ratelimit-Reset': '1611704501', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ea-wkA8VfsJ18Eh0sMF7Ua9wR/8DVg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12153', 'cf-request-id': '081685d10c000073d5381e6000000001', 'Report-To': '{"max_age":604800,"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=sL8JyV0hB1udpFMzeBYKtgkSPpOwDEZgIhO%2BycbVwUFOcmeTCpFt9FPowcQOoLRqMF3sLCp%2BvWpOj%2BIjG7lOQ5CVUfMkHM229Nt36de0eKsCcdj%2FeJTBuuxYkFXP"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bfb4d7d73d5-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 66,
  "title": "repudiandae ea animi iusto",
  "body": "officia veritatis tenetur vero qui itaque\nsint non ratione\nsed et ut asperiores iusto eos molestiae nostrum\nveritatis quibusdam et nemo iusto saepe"
} 
 </msg>
<msg timestamp="20210205 20:20:05.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.617" endtime="20210205 20:20:05.787"></status>
</kw>
<msg timestamp="20210205 20:20:05.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.614" endtime="20210205 20:20:05.788"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.790" endtime="20210205 20:20:05.793"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.789" endtime="20210205 20:20:05.793"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.788" endtime="20210205 20:20:05.794"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.795" endtime="20210205 20:20:05.796"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.794" endtime="20210205 20:20:05.796"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.797" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.797" endtime="20210205 20:20:05.798"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.869" level="INFO">${idvalue} = [66]</msg>
<status status="PASS" starttime="20210205 20:20:05.798" endtime="20210205 20:20:05.869"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:05.870" level="INFO">${responseid} = 66</msg>
<status status="PASS" starttime="20210205 20:20:05.869" endtime="20210205 20:20:05.870"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.870" endtime="20210205 20:20:05.871"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.871" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.871" endtime="20210205 20:20:05.871"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.796" endtime="20210205 20:20:05.872"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.614" endtime="20210205 20:20:05.872"></status>
</kw>
<kw name="${postid} = 67" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.874" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:05.873" endtime="20210205 20:20:05.874"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:05.927" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/67 
 path_url=/posts/67 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:05.927" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/67 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc7207efa9642acb620f7732a54d0be271612574407; expires=Mon, 08-Mar-21 01:20:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '943', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10a-zdbQphdSEl28vma+RxuMlor5ACo"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685d20e00003812032c0000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=CNgcCkKRP%2FJJMOkdZgMUvsze2yvKQNyhsMVlwJ0rF2BgLZ8iPo8EVzFhatjV%2BDYKnHspIi8frHcNTyU%2BtPxODYp5Yjjt7gL2Rm21LbjSuPe5Tvm6SnY1gsBqwQxy"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bfceb753812-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 67,
  "title": "aliquid eos sed fuga est maxime repellendus",
  "body": "reprehenderit id nostrum\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\net fugiat amet\nnon sapiente et consequatur necessitatibus molestiae"
} 
 </msg>
<msg timestamp="20210205 20:20:05.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.874" endtime="20210205 20:20:05.928"></status>
</kw>
<msg timestamp="20210205 20:20:05.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.872" endtime="20210205 20:20:05.929"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.931" endtime="20210205 20:20:05.934"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.930" endtime="20210205 20:20:05.934"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.929" endtime="20210205 20:20:05.935"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.936" endtime="20210205 20:20:05.937"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.935" endtime="20210205 20:20:05.937"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.938" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.938" endtime="20210205 20:20:05.938"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.987" level="INFO">${idvalue} = [67]</msg>
<status status="PASS" starttime="20210205 20:20:05.939" endtime="20210205 20:20:05.987"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:05.988" level="INFO">${responseid} = 67</msg>
<status status="PASS" starttime="20210205 20:20:05.987" endtime="20210205 20:20:05.988"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:05.988" endtime="20210205 20:20:05.988"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:05.988" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:05.988" endtime="20210205 20:20:05.989"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.937" endtime="20210205 20:20:05.989"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.872" endtime="20210205 20:20:05.989"></status>
</kw>
<kw name="${postid} = 68" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:05.990" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:05.990" endtime="20210205 20:20:05.990"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:06.107" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/68 
 path_url=/posts/68 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:06.107" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/68 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d01837157f4242b3f0c43511b1d05f1441612574407; expires=Mon, 08-Mar-21 01:20:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '942', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"ec-n7dxDg5V05y/RJHBgoUuNuvDA5M"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685d2c800002a034a9cf000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=OkjRq1KRdbP0w4hn%2BUuHUoU0i2r03cot0gu%2BETFSTDV0tsZh9yd4KfEs01yu%2FP6K5S1eXQhTflNcnnLxKokUQ3n%2B7O7EAEqzFEtBKnCn2ujDyoirQNd4EWVfM6Wr"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10bfe09c62a03-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 68,
  "title": "odio quis facere architecto reiciendis optio",
  "body": "magnam molestiae perferendis quisquam\nqui cum reiciendis\nquaerat animi amet hic inventore\nea quia deleniti quidem saepe porro velit"
} 
 </msg>
<msg timestamp="20210205 20:20:06.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.991" endtime="20210205 20:20:06.108"></status>
</kw>
<msg timestamp="20210205 20:20:06.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:05.989" endtime="20210205 20:20:06.108"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.111" endtime="20210205 20:20:06.114"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.110" endtime="20210205 20:20:06.114"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.109" endtime="20210205 20:20:06.114"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.116" endtime="20210205 20:20:06.116"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.115" endtime="20210205 20:20:06.117"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.118" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.118" endtime="20210205 20:20:06.118"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.186" level="INFO">${idvalue} = [68]</msg>
<status status="PASS" starttime="20210205 20:20:06.118" endtime="20210205 20:20:06.186"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:06.187" level="INFO">${responseid} = 68</msg>
<status status="PASS" starttime="20210205 20:20:06.187" endtime="20210205 20:20:06.187"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.188" endtime="20210205 20:20:06.188"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.189" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.188" endtime="20210205 20:20:06.189"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.117" endtime="20210205 20:20:06.189"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:05.989" endtime="20210205 20:20:06.189"></status>
</kw>
<kw name="${postid} = 69" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.191" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:06.191" endtime="20210205 20:20:06.192"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:06.352" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/69 
 path_url=/posts/69 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:06.353" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/69 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbb18770fbe97d7f1c8ceda27dc21865f1612574407; expires=Mon, 08-Mar-21 01:20:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '935', 'X-Ratelimit-Reset': '1611704501', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"137-6SkfkEH2vZX2tDrUhH6X9K8msxE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685d38d0000ea3c260c3000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=AzWusK0fXVB%2FOXHp7iKrW4v6cFH1jIs4VthCrSVt%2FBD3ULubZ%2F0G3xcOx4TCN3C%2BU%2FeUuk7J2Kt9xMhSv25zUAE1k1kiK4zZMbMBmlsYaEFCrOQkacuGQYebNjZ2"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10bff48afea3c-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 69,
  "title": "fugiat quod pariatur odit minima",
  "body": "officiis error culpa consequatur modi asperiores et\ndolorum assumenda voluptas et vel qui aut vel rerum\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\nsequi commodi repudiandae asperiores et saepe a"
} 
 </msg>
<msg timestamp="20210205 20:20:06.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.192" endtime="20210205 20:20:06.353"></status>
</kw>
<msg timestamp="20210205 20:20:06.354" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.190" endtime="20210205 20:20:06.354"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.356" endtime="20210205 20:20:06.359"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.355" endtime="20210205 20:20:06.359"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.354" endtime="20210205 20:20:06.359"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.361" endtime="20210205 20:20:06.361"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.360" endtime="20210205 20:20:06.362"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.363" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.363" endtime="20210205 20:20:06.363"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.432" level="INFO">${idvalue} = [69]</msg>
<status status="PASS" starttime="20210205 20:20:06.363" endtime="20210205 20:20:06.432"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:06.433" level="INFO">${responseid} = 69</msg>
<status status="PASS" starttime="20210205 20:20:06.432" endtime="20210205 20:20:06.433"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.433" endtime="20210205 20:20:06.433"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.434" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.433" endtime="20210205 20:20:06.434"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.362" endtime="20210205 20:20:06.434"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.189" endtime="20210205 20:20:06.434"></status>
</kw>
<kw name="${postid} = 70" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.435" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:06.435" endtime="20210205 20:20:06.435"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:06.480" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/70 
 path_url=/posts/70 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:06.481" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/70 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d0be66a145458009173d94e87370c11c61612574407; expires=Mon, 08-Mar-21 01:20:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '940', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d4-rM/RXlmI+ICK+LslODlpNGE3yUw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685d443000009872234a000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=72DWop8j9nGG3MfHCdzZ7LPreRjTdUxygk4s6dPoY4SzqnbneS5LUWhy2kZfU1cTzdJe48YtoYeYBcU1%2BjB3bg6uHudC3%2B%2BSq3r31x9wJo%2Fpb0GbzCpPbsbYX12F"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c006ede0987-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 7,
  "id": 70,
  "title": "voluptatem laborum magni",
  "body": "sunt repellendus quae\nest asperiores aut deleniti esse accusamus repellendus quia aut\nquia dolorem unde\neum tempora esse dolore"
} 
 </msg>
<msg timestamp="20210205 20:20:06.481" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.436" endtime="20210205 20:20:06.482"></status>
</kw>
<msg timestamp="20210205 20:20:06.482" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.434" endtime="20210205 20:20:06.482"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.484" endtime="20210205 20:20:06.486"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.483" endtime="20210205 20:20:06.486"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.482" endtime="20210205 20:20:06.486"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.487" endtime="20210205 20:20:06.488"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.486" endtime="20210205 20:20:06.488"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.489" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.488" endtime="20210205 20:20:06.489"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.563" level="INFO">${idvalue} = [70]</msg>
<status status="PASS" starttime="20210205 20:20:06.489" endtime="20210205 20:20:06.563"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:06.564" level="INFO">${responseid} = 70</msg>
<status status="PASS" starttime="20210205 20:20:06.564" endtime="20210205 20:20:06.564"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.564" endtime="20210205 20:20:06.565"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.566" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.565" endtime="20210205 20:20:06.566"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.488" endtime="20210205 20:20:06.566"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.434" endtime="20210205 20:20:06.566"></status>
</kw>
<kw name="${postid} = 71" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.568" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:06.567" endtime="20210205 20:20:06.568"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:06.612" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/71 
 path_url=/posts/71 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:06.612" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/71 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:07 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd75fd5efb5bf728586a841dab0898ee01612574407; expires=Mon, 08-Mar-21 01:20:07 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '939', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e8-Yh7j20Q0i9NFG2BtR9OGdKEdmek"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685d4ca0000299af808c000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2BfmUyTfnF27B4yPNsVJk9Xu4FWGcfZOmpLH6jz3sEhi60GgO%2FxCOIKzmUoUo7aDa7%2FyqoHlRr%2BSs%2FzYvS1aZvNDos088HUz4dgPcXnJac6D71S5pi%2F6iePfh44f5"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c0149a9299a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 71,
  "title": "et iusto veniam et illum aut fuga",
  "body": "occaecati a doloribus\niste saepe consectetur placeat eum voluptate dolorem et\nqui quo quia voluptas\nrerum ut id enim velit est perferendis"
} 
 </msg>
<msg timestamp="20210205 20:20:06.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.569" endtime="20210205 20:20:06.613"></status>
</kw>
<msg timestamp="20210205 20:20:06.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.566" endtime="20210205 20:20:06.613"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.616" endtime="20210205 20:20:06.619"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.615" endtime="20210205 20:20:06.619"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.614" endtime="20210205 20:20:06.619"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.621" endtime="20210205 20:20:06.621"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.619" endtime="20210205 20:20:06.621"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.623" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.622" endtime="20210205 20:20:06.623"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.692" level="INFO">${idvalue} = [71]</msg>
<status status="PASS" starttime="20210205 20:20:06.623" endtime="20210205 20:20:06.692"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:06.693" level="INFO">${responseid} = 71</msg>
<status status="PASS" starttime="20210205 20:20:06.693" endtime="20210205 20:20:06.694"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.694" endtime="20210205 20:20:06.694"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.695" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.695" endtime="20210205 20:20:06.695"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.622" endtime="20210205 20:20:06.695"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.566" endtime="20210205 20:20:06.695"></status>
</kw>
<kw name="${postid} = 72" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.696" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:06.696" endtime="20210205 20:20:06.697"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:06.850" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/72 
 path_url=/posts/72 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:06.850" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/72 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9bb8bca2df77a056ae8d85a123d3a4df1612574408; expires=Mon, 08-Mar-21 01:20:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '940', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"116-H6k0vQJtj/XCaxWK+1+y9a8ry70"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685d5470000c17aa191c000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=IEdEs%2FD7mSrsjcsyXSiqjsLVcX%2B45NtkzteUTM3YP0Q9p6N9fftl4v5f%2B0zgAWskyfWJA%2BqFSvEK%2F05a3wGAu0IPMM9GSjlRRWc1jF1JT5xDuH3rh0miutbRgk%2Bj"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c020a0fc17a-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 72,
  "title": "sint hic doloribus consequatur eos non id",
  "body": "quam occaecati qui deleniti consectetur\nconsequatur aut facere quas exercitationem aliquam hic voluptas\nneque id sunt ut aut accusamus\nsunt consectetur expedita inventore velit"
} 
 </msg>
<msg timestamp="20210205 20:20:06.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.697" endtime="20210205 20:20:06.851"></status>
</kw>
<msg timestamp="20210205 20:20:06.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.695" endtime="20210205 20:20:06.851"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.854" endtime="20210205 20:20:06.857"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.853" endtime="20210205 20:20:06.857"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.852" endtime="20210205 20:20:06.858"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.859" endtime="20210205 20:20:06.860"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.858" endtime="20210205 20:20:06.860"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.862" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.861" endtime="20210205 20:20:06.862"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.923" level="INFO">${idvalue} = [72]</msg>
<status status="PASS" starttime="20210205 20:20:06.862" endtime="20210205 20:20:06.924"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:06.926" level="INFO">${responseid} = 72</msg>
<status status="PASS" starttime="20210205 20:20:06.925" endtime="20210205 20:20:06.926"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.926" endtime="20210205 20:20:06.927"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.927" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.927" endtime="20210205 20:20:06.928"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.860" endtime="20210205 20:20:06.928"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.695" endtime="20210205 20:20:06.928"></status>
</kw>
<kw name="${postid} = 73" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.930" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:06.930" endtime="20210205 20:20:06.931"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:06.982" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/73 
 path_url=/posts/73 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:06.982" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/73 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df48b4b89a1fd9d6944a659adf3d0ecf31612574408; expires=Mon, 08-Mar-21 01:20:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '937', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11f-rOkoGp9hOJP88vceK/3kAJdMgVE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685d63000003805eaa4d000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=wh0x6BLtIcTE7PKDulwuqq2o65x4tl%2FVCbkwM%2BpeRRz87z%2BB3JMsgF0jeseoRN9KXOs5YrEFbYIgsFolDmvDvkUdwlzlv59cHgXc3aEuCrAVA3hJ6baWuvjIY3H%2F"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c038b2c3805-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 73,
  "title": "consequuntur deleniti eos quia temporibus ab aliquid at",
  "body": "voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\naut eum minima consequatur\ntempore cumque quae est et\net in consequuntur voluptatem voluptates aut"
} 
 </msg>
<msg timestamp="20210205 20:20:06.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.931" endtime="20210205 20:20:06.983"></status>
</kw>
<msg timestamp="20210205 20:20:06.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.928" endtime="20210205 20:20:06.983"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:06.986" endtime="20210205 20:20:06.989"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.985" endtime="20210205 20:20:06.989"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.984" endtime="20210205 20:20:06.990"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:06.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:06.991" endtime="20210205 20:20:06.992"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.990" endtime="20210205 20:20:06.992"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:06.993" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:06.993" endtime="20210205 20:20:06.993"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.066" level="INFO">${idvalue} = [73]</msg>
<status status="PASS" starttime="20210205 20:20:06.994" endtime="20210205 20:20:07.066"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:07.068" level="INFO">${responseid} = 73</msg>
<status status="PASS" starttime="20210205 20:20:07.067" endtime="20210205 20:20:07.068"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:07.068" endtime="20210205 20:20:07.069"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.069" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:07.069" endtime="20210205 20:20:07.069"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.992" endtime="20210205 20:20:07.070"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:06.928" endtime="20210205 20:20:07.070"></status>
</kw>
<kw name="${postid} = 74" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:07.071" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:07.071" endtime="20210205 20:20:07.072"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:07.160" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/74 
 path_url=/posts/74 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:07.160" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/74 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5c4ac77e3eb1e317ca69d6613bb94b431612574408; expires=Mon, 08-Mar-21 01:20:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '936', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"128-7qIwxKiVOzrfywOEfThc/blClHw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685d6dd0000e0c685207000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=hYLTSJb5Tm4DB1N79xMXYoJeGr%2Bo5VSi11kUC5d4uPKPSpyi1ktmA9G3loBxeNDpTULSmnEPxlAA84aoA6GGGMRINFK9KXwtQv1Q85UBw%2F%2Bvq3ivVXppgd%2FXNTZk"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c049e49e0c6-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 74,
  "title": "enim unde ratione doloribus quas enim ut sit sapiente",
  "body": "odit qui et et necessitatibus sint veniam\nmollitia amet doloremque molestiae commodi similique magnam et quam\nblanditiis est itaque\nquo et tenetur ratione occaecati molestiae tempora"
} 
 </msg>
<msg timestamp="20210205 20:20:07.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.072" endtime="20210205 20:20:07.161"></status>
</kw>
<msg timestamp="20210205 20:20:07.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.070" endtime="20210205 20:20:07.162"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:07.164" endtime="20210205 20:20:07.167"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.163" endtime="20210205 20:20:07.167"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.162" endtime="20210205 20:20:07.167"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:07.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.169" endtime="20210205 20:20:07.169"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.168" endtime="20210205 20:20:07.170"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.171" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:07.171" endtime="20210205 20:20:07.171"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.241" level="INFO">${idvalue} = [74]</msg>
<status status="PASS" starttime="20210205 20:20:07.171" endtime="20210205 20:20:07.241"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:07.242" level="INFO">${responseid} = 74</msg>
<status status="PASS" starttime="20210205 20:20:07.241" endtime="20210205 20:20:07.242"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:07.242" endtime="20210205 20:20:07.243"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.244" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:07.243" endtime="20210205 20:20:07.244"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.170" endtime="20210205 20:20:07.244"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.070" endtime="20210205 20:20:07.244"></status>
</kw>
<kw name="${postid} = 75" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:07.246" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:07.245" endtime="20210205 20:20:07.246"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:07.423" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/75 
 path_url=/posts/75 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:07.423" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/75 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d79f9a810953af1766002673d26374c3c1612574408; expires=Mon, 08-Mar-21 01:20:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '935', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"12d-f7+LvQ2H9gp0KtIQ9o5Rm53qeaE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685d7e70000e0b6b3192000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=E0gyxOqoxGf3AyVURK1iXXI79oRNu2dbZsUiLC7k0DR8EKVkSI6TybY5I2LJ3b8afdxyOtF%2B1%2BtJOt29%2BXpoePXZJKZVwmyTwrk0DJ1vb2AZORGBav6H4uZZ5ITR"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c0639ece0b6-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 75,
  "title": "dignissimos eum dolor ut enim et delectus in",
  "body": "commodi non non omnis et voluptas sit\nautem aut nobis magnam et sapiente voluptatem\net laborum repellat qui delectus facilis temporibus\nrerum amet et nemo voluptate expedita adipisci error dolorem"
} 
 </msg>
<msg timestamp="20210205 20:20:07.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.247" endtime="20210205 20:20:07.424"></status>
</kw>
<msg timestamp="20210205 20:20:07.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.244" endtime="20210205 20:20:07.424"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:07.427" endtime="20210205 20:20:07.430"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.426" endtime="20210205 20:20:07.430"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.425" endtime="20210205 20:20:07.431"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:07.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.432" endtime="20210205 20:20:07.433"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.431" endtime="20210205 20:20:07.433"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.434" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:07.434" endtime="20210205 20:20:07.434"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.504" level="INFO">${idvalue} = [75]</msg>
<status status="PASS" starttime="20210205 20:20:07.435" endtime="20210205 20:20:07.504"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:07.505" level="INFO">${responseid} = 75</msg>
<status status="PASS" starttime="20210205 20:20:07.504" endtime="20210205 20:20:07.505"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:07.505" endtime="20210205 20:20:07.506"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.506" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:07.506" endtime="20210205 20:20:07.506"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.433" endtime="20210205 20:20:07.507"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.244" endtime="20210205 20:20:07.507"></status>
</kw>
<kw name="${postid} = 76" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:07.509" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:07.508" endtime="20210205 20:20:07.510"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:07.672" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/76 
 path_url=/posts/76 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:07.672" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/76 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:08 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d780068e991ae9ead3c9da9b8394bfd521612574408; expires=Mon, 08-Mar-21 01:20:08 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '934', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"cc-u0/g+lWkxIsGyIKpelypYLpuJj8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12154', 'cf-request-id': '081685d8e20000c1894d2e3000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=C01HYSE%2BnntPd0%2BJBeuP0sxBM9c4eSWJNHXdYKfh9oLkUUBK1k3ZI5uPz0bs9O7%2FMnnPoN%2FyD7ZVHz8ZSgves6zyM6skUz4LEbqE8ftgm4SNs7YiFDdSx4VYJ1cv"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c07dedac189-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 76,
  "title": "doloremque officiis ad et non perferendis",
  "body": "ut animi facere\ntotam iusto tempore\nmolestiae eum aut et dolorem aperiam\nquaerat recusandae totam odio"
} 
 </msg>
<msg timestamp="20210205 20:20:07.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.510" endtime="20210205 20:20:07.673"></status>
</kw>
<msg timestamp="20210205 20:20:07.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.507" endtime="20210205 20:20:07.674"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:07.676" endtime="20210205 20:20:07.679"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.675" endtime="20210205 20:20:07.679"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.674" endtime="20210205 20:20:07.679"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:07.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.681" endtime="20210205 20:20:07.682"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.680" endtime="20210205 20:20:07.682"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.683" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:07.683" endtime="20210205 20:20:07.684"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.755" level="INFO">${idvalue} = [76]</msg>
<status status="PASS" starttime="20210205 20:20:07.684" endtime="20210205 20:20:07.756"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:07.757" level="INFO">${responseid} = 76</msg>
<status status="PASS" starttime="20210205 20:20:07.756" endtime="20210205 20:20:07.757"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:07.757" endtime="20210205 20:20:07.758"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.758" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:07.758" endtime="20210205 20:20:07.759"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.682" endtime="20210205 20:20:07.759"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.507" endtime="20210205 20:20:07.759"></status>
</kw>
<kw name="${postid} = 77" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:07.761" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:07.761" endtime="20210205 20:20:07.762"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:07.910" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/77 
 path_url=/posts/77 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:07.910" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/77 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d3ccee0d0a67045db92773a4de06951031612574409; expires=Mon, 08-Mar-21 01:20:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'x-powered-by': 'Express', 'x-ratelimit-limit': '1000', 'x-ratelimit-remaining': '933', 'x-ratelimit-reset': '1611555792', 'vary': 'Origin, Accept-Encoding', 'access-control-allow-credentials': 'true', 'cache-control': 'max-age=43200', 'pragma': 'no-cache', 'expires': '-1', 'x-content-type-options': 'nosniff', 'etag': 'W/"11f-2lbe4Q56bYTg/IcJf6JOSbSCscI"', 'via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685d96f000073b58685f000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=mnbMZLWDfaWl7E5Ctf9ZUjbspKIaf5BxgnCvL2TQiE8q382Nxvp2BkNLIXMZLOaA%2FSCTk20%2BdA%2BDagi40%2F3ziEnagzd9TtHaZg%2BXYHTMxhmlUWmYhFqDo7%2BN%2BsWq"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c08bfd573b5-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 77,
  "title": "necessitatibus quasi exercitationem odio",
  "body": "modi ut in nulla repudiandae dolorum nostrum eos\naut consequatur omnis\nut incidunt est omnis iste et quam\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident"
} 
 </msg>
<msg timestamp="20210205 20:20:07.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.762" endtime="20210205 20:20:07.911"></status>
</kw>
<msg timestamp="20210205 20:20:07.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.759" endtime="20210205 20:20:07.911"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:07.914" endtime="20210205 20:20:07.917"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.913" endtime="20210205 20:20:07.917"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.912" endtime="20210205 20:20:07.917"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:07.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.918" endtime="20210205 20:20:07.919"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.917" endtime="20210205 20:20:07.920"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.921" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:07.921" endtime="20210205 20:20:07.921"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.991" level="INFO">${idvalue} = [77]</msg>
<status status="PASS" starttime="20210205 20:20:07.921" endtime="20210205 20:20:07.991"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:07.992" level="INFO">${responseid} = 77</msg>
<status status="PASS" starttime="20210205 20:20:07.991" endtime="20210205 20:20:07.992"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:07.992" endtime="20210205 20:20:07.993"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:07.994" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:07.993" endtime="20210205 20:20:07.994"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.920" endtime="20210205 20:20:07.994"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.759" endtime="20210205 20:20:07.994"></status>
</kw>
<kw name="${postid} = 78" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:07.996" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:07.996" endtime="20210205 20:20:07.997"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:08.046" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/78 
 path_url=/posts/78 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:08.046" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/78 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dc9b4e4e66538927ea8ed16089dc4b8bc1612574409; expires=Mon, 08-Mar-21 01:20:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '934', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d3-xKs0MgAtIORio5QR/VxM9bC/XYc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685da57000003102cbd4000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=w4juY5VdkR1d%2Ff9nSDrDqXCkZYCOukvre7kXmIT8Ig22PlRNHVlNrWhaEdpRyVlc9WcPsjRfbr9Naf8pc%2BRV2bPH%2B2uqDyraSZzOC2qSNw6jqzal8gO330etBDfb"}]}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c0a2fd40310-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 78,
  "title": "quam voluptatibus rerum veritatis",
  "body": "nobis facilis odit tempore cupiditate quia\nassumenda doloribus rerum qui ea\nillum et qui totam\naut veniam repellendus"
} 
 </msg>
<msg timestamp="20210205 20:20:08.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.997" endtime="20210205 20:20:08.047"></status>
</kw>
<msg timestamp="20210205 20:20:08.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:07.995" endtime="20210205 20:20:08.048"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:08.050" endtime="20210205 20:20:08.053"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.049" endtime="20210205 20:20:08.053"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.048" endtime="20210205 20:20:08.053"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:08.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.055" endtime="20210205 20:20:08.056"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.054" endtime="20210205 20:20:08.056"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.057" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:08.057" endtime="20210205 20:20:08.058"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.138" level="INFO">${idvalue} = [78]</msg>
<status status="PASS" starttime="20210205 20:20:08.058" endtime="20210205 20:20:08.138"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:08.139" level="INFO">${responseid} = 78</msg>
<status status="PASS" starttime="20210205 20:20:08.138" endtime="20210205 20:20:08.139"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:08.139" endtime="20210205 20:20:08.140"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.140" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:08.140" endtime="20210205 20:20:08.141"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.056" endtime="20210205 20:20:08.141"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:07.994" endtime="20210205 20:20:08.141"></status>
</kw>
<kw name="${postid} = 79" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:08.143" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:08.142" endtime="20210205 20:20:08.143"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:08.210" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/79 
 path_url=/posts/79 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:08.210" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/79 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de7a31fb0fb3866b3ced13a495e56481e1612574409; expires=Mon, 08-Mar-21 01:20:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '932', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"110-2pubCm1Sfl7Y7qFtirsYZCcorgA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685db020000741d4e0a4000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=0Ti1pCbyInvQ%2FDk%2BnPF0ClFjKDTCUxtH9uCWir%2FtmBaYHaFZzaDXqqknF%2BJjSsdsTYM0g9OEhZMFPTTeV0DzHGdLibQ94U2rbHn1qRe7WCgzvGcv4GT8N%2FACwRjv"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c0b3fb3741d-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 79,
  "title": "pariatur consequatur quia magnam autem omnis non amet",
  "body": "libero accusantium et et facere incidunt sit dolorem\nnon excepturi qui quia sed laudantium\nquisquam molestiae ducimus est\nofficiis esse molestiae iste et quos"
} 
 </msg>
<msg timestamp="20210205 20:20:08.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.144" endtime="20210205 20:20:08.211"></status>
</kw>
<msg timestamp="20210205 20:20:08.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.141" endtime="20210205 20:20:08.212"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:08.214" endtime="20210205 20:20:08.217"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.213" endtime="20210205 20:20:08.217"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.212" endtime="20210205 20:20:08.218"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:08.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.219" endtime="20210205 20:20:08.219"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.218" endtime="20210205 20:20:08.220"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.221" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:08.221" endtime="20210205 20:20:08.221"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.292" level="INFO">${idvalue} = [79]</msg>
<status status="PASS" starttime="20210205 20:20:08.221" endtime="20210205 20:20:08.292"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:08.293" level="INFO">${responseid} = 79</msg>
<status status="PASS" starttime="20210205 20:20:08.292" endtime="20210205 20:20:08.293"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:08.293" endtime="20210205 20:20:08.294"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.294" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:08.294" endtime="20210205 20:20:08.294"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.220" endtime="20210205 20:20:08.295"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.141" endtime="20210205 20:20:08.295"></status>
</kw>
<kw name="${postid} = 80" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:08.297" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:08.296" endtime="20210205 20:20:08.297"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:08.440" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/80 
 path_url=/posts/80 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:08.440" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/80 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:09 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db9353df8be511b4dab9cf97856754ad71612574409; expires=Mon, 08-Mar-21 01:20:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '932', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11c-0HY/hHFa5y+uiyBfjGo3n4UDzu8"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685db860000ea49ce320000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=inyKuSddnC1tC3G7s73vU9X%2FNIzDv%2B2zBU6znmFehvQGvENyvuYSN8jTqwsmozh4lPbmOPNAjWSPHTjniopWPQFluyU4FAY21o1Grdx6OpsqThTxRX4c7kdYR%2BtR"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c0c0d91ea49-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 8,
  "id": 80,
  "title": "labore in ex et explicabo corporis aut quas",
  "body": "ex quod dolorem ea eum iure qui provident amet\nquia qui facere excepturi et repudiandae\nasperiores molestias provident\nminus incidunt vero fugit rerum sint sunt excepturi provident"
} 
 </msg>
<msg timestamp="20210205 20:20:08.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.297" endtime="20210205 20:20:08.441"></status>
</kw>
<msg timestamp="20210205 20:20:08.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.295" endtime="20210205 20:20:08.441"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:08.444" endtime="20210205 20:20:08.447"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.443" endtime="20210205 20:20:08.447"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.442" endtime="20210205 20:20:08.448"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:08.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.449" endtime="20210205 20:20:08.450"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.448" endtime="20210205 20:20:08.450"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.452" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:08.451" endtime="20210205 20:20:08.452"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.521" level="INFO">${idvalue} = [80]</msg>
<status status="PASS" starttime="20210205 20:20:08.452" endtime="20210205 20:20:08.521"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:08.522" level="INFO">${responseid} = 80</msg>
<status status="PASS" starttime="20210205 20:20:08.521" endtime="20210205 20:20:08.522"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:08.522" endtime="20210205 20:20:08.523"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.523" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:08.523" endtime="20210205 20:20:08.523"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.450" endtime="20210205 20:20:08.524"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.295" endtime="20210205 20:20:08.524"></status>
</kw>
<kw name="${postid} = 81" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:08.526" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:08.526" endtime="20210205 20:20:08.527"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:08.738" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/81 
 path_url=/posts/81 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:08.738" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/81 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dea839c6d9dcae0bb17c3d286056834001612574409; expires=Mon, 08-Mar-21 01:20:09 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '926', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"132-WQvU4RaGGtekXO5F/gjY3m5r2rE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685dd090000f24ffa8d9000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=5KIOocuaHle495HkKr1TxJBKpo5k4%2Bczo55mkr7YSoD701lcK%2BIJP1MCnIeTARZfZbEOr9DiodQuT3t2oH1fAOBNv3LVzTpFzwVajHVk3x6tTpmJqD5oEmTvHPo%2F"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c0e7921f24f-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 81,
  "title": "tempora rem veritatis voluptas quo dolores vero",
  "body": "facere qui nesciunt est voluptatum voluptatem nisi\nsequi eligendi necessitatibus ea at rerum itaque\nharum non ratione velit laboriosam quis consequuntur\nex officiis minima doloremque voluptas ut aut"
} 
 </msg>
<msg timestamp="20210205 20:20:08.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.527" endtime="20210205 20:20:08.739"></status>
</kw>
<msg timestamp="20210205 20:20:08.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.524" endtime="20210205 20:20:08.740"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:08.742" endtime="20210205 20:20:08.745"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.741" endtime="20210205 20:20:08.746"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.740" endtime="20210205 20:20:08.746"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:08.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.747" endtime="20210205 20:20:08.748"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.746" endtime="20210205 20:20:08.748"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.750" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:08.749" endtime="20210205 20:20:08.750"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.819" level="INFO">${idvalue} = [81]</msg>
<status status="PASS" starttime="20210205 20:20:08.750" endtime="20210205 20:20:08.819"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:08.820" level="INFO">${responseid} = 81</msg>
<status status="PASS" starttime="20210205 20:20:08.819" endtime="20210205 20:20:08.820"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:08.820" endtime="20210205 20:20:08.821"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.821" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:08.821" endtime="20210205 20:20:08.821"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.748" endtime="20210205 20:20:08.822"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.524" endtime="20210205 20:20:08.822"></status>
</kw>
<kw name="${postid} = 82" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:08.824" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:08.823" endtime="20210205 20:20:08.824"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:08.970" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/82 
 path_url=/posts/82 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:08.970" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/82 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d5fc9ef155b4de17acd9aae6a014af48c1612574410; expires=Mon, 08-Mar-21 01:20:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '929', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11c-eeFdAk1e1gEi8uyXsudyKBm1kV0"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685dd940000744580a90000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=VC4NdqxJ2gP6p8WCxvhE7nT1U2E8HSqrNc%2F7jrPu2WFXDGWhvGTz04E1mISH5YlWzBFesE6aJ%2Bzrpk189Lpk8FIs8Ovif9iZlohg%2BKcoHUjCTVQRLYUnT4u%2F1ug3"}],"max_age":604800,"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c0f5acd7445-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 82,
  "title": "laudantium voluptate suscipit sunt enim enim",
  "body": "ut libero sit aut totam inventore sunt\nporro sint qui sunt molestiae\nconsequatur cupiditate qui iste ducimus adipisci\ndolor enim assumenda soluta laboriosam amet iste delectus hic"
} 
 </msg>
<msg timestamp="20210205 20:20:08.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.825" endtime="20210205 20:20:08.971"></status>
</kw>
<msg timestamp="20210205 20:20:08.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.822" endtime="20210205 20:20:08.971"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:08.974" endtime="20210205 20:20:08.977"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.973" endtime="20210205 20:20:08.977"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.972" endtime="20210205 20:20:08.977"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:08.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:08.978" endtime="20210205 20:20:08.979"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.977" endtime="20210205 20:20:08.980"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:08.982" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:08.982" endtime="20210205 20:20:08.982"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.052" level="INFO">${idvalue} = [82]</msg>
<status status="PASS" starttime="20210205 20:20:08.982" endtime="20210205 20:20:09.052"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:09.053" level="INFO">${responseid} = 82</msg>
<status status="PASS" starttime="20210205 20:20:09.052" endtime="20210205 20:20:09.053"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:09.053" endtime="20210205 20:20:09.054"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.055" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:09.054" endtime="20210205 20:20:09.055"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.980" endtime="20210205 20:20:09.055"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:08.822" endtime="20210205 20:20:09.055"></status>
</kw>
<kw name="${postid} = 83" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:09.057" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:09.057" endtime="20210205 20:20:09.058"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:09.103" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/83 
 path_url=/posts/83 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:09.103" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/83 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9202ac81f3c92be38f8f9dd6a5950a381612574410; expires=Mon, 08-Mar-21 01:20:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1612010777', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"11d-e5gcZg196MbfLRv+N5/t/INg4U4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685de7e00007486ef167000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=S9j%2BFozIopH7Ft4EhDgOl4F88uzigg8ofBwqhFNhWyUaT%2BrGB%2FAAndl2Bhih8bFhwBasxuOyLFxj3o%2B1w4wfIyEpC7SiBL5ETwlYKHrd635D9hE7r24UxDrOqDYa"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c10ca937486-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 83,
  "title": "odit et voluptates doloribus alias odio et",
  "body": "est molestiae facilis quis tempora numquam nihil qui\nvoluptate sapiente consequatur est qui\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\nreprehenderit eius rem quibusdam"
} 
 </msg>
<msg timestamp="20210205 20:20:09.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.058" endtime="20210205 20:20:09.104"></status>
</kw>
<msg timestamp="20210205 20:20:09.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.056" endtime="20210205 20:20:09.104"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:09.107" endtime="20210205 20:20:09.111"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.106" endtime="20210205 20:20:09.111"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.105" endtime="20210205 20:20:09.111"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:09.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.112" endtime="20210205 20:20:09.113"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.111" endtime="20210205 20:20:09.113"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.115" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:09.114" endtime="20210205 20:20:09.115"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.176" level="INFO">${idvalue} = [83]</msg>
<status status="PASS" starttime="20210205 20:20:09.115" endtime="20210205 20:20:09.176"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:09.177" level="INFO">${responseid} = 83</msg>
<status status="PASS" starttime="20210205 20:20:09.176" endtime="20210205 20:20:09.177"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:09.177" endtime="20210205 20:20:09.177"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.178" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:09.177" endtime="20210205 20:20:09.178"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.114" endtime="20210205 20:20:09.178"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.056" endtime="20210205 20:20:09.178"></status>
</kw>
<kw name="${postid} = 84" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:09.179" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:09.179" endtime="20210205 20:20:09.179"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:09.264" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/84 
 path_url=/posts/84 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:09.264" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/84 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=ddf4ee0e7c85a6a56fc71d37916f3d8361612574410; expires=Mon, 08-Mar-21 01:20:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '927', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"10f-9j78zFP2xPokwlOnDdjXgjDNtRw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685df24000029af7c27f000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=2%2FDkNoSobBNXo%2B90GnK1eyZqANLA7TRvRuRJukEaUVIE7gR8Igqw9Oap07vXeZNVb%2F1Y8n3ZNzbeqgR%2BigyF9jE%2B2R%2FiPkjpqYFbfuChrC1YraBzqMkzyfvfQMy2"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c11d9e029af-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 84,
  "title": "optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut",
  "body": "sint molestiae magni a et quos\neaque et quasi\nut rerum debitis similique veniam\nrecusandae dignissimos dolor incidunt consequatur odio"
} 
 </msg>
<msg timestamp="20210205 20:20:09.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.180" endtime="20210205 20:20:09.264"></status>
</kw>
<msg timestamp="20210205 20:20:09.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.178" endtime="20210205 20:20:09.265"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:09.267" endtime="20210205 20:20:09.270"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.266" endtime="20210205 20:20:09.271"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.265" endtime="20210205 20:20:09.271"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:09.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.272" endtime="20210205 20:20:09.273"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.271" endtime="20210205 20:20:09.273"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.275" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:09.274" endtime="20210205 20:20:09.275"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.346" level="INFO">${idvalue} = [84]</msg>
<status status="PASS" starttime="20210205 20:20:09.275" endtime="20210205 20:20:09.346"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:09.347" level="INFO">${responseid} = 84</msg>
<status status="PASS" starttime="20210205 20:20:09.346" endtime="20210205 20:20:09.347"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:09.347" endtime="20210205 20:20:09.348"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.348" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:09.348" endtime="20210205 20:20:09.348"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.273" endtime="20210205 20:20:09.349"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.178" endtime="20210205 20:20:09.349"></status>
</kw>
<kw name="${postid} = 85" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:09.351" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:09.350" endtime="20210205 20:20:09.351"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:09.528" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/85 
 path_url=/posts/85 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:09.529" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/85 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=de5259e3fec87a5a01c55f707489a9d421612574410; expires=Mon, 08-Mar-21 01:20:10 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '926', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"120-EiZY//e3eHc6o7YCr0c2BxbG4NU"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685e02400002abc16879000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=hMneABCSVNdwPlEWDO2Qw7BNamMEx07W24xsP6n%2FGMp8rP9ieGY4Y5CAY%2BmXFQanSubqYEtrOOcno05Yry6hcXGXMtnwi252OTOUdsabDdHdeXa47vxcqq3AG5yW"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c136dda2abc-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 85,
  "title": "dolore veritatis porro provident adipisci blanditiis et sunt",
  "body": "similique sed nisi voluptas iusto omnis\nmollitia et quo\nassumenda suscipit officia magnam sint sed tempora\nenim provident pariatur praesentium atque animi amet ratione"
} 
 </msg>
<msg timestamp="20210205 20:20:09.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.351" endtime="20210205 20:20:09.529"></status>
</kw>
<msg timestamp="20210205 20:20:09.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.349" endtime="20210205 20:20:09.530"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:09.532" endtime="20210205 20:20:09.535"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.531" endtime="20210205 20:20:09.535"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.530" endtime="20210205 20:20:09.535"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:09.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.537" endtime="20210205 20:20:09.537"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.536" endtime="20210205 20:20:09.538"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.539" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:09.539" endtime="20210205 20:20:09.539"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.653" level="INFO">${idvalue} = [85]</msg>
<status status="PASS" starttime="20210205 20:20:09.539" endtime="20210205 20:20:09.654"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:09.654" level="INFO">${responseid} = 85</msg>
<status status="PASS" starttime="20210205 20:20:09.654" endtime="20210205 20:20:09.654"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:09.654" endtime="20210205 20:20:09.655"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.655" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:09.655" endtime="20210205 20:20:09.655"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.538" endtime="20210205 20:20:09.656"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.349" endtime="20210205 20:20:09.656"></status>
</kw>
<kw name="${postid} = 86" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:09.657" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:09.657" endtime="20210205 20:20:09.657"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:09.794" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/86 
 path_url=/posts/86 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:09.794" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/86 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d8a2816ef6a51a6f9170fc729c1d7655b1612574411; expires=Mon, 08-Mar-21 01:20:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '925', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"102-z1kgT9P52YzKL5Lr1auwY9AtvAY"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e1360000f0eed6b71000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=jvhGpqHUuGta4Zo2%2Bu1cFkUJVkG4zycDn5eWRf4ITfWwcapMUJO%2B%2FPO49xU6Kebh21fx90uRVnx71tzAa4Sv7INyq63kvXBWQ0VDEiWB%2Baa1JS7ygncYieabCFHr"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c152965f0ee-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 86,
  "title": "placeat quia et porro iste",
  "body": "quasi excepturi consequatur iste autem temporibus sed molestiae beatae\net quaerat et esse ut\nvoluptatem occaecati et vel explicabo autem\nasperiores pariatur deserunt optio"
} 
 </msg>
<msg timestamp="20210205 20:20:09.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.657" endtime="20210205 20:20:09.795"></status>
</kw>
<msg timestamp="20210205 20:20:09.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.656" endtime="20210205 20:20:09.795"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:09.798" endtime="20210205 20:20:09.801"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.797" endtime="20210205 20:20:09.801"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.796" endtime="20210205 20:20:09.801"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:09.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.803" endtime="20210205 20:20:09.803"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.802" endtime="20210205 20:20:09.804"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.805" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:09.805" endtime="20210205 20:20:09.805"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.877" level="INFO">${idvalue} = [86]</msg>
<status status="PASS" starttime="20210205 20:20:09.805" endtime="20210205 20:20:09.878"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:09.879" level="INFO">${responseid} = 86</msg>
<status status="PASS" starttime="20210205 20:20:09.878" endtime="20210205 20:20:09.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:09.879" endtime="20210205 20:20:09.879"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:09.880" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:09.880" endtime="20210205 20:20:09.880"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.804" endtime="20210205 20:20:09.880"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.656" endtime="20210205 20:20:09.881"></status>
</kw>
<kw name="${postid} = 87" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:09.882" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:09.882" endtime="20210205 20:20:09.883"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:10.030" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/87 
 path_url=/posts/87 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:10.031" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/87 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=deb51c63b5f113edf4e09393bd8435ad21612574411; expires=Mon, 08-Mar-21 01:20:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '924', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"c1-StXbFLxw6d815/mITyDVkJUK2xI"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e1b80000e09ef5bec000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=ubnLv0YL5IfGJ6WeRD5zf2Jn0tT3PgJ3GXjPpVdj3WRs6ch%2FKx32LrKyOEc%2Fd5LClJMzqJRxAceEghUfEpSNbS%2FsYjy6B67uis6ckTfIuGmadUZanYPzDcaurukm"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c15f8f2e09e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 87,
  "title": "nostrum quis quasi placeat",
  "body": "eos et molestiae\nnesciunt ut a\ndolores perspiciatis repellendus repellat aliquid\nmagnam sint rem ipsum est"
} 
 </msg>
<msg timestamp="20210205 20:20:10.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.883" endtime="20210205 20:20:10.031"></status>
</kw>
<msg timestamp="20210205 20:20:10.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:09.881" endtime="20210205 20:20:10.032"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.034" endtime="20210205 20:20:10.037"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.033" endtime="20210205 20:20:10.037"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.032" endtime="20210205 20:20:10.037"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.039" endtime="20210205 20:20:10.039"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.038" endtime="20210205 20:20:10.040"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.041" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.041" endtime="20210205 20:20:10.041"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.114" level="INFO">${idvalue} = [87]</msg>
<status status="PASS" starttime="20210205 20:20:10.041" endtime="20210205 20:20:10.114"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:10.115" level="INFO">${responseid} = 87</msg>
<status status="PASS" starttime="20210205 20:20:10.114" endtime="20210205 20:20:10.115"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.115" endtime="20210205 20:20:10.116"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.116" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.116" endtime="20210205 20:20:10.116"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.040" endtime="20210205 20:20:10.117"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:09.881" endtime="20210205 20:20:10.117"></status>
</kw>
<kw name="${postid} = 88" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.118" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:10.118" endtime="20210205 20:20:10.119"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:10.162" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/88 
 path_url=/posts/88 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:10.162" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/88 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9d812000e355c1792e8fd9348ecae6731612574411; expires=Mon, 08-Mar-21 01:20:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '924', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"bf-99RNmrovk8IKMxPgFxxzF7hL4oc"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e2a40000032bd2ad8000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=7ZpS%2BPdXBC9lNgg6VS%2F97BxGSSZpRX5Wdc4BnaL9EHtLWUo1vQJr8U0haZJePChV6zW7jnZQHfP5u1Fm6zWFYMhpnw2Q1eijYd5Cx4KFyExRAXRN15jIqE2UmvfK"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c176c0e032b-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 88,
  "title": "sapiente omnis fugit eos",
  "body": "consequatur omnis est praesentium\nducimus non iste\nneque hic deserunt\nvoluptatibus veniam cum et rerum sed"
} 
 </msg>
<msg timestamp="20210205 20:20:10.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.119" endtime="20210205 20:20:10.163"></status>
</kw>
<msg timestamp="20210205 20:20:10.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.117" endtime="20210205 20:20:10.164"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.166" endtime="20210205 20:20:10.169"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.165" endtime="20210205 20:20:10.169"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.164" endtime="20210205 20:20:10.169"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.171" endtime="20210205 20:20:10.171"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.170" endtime="20210205 20:20:10.172"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.173" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.173" endtime="20210205 20:20:10.173"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.241" level="INFO">${idvalue} = [88]</msg>
<status status="PASS" starttime="20210205 20:20:10.173" endtime="20210205 20:20:10.241"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:10.241" level="INFO">${responseid} = 88</msg>
<status status="PASS" starttime="20210205 20:20:10.241" endtime="20210205 20:20:10.241"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.242" endtime="20210205 20:20:10.242"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.242" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.242" endtime="20210205 20:20:10.242"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.172" endtime="20210205 20:20:10.243"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.117" endtime="20210205 20:20:10.243"></status>
</kw>
<kw name="${postid} = 89" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.244" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:10.243" endtime="20210205 20:20:10.244"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:10.350" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/89 
 path_url=/posts/89 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:10.350" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/89 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d737fa306b8b8d118577848fd37eca8501612574411; expires=Mon, 08-Mar-21 01:20:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '918', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fd-AJIAh/kcPdTbwy1rCjIlUhHPTtE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e3580000ea8ede8d5000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=CeE534US6eYfg2fonKg8tc4g8LAuMpOiEJBXxpPyS2vM78JBx1XdpJ3GJm%2F3IDeSD8JFwsgTPCF4OU%2FdedRU7kr%2BW3Z6MRSOKDAS%2FdYX0ZJH0KXbJTYwQ2JxFSMi"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c188ddeea8e-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 89,
  "title": "sint soluta et vel magnam aut ut sed qui",
  "body": "repellat aut aperiam totam temporibus autem et\narchitecto magnam ut\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\ntempore quas est"
} 
 </msg>
<msg timestamp="20210205 20:20:10.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.244" endtime="20210205 20:20:10.351"></status>
</kw>
<msg timestamp="20210205 20:20:10.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.243" endtime="20210205 20:20:10.351"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.354" endtime="20210205 20:20:10.357"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.353" endtime="20210205 20:20:10.357"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.352" endtime="20210205 20:20:10.357"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.358" endtime="20210205 20:20:10.359"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.357" endtime="20210205 20:20:10.359"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.361" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.360" endtime="20210205 20:20:10.361"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.432" level="INFO">${idvalue} = [89]</msg>
<status status="PASS" starttime="20210205 20:20:10.361" endtime="20210205 20:20:10.432"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:10.433" level="INFO">${responseid} = 89</msg>
<status status="PASS" starttime="20210205 20:20:10.432" endtime="20210205 20:20:10.433"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.433" endtime="20210205 20:20:10.434"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.435" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.434" endtime="20210205 20:20:10.435"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.360" endtime="20210205 20:20:10.435"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.243" endtime="20210205 20:20:10.435"></status>
</kw>
<kw name="${postid} = 90" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.437" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:10.436" endtime="20210205 20:20:10.437"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:10.582" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/90 
 path_url=/posts/90 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:10.582" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/90 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d9a4deefdf1ec18b70ca046dc20ab35ab1612574411; expires=Mon, 08-Mar-21 01:20:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '921', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"fa-J+W5iw5qyzTS6afRH4pq7cvG7wg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e449000074937ca22000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=D%2Bvak7P3wLuitNq64vHoYc9A8Ozpcm%2F3E2O7ZZyUq2jWU%2BJhcyQMdT3hj4RWr1r%2Fdsxf%2B1vsSKVr3%2BzepqR6%2FCCIlBOY5TSFIslPVCRwlbhYcIhLeINN%2Fu9yjLAO"}],"group":"cf-nel"}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c1a0acf7493-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 9,
  "id": 90,
  "title": "ad iusto omnis odit dolor voluptatibus",
  "body": "minus omnis soluta quia\nqui sed adipisci voluptates illum ipsam voluptatem\neligendi officia ut in\neos soluta similique molestias praesentium blanditiis"
} 
 </msg>
<msg timestamp="20210205 20:20:10.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.438" endtime="20210205 20:20:10.583"></status>
</kw>
<msg timestamp="20210205 20:20:10.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.435" endtime="20210205 20:20:10.584"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.586" endtime="20210205 20:20:10.589"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.585" endtime="20210205 20:20:10.589"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.584" endtime="20210205 20:20:10.590"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.591" endtime="20210205 20:20:10.592"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.590" endtime="20210205 20:20:10.592"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.593" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.593" endtime="20210205 20:20:10.593"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.665" level="INFO">${idvalue} = [90]</msg>
<status status="PASS" starttime="20210205 20:20:10.594" endtime="20210205 20:20:10.665"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:10.666" level="INFO">${responseid} = 90</msg>
<status status="PASS" starttime="20210205 20:20:10.665" endtime="20210205 20:20:10.666"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.666" endtime="20210205 20:20:10.667"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.667" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.667" endtime="20210205 20:20:10.667"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.592" endtime="20210205 20:20:10.668"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.435" endtime="20210205 20:20:10.668"></status>
</kw>
<kw name="${postid} = 91" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.669" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:10.669" endtime="20210205 20:20:10.670"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:10.715" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/91 
 path_url=/posts/91 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:10.715" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/91 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:11 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dd9f949ec9a83ca01b9c1959ce46c52061612574411; expires=Mon, 08-Mar-21 01:20:11 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '929', 'X-Ratelimit-Reset': '1611283708', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e5-l9aQa2/gJFY5FFG1O9x9F+UJRfA"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12155', 'cf-request-id': '081685e4ce0000e0a685ab5000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=yVQcO4g0%2BpboqB5VVnfqOrDWUSkh6SR01gpoH23CqL8JbGvRuEwDKNVRxsMuLLmI5tLxeuFeCDQ8oCU8M9MJbjxuSR2KSu7TGYtDwkErRv6nDhmsJ9CyzFl%2BgSyE"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c1aee47e0a6-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 91,
  "title": "aut amet sed",
  "body": "libero voluptate eveniet aperiam sed\nsunt placeat suscipit molestias\nsimilique fugit nam natus\nexpedita consequatur consequatur dolores quia eos et placeat"
} 
 </msg>
<msg timestamp="20210205 20:20:10.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.670" endtime="20210205 20:20:10.716"></status>
</kw>
<msg timestamp="20210205 20:20:10.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.668" endtime="20210205 20:20:10.717"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.721" endtime="20210205 20:20:10.725"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.719" endtime="20210205 20:20:10.726"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.717" endtime="20210205 20:20:10.726"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.729" endtime="20210205 20:20:10.730"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.727" endtime="20210205 20:20:10.730"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.733" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.732" endtime="20210205 20:20:10.733"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.799" level="INFO">${idvalue} = [91]</msg>
<status status="PASS" starttime="20210205 20:20:10.733" endtime="20210205 20:20:10.799"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:10.800" level="INFO">${responseid} = 91</msg>
<status status="PASS" starttime="20210205 20:20:10.799" endtime="20210205 20:20:10.800"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.800" endtime="20210205 20:20:10.800"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.801" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.800" endtime="20210205 20:20:10.801"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.731" endtime="20210205 20:20:10.801"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.668" endtime="20210205 20:20:10.801"></status>
</kw>
<kw name="${postid} = 92" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.802" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:10.802" endtime="20210205 20:20:10.803"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:10.843" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/92 
 path_url=/posts/92 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:10.843" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/92 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2c5bfcb88d3a7ed81f7f6d29f54b01301612574412; expires=Mon, 08-Mar-21 01:20:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '920', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e3-XfDSGc/SGdffvPSz0KEalY/lSfk"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e54d0000ceec98a9c000000001', 'Report-To': '{"max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=GaC%2Bp6QuBEordf8AExtc5kCu%2FPDIdE0eLro063GwaC49PWcTogJOsdKpdxRIkJPdsmLKc%2FZWIdb4vdFuTHiLyu%2B2NkL08maq5m%2FqQeAcIQZxYVnwbiAE4YA5Ga68"}],"group":"cf-nel"}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c1ba86dceec-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 92,
  "title": "ratione ex tenetur perferendis",
  "body": "aut et excepturi dicta laudantium sint rerum nihil\nlaudantium et at\na neque minima officia et similique libero et\ncommodi voluptate qui"
} 
 </msg>
<msg timestamp="20210205 20:20:10.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.803" endtime="20210205 20:20:10.843"></status>
</kw>
<msg timestamp="20210205 20:20:10.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.801" endtime="20210205 20:20:10.844"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.846" endtime="20210205 20:20:10.850"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.845" endtime="20210205 20:20:10.850"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.844" endtime="20210205 20:20:10.850"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.851" endtime="20210205 20:20:10.852"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.850" endtime="20210205 20:20:10.852"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.854" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.853" endtime="20210205 20:20:10.854"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.926" level="INFO">${idvalue} = [92]</msg>
<status status="PASS" starttime="20210205 20:20:10.854" endtime="20210205 20:20:10.926"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:10.927" level="INFO">${responseid} = 92</msg>
<status status="PASS" starttime="20210205 20:20:10.926" endtime="20210205 20:20:10.927"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.927" endtime="20210205 20:20:10.928"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.929" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.928" endtime="20210205 20:20:10.929"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.853" endtime="20210205 20:20:10.929"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.801" endtime="20210205 20:20:10.929"></status>
</kw>
<kw name="${postid} = 93" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.931" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:10.931" endtime="20210205 20:20:10.932"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:10.973" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/93 
 path_url=/posts/93 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:10.973" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/93 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d2db4ed230f74c1e0dd7ec2c39e3682701612574412; expires=Mon, 08-Mar-21 01:20:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '999', 'X-Ratelimit-Reset': '1611557052', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"107-ePXZ2FoBjuryDSZ4+6vLe92vrBs"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e5d1000029c665189000000001', 'Report-To': '{"group":"cf-nel","endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=IuCWm7HQnTKdW6mvttUhN9anGeCvu%2FaMY7IgfFDTRzhEP2GXXY3690GeG73hC9%2F2dDOCpFPxRZpSDaIymi6Zu4pQuIiIAp6kU1Q0oXyuK4bjZfYvrEDWvqvA8kzS"}],"max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c1c8d7d29c6-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 93,
  "title": "beatae soluta recusandae",
  "body": "dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\nvoluptatem quis enim recusandae ut sed sunt\nnostrum est odit totam\nsit error sed sunt eveniet provident qui nulla"
} 
 </msg>
<msg timestamp="20210205 20:20:10.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.932" endtime="20210205 20:20:10.974"></status>
</kw>
<msg timestamp="20210205 20:20:10.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.930" endtime="20210205 20:20:10.974"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:10.977" endtime="20210205 20:20:10.980"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.976" endtime="20210205 20:20:10.980"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.975" endtime="20210205 20:20:10.981"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:10.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:10.982" endtime="20210205 20:20:10.983"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.981" endtime="20210205 20:20:10.983"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:10.984" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:10.984" endtime="20210205 20:20:10.984"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.051" level="INFO">${idvalue} = [93]</msg>
<status status="PASS" starttime="20210205 20:20:10.985" endtime="20210205 20:20:11.051"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:11.052" level="INFO">${responseid} = 93</msg>
<status status="PASS" starttime="20210205 20:20:11.052" endtime="20210205 20:20:11.052"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.053" endtime="20210205 20:20:11.053"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.054" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.054" endtime="20210205 20:20:11.054"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.983" endtime="20210205 20:20:11.054"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:10.930" endtime="20210205 20:20:11.054"></status>
</kw>
<kw name="${postid} = 94" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.056" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:11.056" endtime="20210205 20:20:11.057"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:11.099" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/94 
 path_url=/posts/94 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:11.099" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/94 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d19bf7b6b582d7e07d80a4f181fc2befd1612574412; expires=Mon, 08-Mar-21 01:20:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '919', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"108-YgH61+NkjOflAIB5ysSTcOx0QTQ"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e64e0000381231065000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=zwCwQRulBCJALmrrMFYXV2HySHoPoJaQiKtQkcp9hnURVxY0ygqBSVvkaRRGWDJJmtc%2F3DijjfiBf13tHHLTHnC5orWd77BwkOzEL8OdSOATUHt3MsU9WZ7x6iH4"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c1d4c313812-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 94,
  "title": "qui qui voluptates illo iste minima",
  "body": "aspernatur expedita soluta quo ab ut similique\nexpedita dolores amet\nsed temporibus distinctio magnam saepe deleniti\nomnis facilis nam ipsum natus sint similique omnis"
} 
 </msg>
<msg timestamp="20210205 20:20:11.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.057" endtime="20210205 20:20:11.100"></status>
</kw>
<msg timestamp="20210205 20:20:11.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.055" endtime="20210205 20:20:11.100"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.103" endtime="20210205 20:20:11.106"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.102" endtime="20210205 20:20:11.106"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.101" endtime="20210205 20:20:11.106"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.107" endtime="20210205 20:20:11.108"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.106" endtime="20210205 20:20:11.108"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.110" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.109" endtime="20210205 20:20:11.110"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.181" level="INFO">${idvalue} = [94]</msg>
<status status="PASS" starttime="20210205 20:20:11.110" endtime="20210205 20:20:11.181"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:11.182" level="INFO">${responseid} = 94</msg>
<status status="PASS" starttime="20210205 20:20:11.181" endtime="20210205 20:20:11.182"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.182" endtime="20210205 20:20:11.183"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.183" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.183" endtime="20210205 20:20:11.183"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.109" endtime="20210205 20:20:11.184"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.055" endtime="20210205 20:20:11.184"></status>
</kw>
<kw name="${postid} = 95" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.186" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:11.185" endtime="20210205 20:20:11.186"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:11.229" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/95 
 path_url=/posts/95 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:11.229" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/95 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbbb51d8ab6b4e0aee455f74ce18bd8e01612574412; expires=Mon, 08-Mar-21 01:20:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '918', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"126-rrdOZSpMvdZiiYyTLDi2rkLG/Vw"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e6d2000029a30b303000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=Jm5sMew6GCoxXED3E66xHbmWVangm4dtK8NJGiTw57c6TaNgb3UYEkOn9MXw1AIZFzz65YBtLoNaOWerQsXm0o19MuC4B1HrniqZ5Gb8yFyxQkTlcieazXhhuTf2"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c1e1aa829a3-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 95,
  "title": "id minus libero illum nam ad officiis",
  "body": "earum voluptatem facere provident blanditiis velit laboriosam\npariatur accusamus odio saepe\ncumque dolor qui a dicta ab doloribus consequatur omnis\ncorporis cupiditate eaque assumenda ad nesciunt"
} 
 </msg>
<msg timestamp="20210205 20:20:11.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.186" endtime="20210205 20:20:11.230"></status>
</kw>
<msg timestamp="20210205 20:20:11.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.184" endtime="20210205 20:20:11.230"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.233" endtime="20210205 20:20:11.236"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.232" endtime="20210205 20:20:11.236"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.231" endtime="20210205 20:20:11.236"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.238" endtime="20210205 20:20:11.238"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.236" endtime="20210205 20:20:11.239"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.240" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.240" endtime="20210205 20:20:11.240"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.310" level="INFO">${idvalue} = [95]</msg>
<status status="PASS" starttime="20210205 20:20:11.240" endtime="20210205 20:20:11.310"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:11.311" level="INFO">${responseid} = 95</msg>
<status status="PASS" starttime="20210205 20:20:11.310" endtime="20210205 20:20:11.311"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.311" endtime="20210205 20:20:11.312"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.312" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.312" endtime="20210205 20:20:11.313"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.239" endtime="20210205 20:20:11.313"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.184" endtime="20210205 20:20:11.313"></status>
</kw>
<kw name="${postid} = 96" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.315" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:11.314" endtime="20210205 20:20:11.316"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:11.364" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/96 
 path_url=/posts/96 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:11.364" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/96 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=d7aeb63340798f4a141d05cab5c824f1d1612574412; expires=Mon, 08-Mar-21 01:20:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '909', 'X-Ratelimit-Reset': '1611704501', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f7-7coBGYTlaO8bCv0lNSqoAlkoszE"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e75400002ab4d32a3000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=K7W2oAWG6tBzNKjVUds5x5njq0KiLXNyn%2FH3lhO3ZgSx1LeU7SOU%2FsxTBsS2uaeS0zjCxBptxynor8UeghpefHtYXWhm7k5kdtQDPq6CkgfL29BZRi5F7CRqlzNs"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c1ee9e92ab4-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 96,
  "title": "quaerat velit veniam amet cupiditate aut numquam ut sequi",
  "body": "in non odio excepturi sint eum\nlabore voluptates vitae quia qui et\ninventore itaque rerum\nveniam non exercitationem delectus aut"
} 
 </msg>
<msg timestamp="20210205 20:20:11.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.316" endtime="20210205 20:20:11.365"></status>
</kw>
<msg timestamp="20210205 20:20:11.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.313" endtime="20210205 20:20:11.365"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.368" endtime="20210205 20:20:11.371"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.366" endtime="20210205 20:20:11.371"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.366" endtime="20210205 20:20:11.371"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.372" endtime="20210205 20:20:11.373"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.371" endtime="20210205 20:20:11.373"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.375" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.374" endtime="20210205 20:20:11.375"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.434" level="INFO">${idvalue} = [96]</msg>
<status status="PASS" starttime="20210205 20:20:11.375" endtime="20210205 20:20:11.434"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:11.435" level="INFO">${responseid} = 96</msg>
<status status="PASS" starttime="20210205 20:20:11.434" endtime="20210205 20:20:11.435"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.435" endtime="20210205 20:20:11.436"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.436" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.436" endtime="20210205 20:20:11.437"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.374" endtime="20210205 20:20:11.437"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.313" endtime="20210205 20:20:11.437"></status>
</kw>
<kw name="${postid} = 97" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.439" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:11.438" endtime="20210205 20:20:11.439"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:11.621" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/97 
 path_url=/posts/97 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:11.621" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/97 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=dbf86342bca049785eee764ef63a8be481612574412; expires=Mon, 08-Mar-21 01:20:12 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '916', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"13f-OIy2AGGq8mYJVydBUqG+k5NoCF4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e7c90000745573957000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=r5lYNb5axwDopjdMYD%2BonzL%2BUAnsJgpszBQAA5MT3GZY0l5J211V9E%2FB%2BHmFld0cM4k%2FxHArFoCKyfjzITokdXEFDB0pBjPhcKhOEJ4feSrpoAHsXrybivAurdfW"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c1facce7455-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 97,
  "title": "quas fugiat ut perspiciatis vero provident",
  "body": "eum non blanditiis soluta porro quibusdam voluptas\nvel voluptatem qui placeat dolores qui velit aut\nvel inventore aut cumque culpa explicabo aliquid at\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam"
} 
 </msg>
<msg timestamp="20210205 20:20:11.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.440" endtime="20210205 20:20:11.622"></status>
</kw>
<msg timestamp="20210205 20:20:11.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.437" endtime="20210205 20:20:11.623"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.625" endtime="20210205 20:20:11.628"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.624" endtime="20210205 20:20:11.628"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.623" endtime="20210205 20:20:11.628"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.630" endtime="20210205 20:20:11.631"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.629" endtime="20210205 20:20:11.631"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.632" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.632" endtime="20210205 20:20:11.632"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.682" level="INFO">${idvalue} = [97]</msg>
<status status="PASS" starttime="20210205 20:20:11.633" endtime="20210205 20:20:11.682"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:11.683" level="INFO">${responseid} = 97</msg>
<status status="PASS" starttime="20210205 20:20:11.682" endtime="20210205 20:20:11.683"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.683" endtime="20210205 20:20:11.683"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.683" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.683" endtime="20210205 20:20:11.684"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.631" endtime="20210205 20:20:11.684"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.437" endtime="20210205 20:20:11.684"></status>
</kw>
<kw name="${postid} = 98" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.685" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:11.685" endtime="20210205 20:20:11.685"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:11.740" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/98 
 path_url=/posts/98 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:11.740" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/98 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=db0d854b0a9b1095627c4fe4e4cc4a4b31612574413; expires=Mon, 08-Mar-21 01:20:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '908', 'X-Ratelimit-Reset': '1611792900', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"d1-AdCHAQW37rE37t8vXTeQZeKV7Cg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12157', 'cf-request-id': '081685e8c00000eaa612932000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=SAYlEUwTqdRNfiC0JapE01V09C2%2FCLZXYV9uGR2sh%2Bxsd719XInRYj%2BADjKTDAQaf5spPOMohSKgoNk34WLwPpDk08i9%2FnkVl5Lz95mILVnRT6RzpdbF3PRFNX3q"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '61d10c213cfbeaa6-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 98,
  "title": "laboriosam dolor voluptates",
  "body": "doloremque ex facilis sit sint culpa\nsoluta assumenda eligendi non ut eius\nsequi ducimus vel quasi\nveritatis est dolores"
} 
 </msg>
<msg timestamp="20210205 20:20:11.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.685" endtime="20210205 20:20:11.741"></status>
</kw>
<msg timestamp="20210205 20:20:11.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.684" endtime="20210205 20:20:11.741"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.744" endtime="20210205 20:20:11.747"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.743" endtime="20210205 20:20:11.747"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.742" endtime="20210205 20:20:11.747"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.749" endtime="20210205 20:20:11.749"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.748" endtime="20210205 20:20:11.750"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.751" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.751" endtime="20210205 20:20:11.751"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.811" level="INFO">${idvalue} = [98]</msg>
<status status="PASS" starttime="20210205 20:20:11.751" endtime="20210205 20:20:11.811"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:11.812" level="INFO">${responseid} = 98</msg>
<status status="PASS" starttime="20210205 20:20:11.811" endtime="20210205 20:20:11.812"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.812" endtime="20210205 20:20:11.812"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.813" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.813" endtime="20210205 20:20:11.813"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.750" endtime="20210205 20:20:11.813"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.684" endtime="20210205 20:20:11.813"></status>
</kw>
<kw name="${postid} = 99" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.814" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:11.814" endtime="20210205 20:20:11.815"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:11.853" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/99 
 path_url=/posts/99 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:11.853" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/99 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=da01d90d9a11080d49e8c904a6a31c5991612574413; expires=Mon, 08-Mar-21 01:20:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '913', 'X-Ratelimit-Reset': '1612493086', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"e0-aXopzb0YfAN1tmSD/RVNZPaEz8g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12157', 'cf-request-id': '081685e94000002ad0d50e2000000001', 'Report-To': '{"group":"cf-nel","max_age":604800,"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=%2Bu5n40JygLFva1F4ovB6engekI3ykV8CkRMNL%2BwpjXXIWNrmJQKNUB9TQECgPHw%2B6CxOuP5EGteDG1Up%2FZsWXFusn9ldySa%2FfBGJlodAyjSrDvwdAWyQSW72ZPuF"}]}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c220c112ad0-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 99,
  "title": "temporibus sit alias delectus eligendi possimus magni",
  "body": "quo deleniti praesentium dicta non quod\naut est molestias\nmolestias et officia quis nihil\nitaque dolorem quia"
} 
 </msg>
<msg timestamp="20210205 20:20:11.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.815" endtime="20210205 20:20:11.854"></status>
</kw>
<msg timestamp="20210205 20:20:11.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.813" endtime="20210205 20:20:11.854"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.857" endtime="20210205 20:20:11.859"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.855" endtime="20210205 20:20:11.860"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.854" endtime="20210205 20:20:11.860"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.861" endtime="20210205 20:20:11.862"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.860" endtime="20210205 20:20:11.862"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.864" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.863" endtime="20210205 20:20:11.864"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.938" level="INFO">${idvalue} = [99]</msg>
<status status="PASS" starttime="20210205 20:20:11.864" endtime="20210205 20:20:11.938"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:11.939" level="INFO">${responseid} = 99</msg>
<status status="PASS" starttime="20210205 20:20:11.938" endtime="20210205 20:20:11.939"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.939" endtime="20210205 20:20:11.940"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:11.940" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:11.940" endtime="20210205 20:20:11.940"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.862" endtime="20210205 20:20:11.941"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.813" endtime="20210205 20:20:11.941"></status>
</kw>
<kw name="${postid} = 100" type="foritem">
<kw name="INITIATE GET REQUEST" library="PostsHelper">
<arguments>
<arg>Get_Single_Post</arg>
<arg>${base_url}</arg>
<arg>/posts/${postid}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20210205 20:20:11.942" level="INFO">Creating Session using : alias=Get_Single_Post, url=http://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210205 20:20:11.942" endtime="20210205 20:20:11.943"></status>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<arguments>
<arg>${session_name}</arg>
<arg>${endpoint}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20210205 20:20:11.992" level="INFO">GET Request : url=http://jsonplaceholder.typicode.com/posts/100 
 path_url=/posts/100 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210205 20:20:11.992" level="INFO">GET Response : url=http://jsonplaceholder.typicode.com/posts/100 
 status=200, reason=OK 
 headers={'Date': 'Sat, 06 Feb 2021 01:20:13 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Set-Cookie': '__cfduid=df4fe8f96efeae366fc8c0882d1f3c8f61612574413; expires=Mon, 08-Mar-21 01:20:13 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '914', 'X-Ratelimit-Reset': '1611555792', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"f6-y8dGztR3vozPwBFMPtlocc+auJg"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '12156', 'cf-request-id': '081685e9c2000029eb6e3a1000000001', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report?s=1GN6Jrw5MjQ4S5ijsJhGrL3%2Bhvp8tGu6AMoqbgRGgH6b2HgrhO6CBc8xNJUbOA0RUggDR4rWGpvzP26KoyT2EvFw5J77jNywPmHkFcuStpb26UqmaRRueoiThgq3"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"max_age":604800,"report_to":"cf-nel"}', 'Server': 'cloudflare', 'CF-RAY': '61d10c22daba29eb-IAD', 'Content-Encoding': 'gzip'} 
 body={
  "userId": 10,
  "id": 100,
  "title": "at nam consequatur ea labore ea harum",
  "body": "cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut"
} 
 </msg>
<msg timestamp="20210205 20:20:11.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.944" endtime="20210205 20:20:11.993"></status>
</kw>
<msg timestamp="20210205 20:20:11.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210205 20:20:11.941" endtime="20210205 20:20:11.994"></status>
</kw>
<kw name="VALIDATE RESPONSE SCHEMA" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>Single</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${responsetype}' == 'All'</arg>
<arg>Validate Json</arg>
<arg>GET_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Single'</arg>
<arg>Validate Json</arg>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
<arg>ELSE IF</arg>
<arg>'${responsetype}' == 'Empty'</arg>
<arg>Validate Json</arg>
<arg>Empty.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<kw name="Validate Json" library="JSONSchemaLibrary">
<doc>Validates the sample JSON against the given schema.</doc>
<arguments>
<arg>GET_Single_Posts.schema.json</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:11.996" endtime="20210205 20:20:11.999"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.995" endtime="20210205 20:20:11.999"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.994" endtime="20210205 20:20:11.999"></status>
</kw>
<kw name="VALIDATE STATUS CODE" library="PostsHelper">
<arguments>
<arg>200</arg>
<arg>${response.status_code}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20210205 20:20:12.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210205 20:20:12.001" endtime="20210205 20:20:12.001"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:12.000" endtime="20210205 20:20:12.002"></status>
</kw>
<kw name="VALIDATE SINGLE RESPONSE ID" library="PostsHelper">
<arguments>
<arg>${response}</arg>
<arg>${postid}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:12.003" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:12.003" endtime="20210205 20:20:12.003"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:12.077" level="INFO">${idvalue} = [100]</msg>
<status status="PASS" starttime="20210205 20:20:12.003" endtime="20210205 20:20:12.077"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${idvalue}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${responseid}</var>
</assign>
<msg timestamp="20210205 20:20:12.078" level="INFO">${responseid} = 100</msg>
<status status="PASS" starttime="20210205 20:20:12.077" endtime="20210205 20:20:12.078"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${responseid}</arg>
<arg>${postidrequest}</arg>
</arguments>
<status status="PASS" starttime="20210205 20:20:12.078" endtime="20210205 20:20:12.079"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{idvalue}</var>
</assign>
<msg timestamp="20210205 20:20:12.079" level="INFO">@{idvalue} = [ ]</msg>
<status status="PASS" starttime="20210205 20:20:12.079" endtime="20210205 20:20:12.079"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:12.002" endtime="20210205 20:20:12.080"></status>
</kw>
<status status="PASS" starttime="20210205 20:20:11.941" endtime="20210205 20:20:12.080"></status>
</kw>
<status status="PASS" starttime="20210205 20:19:54.568" endtime="20210205 20:20:12.080"></status>
</kw>
<doc>Validate Response for Getting post by passing single post id</doc>
<tags>
<tag>Positive Extensive</tag>
</tags>
<status status="PASS" starttime="20210205 20:19:54.503" endtime="20210205 20:20:12.080" critical="yes"></status>
</test>
<status status="PASS" starttime="20210205 20:19:48.981" endtime="20210205 20:20:12.094"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Hybrid</stat>
<stat pass="2" fail="0">Negative</stat>
<stat pass="4" fail="0">Positive</stat>
<stat pass="1" fail="0">Positive Extensive</stat>
<stat pass="7" fail="0">Smoke</stat>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="TS001 Posts">TS001 Posts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
